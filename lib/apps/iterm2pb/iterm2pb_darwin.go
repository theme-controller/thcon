// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: iterm2.proto

package iterm2pb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type SelectionMode int32

const (
	SelectionMode_CHARACTER  SelectionMode = 0
	SelectionMode_WORD       SelectionMode = 1
	SelectionMode_LINE       SelectionMode = 2
	SelectionMode_SMART      SelectionMode = 3
	SelectionMode_BOX        SelectionMode = 4
	SelectionMode_WHOLE_LINE SelectionMode = 5
)

// Enum value maps for SelectionMode.
var (
	SelectionMode_name = map[int32]string{
		0: "CHARACTER",
		1: "WORD",
		2: "LINE",
		3: "SMART",
		4: "BOX",
		5: "WHOLE_LINE",
	}
	SelectionMode_value = map[string]int32{
		"CHARACTER":  0,
		"WORD":       1,
		"LINE":       2,
		"SMART":      3,
		"BOX":        4,
		"WHOLE_LINE": 5,
	}
)

func (x SelectionMode) Enum() *SelectionMode {
	p := new(SelectionMode)
	*p = x
	return p
}

func (x SelectionMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SelectionMode) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[0].Descriptor()
}

func (SelectionMode) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[0]
}

func (x SelectionMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SelectionMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SelectionMode(num)
	return nil
}

// Deprecated: Use SelectionMode.Descriptor instead.
func (SelectionMode) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{0}
}

type NotificationType int32

const (
	// Notifications that use the `session` parameter.
	NotificationType_NOTIFY_ON_KEYSTROKE     NotificationType = 1
	NotificationType_NOTIFY_ON_SCREEN_UPDATE NotificationType = 2
	NotificationType_NOTIFY_ON_PROMPT        NotificationType = 3
	// Deprecated: Do not use.
	NotificationType_NOTIFY_ON_LOCATION_CHANGE        NotificationType = 4
	NotificationType_NOTIFY_ON_CUSTOM_ESCAPE_SEQUENCE NotificationType = 5
	NotificationType_NOTIFY_ON_VARIABLE_CHANGE        NotificationType = 12
	NotificationType_KEYSTROKE_FILTER                 NotificationType = 14 // Does not send a notification
	// Notifications that ignore the `session` parameter.
	NotificationType_NOTIFY_ON_NEW_SESSION           NotificationType = 6
	NotificationType_NOTIFY_ON_TERMINATE_SESSION     NotificationType = 7
	NotificationType_NOTIFY_ON_LAYOUT_CHANGE         NotificationType = 8
	NotificationType_NOTIFY_ON_FOCUS_CHANGE          NotificationType = 9
	NotificationType_NOTIFY_ON_SERVER_ORIGINATED_RPC NotificationType = 10
	NotificationType_NOTIFY_ON_BROADCAST_CHANGE      NotificationType = 11
	NotificationType_NOTIFY_ON_PROFILE_CHANGE        NotificationType = 13
)

// Enum value maps for NotificationType.
var (
	NotificationType_name = map[int32]string{
		1:  "NOTIFY_ON_KEYSTROKE",
		2:  "NOTIFY_ON_SCREEN_UPDATE",
		3:  "NOTIFY_ON_PROMPT",
		4:  "NOTIFY_ON_LOCATION_CHANGE",
		5:  "NOTIFY_ON_CUSTOM_ESCAPE_SEQUENCE",
		12: "NOTIFY_ON_VARIABLE_CHANGE",
		14: "KEYSTROKE_FILTER",
		6:  "NOTIFY_ON_NEW_SESSION",
		7:  "NOTIFY_ON_TERMINATE_SESSION",
		8:  "NOTIFY_ON_LAYOUT_CHANGE",
		9:  "NOTIFY_ON_FOCUS_CHANGE",
		10: "NOTIFY_ON_SERVER_ORIGINATED_RPC",
		11: "NOTIFY_ON_BROADCAST_CHANGE",
		13: "NOTIFY_ON_PROFILE_CHANGE",
	}
	NotificationType_value = map[string]int32{
		"NOTIFY_ON_KEYSTROKE":              1,
		"NOTIFY_ON_SCREEN_UPDATE":          2,
		"NOTIFY_ON_PROMPT":                 3,
		"NOTIFY_ON_LOCATION_CHANGE":        4,
		"NOTIFY_ON_CUSTOM_ESCAPE_SEQUENCE": 5,
		"NOTIFY_ON_VARIABLE_CHANGE":        12,
		"KEYSTROKE_FILTER":                 14,
		"NOTIFY_ON_NEW_SESSION":            6,
		"NOTIFY_ON_TERMINATE_SESSION":      7,
		"NOTIFY_ON_LAYOUT_CHANGE":          8,
		"NOTIFY_ON_FOCUS_CHANGE":           9,
		"NOTIFY_ON_SERVER_ORIGINATED_RPC":  10,
		"NOTIFY_ON_BROADCAST_CHANGE":       11,
		"NOTIFY_ON_PROFILE_CHANGE":         13,
	}
)

func (x NotificationType) Enum() *NotificationType {
	p := new(NotificationType)
	*p = x
	return p
}

func (x NotificationType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationType) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[1].Descriptor()
}

func (NotificationType) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[1]
}

func (x NotificationType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NotificationType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NotificationType(num)
	return nil
}

// Deprecated: Use NotificationType.Descriptor instead.
func (NotificationType) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{1}
}

type Modifiers int32

const (
	Modifiers_CONTROL  Modifiers = 1
	Modifiers_OPTION   Modifiers = 2
	Modifiers_COMMAND  Modifiers = 3
	Modifiers_SHIFT    Modifiers = 4
	Modifiers_FUNCTION Modifiers = 5
	Modifiers_NUMPAD   Modifiers = 6
)

// Enum value maps for Modifiers.
var (
	Modifiers_name = map[int32]string{
		1: "CONTROL",
		2: "OPTION",
		3: "COMMAND",
		4: "SHIFT",
		5: "FUNCTION",
		6: "NUMPAD",
	}
	Modifiers_value = map[string]int32{
		"CONTROL":  1,
		"OPTION":   2,
		"COMMAND":  3,
		"SHIFT":    4,
		"FUNCTION": 5,
		"NUMPAD":   6,
	}
)

func (x Modifiers) Enum() *Modifiers {
	p := new(Modifiers)
	*p = x
	return p
}

func (x Modifiers) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Modifiers) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[2].Descriptor()
}

func (Modifiers) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[2]
}

func (x Modifiers) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *Modifiers) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = Modifiers(num)
	return nil
}

// Deprecated: Use Modifiers.Descriptor instead.
func (Modifiers) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{2}
}

type VariableScope int32

const (
	VariableScope_SESSION VariableScope = 1
	VariableScope_TAB     VariableScope = 2
	VariableScope_WINDOW  VariableScope = 3
	VariableScope_APP     VariableScope = 4
)

// Enum value maps for VariableScope.
var (
	VariableScope_name = map[int32]string{
		1: "SESSION",
		2: "TAB",
		3: "WINDOW",
		4: "APP",
	}
	VariableScope_value = map[string]int32{
		"SESSION": 1,
		"TAB":     2,
		"WINDOW":  3,
		"APP":     4,
	}
)

func (x VariableScope) Enum() *VariableScope {
	p := new(VariableScope)
	*p = x
	return p
}

func (x VariableScope) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VariableScope) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[3].Descriptor()
}

func (VariableScope) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[3]
}

func (x VariableScope) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *VariableScope) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = VariableScope(num)
	return nil
}

// Deprecated: Use VariableScope.Descriptor instead.
func (VariableScope) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{3}
}

type PromptMonitorMode int32

const (
	PromptMonitorMode_PROMPT        PromptMonitorMode = 1
	PromptMonitorMode_COMMAND_START PromptMonitorMode = 2
	PromptMonitorMode_COMMAND_END   PromptMonitorMode = 3
)

// Enum value maps for PromptMonitorMode.
var (
	PromptMonitorMode_name = map[int32]string{
		1: "PROMPT",
		2: "COMMAND_START",
		3: "COMMAND_END",
	}
	PromptMonitorMode_value = map[string]int32{
		"PROMPT":        1,
		"COMMAND_START": 2,
		"COMMAND_END":   3,
	}
)

func (x PromptMonitorMode) Enum() *PromptMonitorMode {
	p := new(PromptMonitorMode)
	*p = x
	return p
}

func (x PromptMonitorMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PromptMonitorMode) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[4].Descriptor()
}

func (PromptMonitorMode) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[4]
}

func (x PromptMonitorMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PromptMonitorMode) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PromptMonitorMode(num)
	return nil
}

// Deprecated: Use PromptMonitorMode.Descriptor instead.
func (PromptMonitorMode) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{4}
}

type InvokeFunctionResponse_Status int32

const (
	InvokeFunctionResponse_TIMEOUT           InvokeFunctionResponse_Status = 1
	InvokeFunctionResponse_FAILED            InvokeFunctionResponse_Status = 2
	InvokeFunctionResponse_REQUEST_MALFORMED InvokeFunctionResponse_Status = 3
	InvokeFunctionResponse_INVALID_ID        InvokeFunctionResponse_Status = 4
)

// Enum value maps for InvokeFunctionResponse_Status.
var (
	InvokeFunctionResponse_Status_name = map[int32]string{
		1: "TIMEOUT",
		2: "FAILED",
		3: "REQUEST_MALFORMED",
		4: "INVALID_ID",
	}
	InvokeFunctionResponse_Status_value = map[string]int32{
		"TIMEOUT":           1,
		"FAILED":            2,
		"REQUEST_MALFORMED": 3,
		"INVALID_ID":        4,
	}
)

func (x InvokeFunctionResponse_Status) Enum() *InvokeFunctionResponse_Status {
	p := new(InvokeFunctionResponse_Status)
	*p = x
	return p
}

func (x InvokeFunctionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InvokeFunctionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[5].Descriptor()
}

func (InvokeFunctionResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[5]
}

func (x InvokeFunctionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *InvokeFunctionResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = InvokeFunctionResponse_Status(num)
	return nil
}

// Deprecated: Use InvokeFunctionResponse_Status.Descriptor instead.
func (InvokeFunctionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{3, 0}
}

type CloseResponse_Status int32

const (
	CloseResponse_OK            CloseResponse_Status = 0
	CloseResponse_NOT_FOUND     CloseResponse_Status = 1
	CloseResponse_USER_DECLINED CloseResponse_Status = 2
)

// Enum value maps for CloseResponse_Status.
var (
	CloseResponse_Status_name = map[int32]string{
		0: "OK",
		1: "NOT_FOUND",
		2: "USER_DECLINED",
	}
	CloseResponse_Status_value = map[string]int32{
		"OK":            0,
		"NOT_FOUND":     1,
		"USER_DECLINED": 2,
	}
)

func (x CloseResponse_Status) Enum() *CloseResponse_Status {
	p := new(CloseResponse_Status)
	*p = x
	return p
}

func (x CloseResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloseResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[6].Descriptor()
}

func (CloseResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[6]
}

func (x CloseResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CloseResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CloseResponse_Status(num)
	return nil
}

// Deprecated: Use CloseResponse_Status.Descriptor instead.
func (CloseResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{5, 0}
}

type SetBroadcastDomainsResponse_Status int32

const (
	SetBroadcastDomainsResponse_OK                             SetBroadcastDomainsResponse_Status = 0
	SetBroadcastDomainsResponse_SESSION_NOT_FOUND              SetBroadcastDomainsResponse_Status = 1
	SetBroadcastDomainsResponse_BROADCAST_DOMAINS_NOT_DISJOINT SetBroadcastDomainsResponse_Status = 2
	SetBroadcastDomainsResponse_SESSIONS_NOT_IN_SAME_WINDOW    SetBroadcastDomainsResponse_Status = 3
)

// Enum value maps for SetBroadcastDomainsResponse_Status.
var (
	SetBroadcastDomainsResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "BROADCAST_DOMAINS_NOT_DISJOINT",
		3: "SESSIONS_NOT_IN_SAME_WINDOW",
	}
	SetBroadcastDomainsResponse_Status_value = map[string]int32{
		"OK":                             0,
		"SESSION_NOT_FOUND":              1,
		"BROADCAST_DOMAINS_NOT_DISJOINT": 2,
		"SESSIONS_NOT_IN_SAME_WINDOW":    3,
	}
)

func (x SetBroadcastDomainsResponse_Status) Enum() *SetBroadcastDomainsResponse_Status {
	p := new(SetBroadcastDomainsResponse_Status)
	*p = x
	return p
}

func (x SetBroadcastDomainsResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetBroadcastDomainsResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[7].Descriptor()
}

func (SetBroadcastDomainsResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[7]
}

func (x SetBroadcastDomainsResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SetBroadcastDomainsResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SetBroadcastDomainsResponse_Status(num)
	return nil
}

// Deprecated: Use SetBroadcastDomainsResponse_Status.Descriptor instead.
func (SetBroadcastDomainsResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{7, 0}
}

type StatusBarComponentResponse_Status int32

const (
	StatusBarComponentResponse_OK                 StatusBarComponentResponse_Status = 0
	StatusBarComponentResponse_SESSION_NOT_FOUND  StatusBarComponentResponse_Status = 1
	StatusBarComponentResponse_REQUEST_MALFORMED  StatusBarComponentResponse_Status = 2
	StatusBarComponentResponse_INVALID_IDENTIFIER StatusBarComponentResponse_Status = 3
)

// Enum value maps for StatusBarComponentResponse_Status.
var (
	StatusBarComponentResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "REQUEST_MALFORMED",
		3: "INVALID_IDENTIFIER",
	}
	StatusBarComponentResponse_Status_value = map[string]int32{
		"OK":                 0,
		"SESSION_NOT_FOUND":  1,
		"REQUEST_MALFORMED":  2,
		"INVALID_IDENTIFIER": 3,
	}
)

func (x StatusBarComponentResponse_Status) Enum() *StatusBarComponentResponse_Status {
	p := new(StatusBarComponentResponse_Status)
	*p = x
	return p
}

func (x StatusBarComponentResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (StatusBarComponentResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[8].Descriptor()
}

func (StatusBarComponentResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[8]
}

func (x StatusBarComponentResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *StatusBarComponentResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = StatusBarComponentResponse_Status(num)
	return nil
}

// Deprecated: Use StatusBarComponentResponse_Status.Descriptor instead.
func (StatusBarComponentResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{9, 0}
}

type SelectionResponse_Status int32

const (
	SelectionResponse_OK                SelectionResponse_Status = 0
	SelectionResponse_INVALID_SESSION   SelectionResponse_Status = 1
	SelectionResponse_INVALID_RANGE     SelectionResponse_Status = 2
	SelectionResponse_REQUEST_MALFORMED SelectionResponse_Status = 3
)

// Enum value maps for SelectionResponse_Status.
var (
	SelectionResponse_Status_name = map[int32]string{
		0: "OK",
		1: "INVALID_SESSION",
		2: "INVALID_RANGE",
		3: "REQUEST_MALFORMED",
	}
	SelectionResponse_Status_value = map[string]int32{
		"OK":                0,
		"INVALID_SESSION":   1,
		"INVALID_RANGE":     2,
		"REQUEST_MALFORMED": 3,
	}
)

func (x SelectionResponse_Status) Enum() *SelectionResponse_Status {
	p := new(SelectionResponse_Status)
	*p = x
	return p
}

func (x SelectionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SelectionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[9].Descriptor()
}

func (SelectionResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[9]
}

func (x SelectionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SelectionResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SelectionResponse_Status(num)
	return nil
}

// Deprecated: Use SelectionResponse_Status.Descriptor instead.
func (SelectionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{14, 0}
}

type ColorPresetResponse_Status int32

const (
	ColorPresetResponse_OK                ColorPresetResponse_Status = 0
	ColorPresetResponse_PRESET_NOT_FOUND  ColorPresetResponse_Status = 1
	ColorPresetResponse_REQUEST_MALFORMED ColorPresetResponse_Status = 2
)

// Enum value maps for ColorPresetResponse_Status.
var (
	ColorPresetResponse_Status_name = map[int32]string{
		0: "OK",
		1: "PRESET_NOT_FOUND",
		2: "REQUEST_MALFORMED",
	}
	ColorPresetResponse_Status_value = map[string]int32{
		"OK":                0,
		"PRESET_NOT_FOUND":  1,
		"REQUEST_MALFORMED": 2,
	}
)

func (x ColorPresetResponse_Status) Enum() *ColorPresetResponse_Status {
	p := new(ColorPresetResponse_Status)
	*p = x
	return p
}

func (x ColorPresetResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ColorPresetResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[10].Descriptor()
}

func (ColorPresetResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[10]
}

func (x ColorPresetResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ColorPresetResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ColorPresetResponse_Status(num)
	return nil
}

// Deprecated: Use ColorPresetResponse_Status.Descriptor instead.
func (ColorPresetResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{16, 0}
}

type PreferencesResponse_Result_SetPreferenceResult_Status int32

const (
	PreferencesResponse_Result_SetPreferenceResult_OK            PreferencesResponse_Result_SetPreferenceResult_Status = 0
	PreferencesResponse_Result_SetPreferenceResult_BAD_JSON      PreferencesResponse_Result_SetPreferenceResult_Status = 1
	PreferencesResponse_Result_SetPreferenceResult_INVALID_VALUE PreferencesResponse_Result_SetPreferenceResult_Status = 2 // Not legal for a plist
)

// Enum value maps for PreferencesResponse_Result_SetPreferenceResult_Status.
var (
	PreferencesResponse_Result_SetPreferenceResult_Status_name = map[int32]string{
		0: "OK",
		1: "BAD_JSON",
		2: "INVALID_VALUE",
	}
	PreferencesResponse_Result_SetPreferenceResult_Status_value = map[string]int32{
		"OK":            0,
		"BAD_JSON":      1,
		"INVALID_VALUE": 2,
	}
)

func (x PreferencesResponse_Result_SetPreferenceResult_Status) Enum() *PreferencesResponse_Result_SetPreferenceResult_Status {
	p := new(PreferencesResponse_Result_SetPreferenceResult_Status)
	*p = x
	return p
}

func (x PreferencesResponse_Result_SetPreferenceResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreferencesResponse_Result_SetPreferenceResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[11].Descriptor()
}

func (PreferencesResponse_Result_SetPreferenceResult_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[11]
}

func (x PreferencesResponse_Result_SetPreferenceResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PreferencesResponse_Result_SetPreferenceResult_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PreferencesResponse_Result_SetPreferenceResult_Status(num)
	return nil
}

// Deprecated: Use PreferencesResponse_Result_SetPreferenceResult_Status.Descriptor instead.
func (PreferencesResponse_Result_SetPreferenceResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0, 0, 0}
}

type PreferencesResponse_Result_SetDefaultProfileResult_Status int32

const (
	PreferencesResponse_Result_SetDefaultProfileResult_OK       PreferencesResponse_Result_SetDefaultProfileResult_Status = 0
	PreferencesResponse_Result_SetDefaultProfileResult_BAD_GUID PreferencesResponse_Result_SetDefaultProfileResult_Status = 1
)

// Enum value maps for PreferencesResponse_Result_SetDefaultProfileResult_Status.
var (
	PreferencesResponse_Result_SetDefaultProfileResult_Status_name = map[int32]string{
		0: "OK",
		1: "BAD_GUID",
	}
	PreferencesResponse_Result_SetDefaultProfileResult_Status_value = map[string]int32{
		"OK":       0,
		"BAD_GUID": 1,
	}
)

func (x PreferencesResponse_Result_SetDefaultProfileResult_Status) Enum() *PreferencesResponse_Result_SetDefaultProfileResult_Status {
	p := new(PreferencesResponse_Result_SetDefaultProfileResult_Status)
	*p = x
	return p
}

func (x PreferencesResponse_Result_SetDefaultProfileResult_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PreferencesResponse_Result_SetDefaultProfileResult_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[12].Descriptor()
}

func (PreferencesResponse_Result_SetDefaultProfileResult_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[12]
}

func (x PreferencesResponse_Result_SetDefaultProfileResult_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *PreferencesResponse_Result_SetDefaultProfileResult_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = PreferencesResponse_Result_SetDefaultProfileResult_Status(num)
	return nil
}

// Deprecated: Use PreferencesResponse_Result_SetDefaultProfileResult_Status.Descriptor instead.
func (PreferencesResponse_Result_SetDefaultProfileResult_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0, 2, 0}
}

type ReorderTabsResponse_Status int32

const (
	ReorderTabsResponse_OK                 ReorderTabsResponse_Status = 0
	ReorderTabsResponse_INVALID_ASSIGNMENT ReorderTabsResponse_Status = 1 // e.g., duplicate tab id
	ReorderTabsResponse_INVALID_WINDOW_ID  ReorderTabsResponse_Status = 2
	ReorderTabsResponse_INVALID_TAB_ID     ReorderTabsResponse_Status = 3
)

// Enum value maps for ReorderTabsResponse_Status.
var (
	ReorderTabsResponse_Status_name = map[int32]string{
		0: "OK",
		1: "INVALID_ASSIGNMENT",
		2: "INVALID_WINDOW_ID",
		3: "INVALID_TAB_ID",
	}
	ReorderTabsResponse_Status_value = map[string]int32{
		"OK":                 0,
		"INVALID_ASSIGNMENT": 1,
		"INVALID_WINDOW_ID":  2,
		"INVALID_TAB_ID":     3,
	}
)

func (x ReorderTabsResponse_Status) Enum() *ReorderTabsResponse_Status {
	p := new(ReorderTabsResponse_Status)
	*p = x
	return p
}

func (x ReorderTabsResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ReorderTabsResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[13].Descriptor()
}

func (ReorderTabsResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[13]
}

func (x ReorderTabsResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ReorderTabsResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ReorderTabsResponse_Status(num)
	return nil
}

// Deprecated: Use ReorderTabsResponse_Status.Descriptor instead.
func (ReorderTabsResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{20, 0}
}

type TmuxResponse_Status int32

const (
	TmuxResponse_OK                    TmuxResponse_Status = 0
	TmuxResponse_INVALID_REQUEST       TmuxResponse_Status = 1
	TmuxResponse_INVALID_CONNECTION_ID TmuxResponse_Status = 2
	TmuxResponse_INVALID_WINDOW_ID     TmuxResponse_Status = 3
)

// Enum value maps for TmuxResponse_Status.
var (
	TmuxResponse_Status_name = map[int32]string{
		0: "OK",
		1: "INVALID_REQUEST",
		2: "INVALID_CONNECTION_ID",
		3: "INVALID_WINDOW_ID",
	}
	TmuxResponse_Status_value = map[string]int32{
		"OK":                    0,
		"INVALID_REQUEST":       1,
		"INVALID_CONNECTION_ID": 2,
		"INVALID_WINDOW_ID":     3,
	}
)

func (x TmuxResponse_Status) Enum() *TmuxResponse_Status {
	p := new(TmuxResponse_Status)
	*p = x
	return p
}

func (x TmuxResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TmuxResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[14].Descriptor()
}

func (TmuxResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[14]
}

func (x TmuxResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TmuxResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TmuxResponse_Status(num)
	return nil
}

// Deprecated: Use TmuxResponse_Status.Descriptor instead.
func (TmuxResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{22, 0}
}

type SetTabLayoutResponse_Status int32

const (
	SetTabLayoutResponse_OK           SetTabLayoutResponse_Status = 0
	SetTabLayoutResponse_BAD_TAB_ID   SetTabLayoutResponse_Status = 1
	SetTabLayoutResponse_WRONG_TREE   SetTabLayoutResponse_Status = 2
	SetTabLayoutResponse_INVALID_SIZE SetTabLayoutResponse_Status = 3
)

// Enum value maps for SetTabLayoutResponse_Status.
var (
	SetTabLayoutResponse_Status_name = map[int32]string{
		0: "OK",
		1: "BAD_TAB_ID",
		2: "WRONG_TREE",
		3: "INVALID_SIZE",
	}
	SetTabLayoutResponse_Status_value = map[string]int32{
		"OK":           0,
		"BAD_TAB_ID":   1,
		"WRONG_TREE":   2,
		"INVALID_SIZE": 3,
	}
)

func (x SetTabLayoutResponse_Status) Enum() *SetTabLayoutResponse_Status {
	p := new(SetTabLayoutResponse_Status)
	*p = x
	return p
}

func (x SetTabLayoutResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetTabLayoutResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[15].Descriptor()
}

func (SetTabLayoutResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[15]
}

func (x SetTabLayoutResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SetTabLayoutResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SetTabLayoutResponse_Status(num)
	return nil
}

// Deprecated: Use SetTabLayoutResponse_Status.Descriptor instead.
func (SetTabLayoutResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{27, 0}
}

type MenuItemResponse_Status int32

const (
	MenuItemResponse_OK             MenuItemResponse_Status = 0
	MenuItemResponse_BAD_IDENTIFIER MenuItemResponse_Status = 1
	MenuItemResponse_DISABLED       MenuItemResponse_Status = 2
)

// Enum value maps for MenuItemResponse_Status.
var (
	MenuItemResponse_Status_name = map[int32]string{
		0: "OK",
		1: "BAD_IDENTIFIER",
		2: "DISABLED",
	}
	MenuItemResponse_Status_value = map[string]int32{
		"OK":             0,
		"BAD_IDENTIFIER": 1,
		"DISABLED":       2,
	}
)

func (x MenuItemResponse_Status) Enum() *MenuItemResponse_Status {
	p := new(MenuItemResponse_Status)
	*p = x
	return p
}

func (x MenuItemResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MenuItemResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[16].Descriptor()
}

func (MenuItemResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[16]
}

func (x MenuItemResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *MenuItemResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = MenuItemResponse_Status(num)
	return nil
}

// Deprecated: Use MenuItemResponse_Status.Descriptor instead.
func (MenuItemResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{29, 0}
}

type RestartSessionResponse_Status int32

const (
	RestartSessionResponse_OK                RestartSessionResponse_Status = 0
	RestartSessionResponse_SESSION_NOT_FOUND RestartSessionResponse_Status = 1
	// Some sessions, such as tmux integration sessions, are not restartable.
	// Also, when `only_if_exited` is set in the request and the session is still running then this
	// status will be returned.
	RestartSessionResponse_SESSION_NOT_RESTARTABLE RestartSessionResponse_Status = 2
)

// Enum value maps for RestartSessionResponse_Status.
var (
	RestartSessionResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "SESSION_NOT_RESTARTABLE",
	}
	RestartSessionResponse_Status_value = map[string]int32{
		"OK":                      0,
		"SESSION_NOT_FOUND":       1,
		"SESSION_NOT_RESTARTABLE": 2,
	}
)

func (x RestartSessionResponse_Status) Enum() *RestartSessionResponse_Status {
	p := new(RestartSessionResponse_Status)
	*p = x
	return p
}

func (x RestartSessionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RestartSessionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[17].Descriptor()
}

func (RestartSessionResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[17]
}

func (x RestartSessionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RestartSessionResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RestartSessionResponse_Status(num)
	return nil
}

// Deprecated: Use RestartSessionResponse_Status.Descriptor instead.
func (RestartSessionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{31, 0}
}

type SavedArrangementRequest_Action int32

const (
	// Restore an existing arrangement with the given name
	SavedArrangementRequest_RESTORE SavedArrangementRequest_Action = 0
	// Save windows to a new arrangement with the given name
	SavedArrangementRequest_SAVE SavedArrangementRequest_Action = 1
	// List arrangements
	SavedArrangementRequest_LIST SavedArrangementRequest_Action = 2
)

// Enum value maps for SavedArrangementRequest_Action.
var (
	SavedArrangementRequest_Action_name = map[int32]string{
		0: "RESTORE",
		1: "SAVE",
		2: "LIST",
	}
	SavedArrangementRequest_Action_value = map[string]int32{
		"RESTORE": 0,
		"SAVE":    1,
		"LIST":    2,
	}
)

func (x SavedArrangementRequest_Action) Enum() *SavedArrangementRequest_Action {
	p := new(SavedArrangementRequest_Action)
	*p = x
	return p
}

func (x SavedArrangementRequest_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SavedArrangementRequest_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[18].Descriptor()
}

func (SavedArrangementRequest_Action) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[18]
}

func (x SavedArrangementRequest_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SavedArrangementRequest_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SavedArrangementRequest_Action(num)
	return nil
}

// Deprecated: Use SavedArrangementRequest_Action.Descriptor instead.
func (SavedArrangementRequest_Action) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{38, 0}
}

type SavedArrangementResponse_Status int32

const (
	SavedArrangementResponse_OK                    SavedArrangementResponse_Status = 0
	SavedArrangementResponse_ARRANGEMENT_NOT_FOUND SavedArrangementResponse_Status = 1 // Tried to restore, but name doesn't exist
	SavedArrangementResponse_WINDOW_NOT_FOUND      SavedArrangementResponse_Status = 2 // Bad window ID provided
	SavedArrangementResponse_REQUEST_MALFORMED     SavedArrangementResponse_Status = 3
)

// Enum value maps for SavedArrangementResponse_Status.
var (
	SavedArrangementResponse_Status_name = map[int32]string{
		0: "OK",
		1: "ARRANGEMENT_NOT_FOUND",
		2: "WINDOW_NOT_FOUND",
		3: "REQUEST_MALFORMED",
	}
	SavedArrangementResponse_Status_value = map[string]int32{
		"OK":                    0,
		"ARRANGEMENT_NOT_FOUND": 1,
		"WINDOW_NOT_FOUND":      2,
		"REQUEST_MALFORMED":     3,
	}
)

func (x SavedArrangementResponse_Status) Enum() *SavedArrangementResponse_Status {
	p := new(SavedArrangementResponse_Status)
	*p = x
	return p
}

func (x SavedArrangementResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SavedArrangementResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[19].Descriptor()
}

func (SavedArrangementResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[19]
}

func (x SavedArrangementResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SavedArrangementResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SavedArrangementResponse_Status(num)
	return nil
}

// Deprecated: Use SavedArrangementResponse_Status.Descriptor instead.
func (SavedArrangementResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{39, 0}
}

type VariableResponse_Status int32

const (
	VariableResponse_OK                   VariableResponse_Status = 0
	VariableResponse_SESSION_NOT_FOUND    VariableResponse_Status = 1
	VariableResponse_INVALID_NAME         VariableResponse_Status = 2 // Names you set must begin with "user."
	VariableResponse_MISSING_SCOPE        VariableResponse_Status = 3 // None of the scope oneof fields was set
	VariableResponse_TAB_NOT_FOUND        VariableResponse_Status = 4
	VariableResponse_MULTI_GET_DISALLOWED VariableResponse_Status = 5
	VariableResponse_WINDOW_NOT_FOUND     VariableResponse_Status = 6
)

// Enum value maps for VariableResponse_Status.
var (
	VariableResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "INVALID_NAME",
		3: "MISSING_SCOPE",
		4: "TAB_NOT_FOUND",
		5: "MULTI_GET_DISALLOWED",
		6: "WINDOW_NOT_FOUND",
	}
	VariableResponse_Status_value = map[string]int32{
		"OK":                   0,
		"SESSION_NOT_FOUND":    1,
		"INVALID_NAME":         2,
		"MISSING_SCOPE":        3,
		"TAB_NOT_FOUND":        4,
		"MULTI_GET_DISALLOWED": 5,
		"WINDOW_NOT_FOUND":     6,
	}
)

func (x VariableResponse_Status) Enum() *VariableResponse_Status {
	p := new(VariableResponse_Status)
	*p = x
	return p
}

func (x VariableResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (VariableResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[20].Descriptor()
}

func (VariableResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[20]
}

func (x VariableResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *VariableResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = VariableResponse_Status(num)
	return nil
}

// Deprecated: Use VariableResponse_Status.Descriptor instead.
func (VariableResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{41, 0}
}

type ActivateResponse_Status int32

const (
	ActivateResponse_OK             ActivateResponse_Status = 0
	ActivateResponse_BAD_IDENTIFIER ActivateResponse_Status = 1
	ActivateResponse_INVALID_OPTION ActivateResponse_Status = 2
)

// Enum value maps for ActivateResponse_Status.
var (
	ActivateResponse_Status_name = map[int32]string{
		0: "OK",
		1: "BAD_IDENTIFIER",
		2: "INVALID_OPTION",
	}
	ActivateResponse_Status_value = map[string]int32{
		"OK":             0,
		"BAD_IDENTIFIER": 1,
		"INVALID_OPTION": 2,
	}
)

func (x ActivateResponse_Status) Enum() *ActivateResponse_Status {
	p := new(ActivateResponse_Status)
	*p = x
	return p
}

func (x ActivateResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActivateResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[21].Descriptor()
}

func (ActivateResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[21]
}

func (x ActivateResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ActivateResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ActivateResponse_Status(num)
	return nil
}

// Deprecated: Use ActivateResponse_Status.Descriptor instead.
func (ActivateResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{43, 0}
}

type InjectResponse_Status int32

const (
	InjectResponse_OK                InjectResponse_Status = 0
	InjectResponse_SESSION_NOT_FOUND InjectResponse_Status = 1
)

// Enum value maps for InjectResponse_Status.
var (
	InjectResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
	}
	InjectResponse_Status_value = map[string]int32{
		"OK":                0,
		"SESSION_NOT_FOUND": 1,
	}
)

func (x InjectResponse_Status) Enum() *InjectResponse_Status {
	p := new(InjectResponse_Status)
	*p = x
	return p
}

func (x InjectResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InjectResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[22].Descriptor()
}

func (InjectResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[22]
}

func (x InjectResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *InjectResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = InjectResponse_Status(num)
	return nil
}

// Deprecated: Use InjectResponse_Status.Descriptor instead.
func (InjectResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{45, 0}
}

type GetPropertyResponse_Status int32

const (
	GetPropertyResponse_OK                GetPropertyResponse_Status = 0
	GetPropertyResponse_UNRECOGNIZED_NAME GetPropertyResponse_Status = 1
	GetPropertyResponse_INVALID_TARGET    GetPropertyResponse_Status = 2
)

// Enum value maps for GetPropertyResponse_Status.
var (
	GetPropertyResponse_Status_name = map[int32]string{
		0: "OK",
		1: "UNRECOGNIZED_NAME",
		2: "INVALID_TARGET",
	}
	GetPropertyResponse_Status_value = map[string]int32{
		"OK":                0,
		"UNRECOGNIZED_NAME": 1,
		"INVALID_TARGET":    2,
	}
)

func (x GetPropertyResponse_Status) Enum() *GetPropertyResponse_Status {
	p := new(GetPropertyResponse_Status)
	*p = x
	return p
}

func (x GetPropertyResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPropertyResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[23].Descriptor()
}

func (GetPropertyResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[23]
}

func (x GetPropertyResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetPropertyResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetPropertyResponse_Status(num)
	return nil
}

// Deprecated: Use GetPropertyResponse_Status.Descriptor instead.
func (GetPropertyResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{47, 0}
}

type SetPropertyResponse_Status int32

const (
	SetPropertyResponse_OK                SetPropertyResponse_Status = 0
	SetPropertyResponse_UNRECOGNIZED_NAME SetPropertyResponse_Status = 1
	SetPropertyResponse_INVALID_VALUE     SetPropertyResponse_Status = 2 // e.g., bad JSON value
	SetPropertyResponse_INVALID_TARGET    SetPropertyResponse_Status = 3 // e.g., bogus window_id
	SetPropertyResponse_DEFERRED          SetPropertyResponse_Status = 4 // Operation can't be performed immediately. Will be tried later. For example, resizing a session during instant replay.
	SetPropertyResponse_IMPOSSIBLE        SetPropertyResponse_Status = 5 // Can't be done. For example, resizing a session in a full-screen window.
	SetPropertyResponse_FAILED            SetPropertyResponse_Status = 6 // Did our best and failed. For example, sometimes toggling full-screen fails if another window is also toggling. Maybe try again?
)

// Enum value maps for SetPropertyResponse_Status.
var (
	SetPropertyResponse_Status_name = map[int32]string{
		0: "OK",
		1: "UNRECOGNIZED_NAME",
		2: "INVALID_VALUE",
		3: "INVALID_TARGET",
		4: "DEFERRED",
		5: "IMPOSSIBLE",
		6: "FAILED",
	}
	SetPropertyResponse_Status_value = map[string]int32{
		"OK":                0,
		"UNRECOGNIZED_NAME": 1,
		"INVALID_VALUE":     2,
		"INVALID_TARGET":    3,
		"DEFERRED":          4,
		"IMPOSSIBLE":        5,
		"FAILED":            6,
	}
)

func (x SetPropertyResponse_Status) Enum() *SetPropertyResponse_Status {
	p := new(SetPropertyResponse_Status)
	*p = x
	return p
}

func (x SetPropertyResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetPropertyResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[24].Descriptor()
}

func (SetPropertyResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[24]
}

func (x SetPropertyResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SetPropertyResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SetPropertyResponse_Status(num)
	return nil
}

// Deprecated: Use SetPropertyResponse_Status.Descriptor instead.
func (SetPropertyResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{49, 0}
}

type RegisterToolRequest_ToolType int32

const (
	RegisterToolRequest_WEB_VIEW_TOOL RegisterToolRequest_ToolType = 1
)

// Enum value maps for RegisterToolRequest_ToolType.
var (
	RegisterToolRequest_ToolType_name = map[int32]string{
		1: "WEB_VIEW_TOOL",
	}
	RegisterToolRequest_ToolType_value = map[string]int32{
		"WEB_VIEW_TOOL": 1,
	}
)

func (x RegisterToolRequest_ToolType) Enum() *RegisterToolRequest_ToolType {
	p := new(RegisterToolRequest_ToolType)
	*p = x
	return p
}

func (x RegisterToolRequest_ToolType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterToolRequest_ToolType) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[25].Descriptor()
}

func (RegisterToolRequest_ToolType) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[25]
}

func (x RegisterToolRequest_ToolType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RegisterToolRequest_ToolType) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RegisterToolRequest_ToolType(num)
	return nil
}

// Deprecated: Use RegisterToolRequest_ToolType.Descriptor instead.
func (RegisterToolRequest_ToolType) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{50, 0}
}

type RPCRegistrationRequest_Role int32

const (
	RPCRegistrationRequest_GENERIC              RPCRegistrationRequest_Role = 1
	RPCRegistrationRequest_SESSION_TITLE        RPCRegistrationRequest_Role = 2
	RPCRegistrationRequest_STATUS_BAR_COMPONENT RPCRegistrationRequest_Role = 3
	RPCRegistrationRequest_CONTEXT_MENU         RPCRegistrationRequest_Role = 4
)

// Enum value maps for RPCRegistrationRequest_Role.
var (
	RPCRegistrationRequest_Role_name = map[int32]string{
		1: "GENERIC",
		2: "SESSION_TITLE",
		3: "STATUS_BAR_COMPONENT",
		4: "CONTEXT_MENU",
	}
	RPCRegistrationRequest_Role_value = map[string]int32{
		"GENERIC":              1,
		"SESSION_TITLE":        2,
		"STATUS_BAR_COMPONENT": 3,
		"CONTEXT_MENU":         4,
	}
)

func (x RPCRegistrationRequest_Role) Enum() *RPCRegistrationRequest_Role {
	p := new(RPCRegistrationRequest_Role)
	*p = x
	return p
}

func (x RPCRegistrationRequest_Role) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPCRegistrationRequest_Role) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[26].Descriptor()
}

func (RPCRegistrationRequest_Role) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[26]
}

func (x RPCRegistrationRequest_Role) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RPCRegistrationRequest_Role) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RPCRegistrationRequest_Role(num)
	return nil
}

// Deprecated: Use RPCRegistrationRequest_Role.Descriptor instead.
func (RPCRegistrationRequest_Role) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 0}
}

type RPCRegistrationRequest_StatusBarComponentAttributes_Format int32

const (
	RPCRegistrationRequest_StatusBarComponentAttributes_PLAIN_TEXT RPCRegistrationRequest_StatusBarComponentAttributes_Format = 0
	RPCRegistrationRequest_StatusBarComponentAttributes_HTML       RPCRegistrationRequest_StatusBarComponentAttributes_Format = 1
)

// Enum value maps for RPCRegistrationRequest_StatusBarComponentAttributes_Format.
var (
	RPCRegistrationRequest_StatusBarComponentAttributes_Format_name = map[int32]string{
		0: "PLAIN_TEXT",
		1: "HTML",
	}
	RPCRegistrationRequest_StatusBarComponentAttributes_Format_value = map[string]int32{
		"PLAIN_TEXT": 0,
		"HTML":       1,
	}
)

func (x RPCRegistrationRequest_StatusBarComponentAttributes_Format) Enum() *RPCRegistrationRequest_StatusBarComponentAttributes_Format {
	p := new(RPCRegistrationRequest_StatusBarComponentAttributes_Format)
	*p = x
	return p
}

func (x RPCRegistrationRequest_StatusBarComponentAttributes_Format) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPCRegistrationRequest_StatusBarComponentAttributes_Format) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[27].Descriptor()
}

func (RPCRegistrationRequest_StatusBarComponentAttributes_Format) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[27]
}

func (x RPCRegistrationRequest_StatusBarComponentAttributes_Format) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Format) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RPCRegistrationRequest_StatusBarComponentAttributes_Format(num)
	return nil
}

// Deprecated: Use RPCRegistrationRequest_StatusBarComponentAttributes_Format.Descriptor instead.
func (RPCRegistrationRequest_StatusBarComponentAttributes_Format) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 3, 0}
}

type RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type int32

const (
	RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Checkbox              RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type = 1
	RPCRegistrationRequest_StatusBarComponentAttributes_Knob_String                RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type = 2
	RPCRegistrationRequest_StatusBarComponentAttributes_Knob_PositiveFloatingPoint RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type = 3
	RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Color                 RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type = 4
)

// Enum value maps for RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type.
var (
	RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type_name = map[int32]string{
		1: "Checkbox",
		2: "String",
		3: "PositiveFloatingPoint",
		4: "Color",
	}
	RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type_value = map[string]int32{
		"Checkbox":              1,
		"String":                2,
		"PositiveFloatingPoint": 3,
		"Color":                 4,
	}
)

func (x RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type) Enum() *RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type {
	p := new(RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type)
	*p = x
	return p
}

func (x RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[28].Descriptor()
}

func (RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[28]
}

func (x RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type(num)
	return nil
}

// Deprecated: Use RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type.Descriptor instead.
func (RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 3, 0, 0}
}

type RegisterToolResponse_Status int32

const (
	RegisterToolResponse_OK                RegisterToolResponse_Status = 0
	RegisterToolResponse_REQUEST_MALFORMED RegisterToolResponse_Status = 1
	RegisterToolResponse_PERMISSION_DENIED RegisterToolResponse_Status = 2
)

// Enum value maps for RegisterToolResponse_Status.
var (
	RegisterToolResponse_Status_name = map[int32]string{
		0: "OK",
		1: "REQUEST_MALFORMED",
		2: "PERMISSION_DENIED",
	}
	RegisterToolResponse_Status_value = map[string]int32{
		"OK":                0,
		"REQUEST_MALFORMED": 1,
		"PERMISSION_DENIED": 2,
	}
)

func (x RegisterToolResponse_Status) Enum() *RegisterToolResponse_Status {
	p := new(RegisterToolResponse_Status)
	*p = x
	return p
}

func (x RegisterToolResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RegisterToolResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[29].Descriptor()
}

func (RegisterToolResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[29]
}

func (x RegisterToolResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *RegisterToolResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = RegisterToolResponse_Status(num)
	return nil
}

// Deprecated: Use RegisterToolResponse_Status.Descriptor instead.
func (RegisterToolResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{52, 0}
}

type NotificationResponse_Status int32

const (
	NotificationResponse_OK                              NotificationResponse_Status = 0
	NotificationResponse_SESSION_NOT_FOUND               NotificationResponse_Status = 1
	NotificationResponse_REQUEST_MALFORMED               NotificationResponse_Status = 2
	NotificationResponse_NOT_SUBSCRIBED                  NotificationResponse_Status = 3
	NotificationResponse_ALREADY_SUBSCRIBED              NotificationResponse_Status = 4
	NotificationResponse_DUPLICATE_SERVER_ORIGINATED_RPC NotificationResponse_Status = 5
	NotificationResponse_INVALID_IDENTIFIER              NotificationResponse_Status = 6
)

// Enum value maps for NotificationResponse_Status.
var (
	NotificationResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "REQUEST_MALFORMED",
		3: "NOT_SUBSCRIBED",
		4: "ALREADY_SUBSCRIBED",
		5: "DUPLICATE_SERVER_ORIGINATED_RPC",
		6: "INVALID_IDENTIFIER",
	}
	NotificationResponse_Status_value = map[string]int32{
		"OK":                              0,
		"SESSION_NOT_FOUND":               1,
		"REQUEST_MALFORMED":               2,
		"NOT_SUBSCRIBED":                  3,
		"ALREADY_SUBSCRIBED":              4,
		"DUPLICATE_SERVER_ORIGINATED_RPC": 5,
		"INVALID_IDENTIFIER":              6,
	}
)

func (x NotificationResponse_Status) Enum() *NotificationResponse_Status {
	p := new(NotificationResponse_Status)
	*p = x
	return p
}

func (x NotificationResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NotificationResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[30].Descriptor()
}

func (NotificationResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[30]
}

func (x NotificationResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *NotificationResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = NotificationResponse_Status(num)
	return nil
}

// Deprecated: Use NotificationResponse_Status.Descriptor instead.
func (NotificationResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{60, 0}
}

type KeystrokeNotification_Action int32

const (
	// These are used for non-modifier keys.
	KeystrokeNotification_KEY_DOWN KeystrokeNotification_Action = 0
	KeystrokeNotification_KEY_UP   KeystrokeNotification_Action = 1 // requires advanced=true in request
	// This is used when only a modifier changes.
	KeystrokeNotification_FLAGS_CHANGED KeystrokeNotification_Action = 2 // requires advanced=true in request
)

// Enum value maps for KeystrokeNotification_Action.
var (
	KeystrokeNotification_Action_name = map[int32]string{
		0: "KEY_DOWN",
		1: "KEY_UP",
		2: "FLAGS_CHANGED",
	}
	KeystrokeNotification_Action_value = map[string]int32{
		"KEY_DOWN":      0,
		"KEY_UP":        1,
		"FLAGS_CHANGED": 2,
	}
)

func (x KeystrokeNotification_Action) Enum() *KeystrokeNotification_Action {
	p := new(KeystrokeNotification_Action)
	*p = x
	return p
}

func (x KeystrokeNotification_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeystrokeNotification_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[31].Descriptor()
}

func (KeystrokeNotification_Action) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[31]
}

func (x KeystrokeNotification_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *KeystrokeNotification_Action) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = KeystrokeNotification_Action(num)
	return nil
}

// Deprecated: Use KeystrokeNotification_Action.Descriptor instead.
func (KeystrokeNotification_Action) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{67, 0}
}

type FocusChangedNotification_Window_WindowStatus int32

const (
	// `window_id` became key
	FocusChangedNotification_Window_TERMINAL_WINDOW_BECAME_KEY FocusChangedNotification_Window_WindowStatus = 0
	// `window_id` is not key, but is the current terminal window. Some other non-terminal window is key.
	FocusChangedNotification_Window_TERMINAL_WINDOW_IS_CURRENT FocusChangedNotification_Window_WindowStatus = 1
	// `window_id` is no longer key.
	FocusChangedNotification_Window_TERMINAL_WINDOW_RESIGNED_KEY FocusChangedNotification_Window_WindowStatus = 2
)

// Enum value maps for FocusChangedNotification_Window_WindowStatus.
var (
	FocusChangedNotification_Window_WindowStatus_name = map[int32]string{
		0: "TERMINAL_WINDOW_BECAME_KEY",
		1: "TERMINAL_WINDOW_IS_CURRENT",
		2: "TERMINAL_WINDOW_RESIGNED_KEY",
	}
	FocusChangedNotification_Window_WindowStatus_value = map[string]int32{
		"TERMINAL_WINDOW_BECAME_KEY":   0,
		"TERMINAL_WINDOW_IS_CURRENT":   1,
		"TERMINAL_WINDOW_RESIGNED_KEY": 2,
	}
)

func (x FocusChangedNotification_Window_WindowStatus) Enum() *FocusChangedNotification_Window_WindowStatus {
	p := new(FocusChangedNotification_Window_WindowStatus)
	*p = x
	return p
}

func (x FocusChangedNotification_Window_WindowStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FocusChangedNotification_Window_WindowStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[32].Descriptor()
}

func (FocusChangedNotification_Window_WindowStatus) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[32]
}

func (x FocusChangedNotification_Window_WindowStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *FocusChangedNotification_Window_WindowStatus) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = FocusChangedNotification_Window_WindowStatus(num)
	return nil
}

// Deprecated: Use FocusChangedNotification_Window_WindowStatus.Descriptor instead.
func (FocusChangedNotification_Window_WindowStatus) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{76, 0, 0}
}

type GetBufferResponse_Status int32

const (
	GetBufferResponse_OK                 GetBufferResponse_Status = 0
	GetBufferResponse_SESSION_NOT_FOUND  GetBufferResponse_Status = 1
	GetBufferResponse_INVALID_LINE_RANGE GetBufferResponse_Status = 2
	GetBufferResponse_REQUEST_MALFORMED  GetBufferResponse_Status = 3
)

// Enum value maps for GetBufferResponse_Status.
var (
	GetBufferResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "INVALID_LINE_RANGE",
		3: "REQUEST_MALFORMED",
	}
	GetBufferResponse_Status_value = map[string]int32{
		"OK":                 0,
		"SESSION_NOT_FOUND":  1,
		"INVALID_LINE_RANGE": 2,
		"REQUEST_MALFORMED":  3,
	}
)

func (x GetBufferResponse_Status) Enum() *GetBufferResponse_Status {
	p := new(GetBufferResponse_Status)
	*p = x
	return p
}

func (x GetBufferResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetBufferResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[33].Descriptor()
}

func (GetBufferResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[33]
}

func (x GetBufferResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetBufferResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetBufferResponse_Status(num)
	return nil
}

// Deprecated: Use GetBufferResponse_Status.Descriptor instead.
func (GetBufferResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{80, 0}
}

type GetPromptResponse_Status int32

const (
	GetPromptResponse_OK                 GetPromptResponse_Status = 0
	GetPromptResponse_SESSION_NOT_FOUND  GetPromptResponse_Status = 1
	GetPromptResponse_REQUEST_MALFORMED  GetPromptResponse_Status = 2
	GetPromptResponse_PROMPT_UNAVAILABLE GetPromptResponse_Status = 3
)

// Enum value maps for GetPromptResponse_Status.
var (
	GetPromptResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "REQUEST_MALFORMED",
		3: "PROMPT_UNAVAILABLE",
	}
	GetPromptResponse_Status_value = map[string]int32{
		"OK":                 0,
		"SESSION_NOT_FOUND":  1,
		"REQUEST_MALFORMED":  2,
		"PROMPT_UNAVAILABLE": 3,
	}
)

func (x GetPromptResponse_Status) Enum() *GetPromptResponse_Status {
	p := new(GetPromptResponse_Status)
	*p = x
	return p
}

func (x GetPromptResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPromptResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[34].Descriptor()
}

func (GetPromptResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[34]
}

func (x GetPromptResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetPromptResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetPromptResponse_Status(num)
	return nil
}

// Deprecated: Use GetPromptResponse_Status.Descriptor instead.
func (GetPromptResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{82, 0}
}

type GetPromptResponse_State int32

const (
	GetPromptResponse_EDITING  GetPromptResponse_State = 0 // Command hasn't been started yet
	GetPromptResponse_RUNNING  GetPromptResponse_State = 1 // Command is currently running
	GetPromptResponse_FINISHED GetPromptResponse_State = 2 // Command has finished.
)

// Enum value maps for GetPromptResponse_State.
var (
	GetPromptResponse_State_name = map[int32]string{
		0: "EDITING",
		1: "RUNNING",
		2: "FINISHED",
	}
	GetPromptResponse_State_value = map[string]int32{
		"EDITING":  0,
		"RUNNING":  1,
		"FINISHED": 2,
	}
)

func (x GetPromptResponse_State) Enum() *GetPromptResponse_State {
	p := new(GetPromptResponse_State)
	*p = x
	return p
}

func (x GetPromptResponse_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetPromptResponse_State) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[35].Descriptor()
}

func (GetPromptResponse_State) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[35]
}

func (x GetPromptResponse_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetPromptResponse_State) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetPromptResponse_State(num)
	return nil
}

// Deprecated: Use GetPromptResponse_State.Descriptor instead.
func (GetPromptResponse_State) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{82, 1}
}

type ListPromptsResponse_Status int32

const (
	ListPromptsResponse_OK                ListPromptsResponse_Status = 0
	ListPromptsResponse_SESSION_NOT_FOUND ListPromptsResponse_Status = 1
)

// Enum value maps for ListPromptsResponse_Status.
var (
	ListPromptsResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
	}
	ListPromptsResponse_Status_value = map[string]int32{
		"OK":                0,
		"SESSION_NOT_FOUND": 1,
	}
)

func (x ListPromptsResponse_Status) Enum() *ListPromptsResponse_Status {
	p := new(ListPromptsResponse_Status)
	*p = x
	return p
}

func (x ListPromptsResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ListPromptsResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[36].Descriptor()
}

func (ListPromptsResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[36]
}

func (x ListPromptsResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *ListPromptsResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = ListPromptsResponse_Status(num)
	return nil
}

// Deprecated: Use ListPromptsResponse_Status.Descriptor instead.
func (ListPromptsResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{84, 0}
}

type GetProfilePropertyResponse_Status int32

const (
	GetProfilePropertyResponse_OK                GetProfilePropertyResponse_Status = 0
	GetProfilePropertyResponse_SESSION_NOT_FOUND GetProfilePropertyResponse_Status = 1
	GetProfilePropertyResponse_REQUEST_MALFORMED GetProfilePropertyResponse_Status = 2
	GetProfilePropertyResponse_ERROR             GetProfilePropertyResponse_Status = 3
)

// Enum value maps for GetProfilePropertyResponse_Status.
var (
	GetProfilePropertyResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "REQUEST_MALFORMED",
		3: "ERROR",
	}
	GetProfilePropertyResponse_Status_value = map[string]int32{
		"OK":                0,
		"SESSION_NOT_FOUND": 1,
		"REQUEST_MALFORMED": 2,
		"ERROR":             3,
	}
)

func (x GetProfilePropertyResponse_Status) Enum() *GetProfilePropertyResponse_Status {
	p := new(GetProfilePropertyResponse_Status)
	*p = x
	return p
}

func (x GetProfilePropertyResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GetProfilePropertyResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[37].Descriptor()
}

func (GetProfilePropertyResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[37]
}

func (x GetProfilePropertyResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *GetProfilePropertyResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = GetProfilePropertyResponse_Status(num)
	return nil
}

// Deprecated: Use GetProfilePropertyResponse_Status.Descriptor instead.
func (GetProfilePropertyResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{87, 0}
}

type SetProfilePropertyResponse_Status int32

const (
	SetProfilePropertyResponse_OK                SetProfilePropertyResponse_Status = 0
	SetProfilePropertyResponse_SESSION_NOT_FOUND SetProfilePropertyResponse_Status = 1
	SetProfilePropertyResponse_REQUEST_MALFORMED SetProfilePropertyResponse_Status = 2
	SetProfilePropertyResponse_BAD_GUID          SetProfilePropertyResponse_Status = 3
)

// Enum value maps for SetProfilePropertyResponse_Status.
var (
	SetProfilePropertyResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "REQUEST_MALFORMED",
		3: "BAD_GUID",
	}
	SetProfilePropertyResponse_Status_value = map[string]int32{
		"OK":                0,
		"SESSION_NOT_FOUND": 1,
		"REQUEST_MALFORMED": 2,
		"BAD_GUID":          3,
	}
)

func (x SetProfilePropertyResponse_Status) Enum() *SetProfilePropertyResponse_Status {
	p := new(SetProfilePropertyResponse_Status)
	*p = x
	return p
}

func (x SetProfilePropertyResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SetProfilePropertyResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[38].Descriptor()
}

func (SetProfilePropertyResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[38]
}

func (x SetProfilePropertyResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SetProfilePropertyResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SetProfilePropertyResponse_Status(num)
	return nil
}

// Deprecated: Use SetProfilePropertyResponse_Status.Descriptor instead.
func (SetProfilePropertyResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{89, 0}
}

type TransactionResponse_Status int32

const (
	TransactionResponse_OK                     TransactionResponse_Status = 0
	TransactionResponse_NO_TRANSACTION         TransactionResponse_Status = 1
	TransactionResponse_ALREADY_IN_TRANSACTION TransactionResponse_Status = 2
)

// Enum value maps for TransactionResponse_Status.
var (
	TransactionResponse_Status_name = map[int32]string{
		0: "OK",
		1: "NO_TRANSACTION",
		2: "ALREADY_IN_TRANSACTION",
	}
	TransactionResponse_Status_value = map[string]int32{
		"OK":                     0,
		"NO_TRANSACTION":         1,
		"ALREADY_IN_TRANSACTION": 2,
	}
)

func (x TransactionResponse_Status) Enum() *TransactionResponse_Status {
	p := new(TransactionResponse_Status)
	*p = x
	return p
}

func (x TransactionResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TransactionResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[39].Descriptor()
}

func (TransactionResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[39]
}

func (x TransactionResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *TransactionResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = TransactionResponse_Status(num)
	return nil
}

// Deprecated: Use TransactionResponse_Status.Descriptor instead.
func (TransactionResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{91, 0}
}

// How does this line end?
type LineContents_Continuation int32

const (
	// This line is not wrapped.
	LineContents_CONTINUATION_HARD_EOL LineContents_Continuation = 1
	// The next line is a continuation of this line.
	LineContents_CONTINUATION_SOFT_EOL LineContents_Continuation = 2
)

// Enum value maps for LineContents_Continuation.
var (
	LineContents_Continuation_name = map[int32]string{
		1: "CONTINUATION_HARD_EOL",
		2: "CONTINUATION_SOFT_EOL",
	}
	LineContents_Continuation_value = map[string]int32{
		"CONTINUATION_HARD_EOL": 1,
		"CONTINUATION_SOFT_EOL": 2,
	}
)

func (x LineContents_Continuation) Enum() *LineContents_Continuation {
	p := new(LineContents_Continuation)
	*p = x
	return p
}

func (x LineContents_Continuation) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LineContents_Continuation) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[40].Descriptor()
}

func (LineContents_Continuation) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[40]
}

func (x LineContents_Continuation) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *LineContents_Continuation) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = LineContents_Continuation(num)
	return nil
}

// Deprecated: Use LineContents_Continuation.Descriptor instead.
func (LineContents_Continuation) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{96, 0}
}

type SendTextResponse_Status int32

const (
	SendTextResponse_OK                SendTextResponse_Status = 0
	SendTextResponse_SESSION_NOT_FOUND SendTextResponse_Status = 1
)

// Enum value maps for SendTextResponse_Status.
var (
	SendTextResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
	}
	SendTextResponse_Status_value = map[string]int32{
		"OK":                0,
		"SESSION_NOT_FOUND": 1,
	}
)

func (x SendTextResponse_Status) Enum() *SendTextResponse_Status {
	p := new(SendTextResponse_Status)
	*p = x
	return p
}

func (x SendTextResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SendTextResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[41].Descriptor()
}

func (SendTextResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[41]
}

func (x SendTextResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SendTextResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SendTextResponse_Status(num)
	return nil
}

// Deprecated: Use SendTextResponse_Status.Descriptor instead.
func (SendTextResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{100, 0}
}

type CreateTabResponse_Status int32

const (
	CreateTabResponse_OK                   CreateTabResponse_Status = 0
	CreateTabResponse_INVALID_PROFILE_NAME CreateTabResponse_Status = 1
	CreateTabResponse_INVALID_WINDOW_ID    CreateTabResponse_Status = 2
	// The tab is still created, just not with the desired index.
	CreateTabResponse_INVALID_TAB_INDEX CreateTabResponse_Status = 3
	// A $$VAR$$ substitution was not provided by the user.
	CreateTabResponse_MISSING_SUBSTITUTION CreateTabResponse_Status = 4
)

// Enum value maps for CreateTabResponse_Status.
var (
	CreateTabResponse_Status_name = map[int32]string{
		0: "OK",
		1: "INVALID_PROFILE_NAME",
		2: "INVALID_WINDOW_ID",
		3: "INVALID_TAB_INDEX",
		4: "MISSING_SUBSTITUTION",
	}
	CreateTabResponse_Status_value = map[string]int32{
		"OK":                   0,
		"INVALID_PROFILE_NAME": 1,
		"INVALID_WINDOW_ID":    2,
		"INVALID_TAB_INDEX":    3,
		"MISSING_SUBSTITUTION": 4,
	}
)

func (x CreateTabResponse_Status) Enum() *CreateTabResponse_Status {
	p := new(CreateTabResponse_Status)
	*p = x
	return p
}

func (x CreateTabResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CreateTabResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[42].Descriptor()
}

func (CreateTabResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[42]
}

func (x CreateTabResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *CreateTabResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = CreateTabResponse_Status(num)
	return nil
}

// Deprecated: Use CreateTabResponse_Status.Descriptor instead.
func (CreateTabResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{108, 0}
}

type SplitPaneRequest_SplitDirection int32

const (
	SplitPaneRequest_VERTICAL   SplitPaneRequest_SplitDirection = 0
	SplitPaneRequest_HORIZONTAL SplitPaneRequest_SplitDirection = 1
)

// Enum value maps for SplitPaneRequest_SplitDirection.
var (
	SplitPaneRequest_SplitDirection_name = map[int32]string{
		0: "VERTICAL",
		1: "HORIZONTAL",
	}
	SplitPaneRequest_SplitDirection_value = map[string]int32{
		"VERTICAL":   0,
		"HORIZONTAL": 1,
	}
)

func (x SplitPaneRequest_SplitDirection) Enum() *SplitPaneRequest_SplitDirection {
	p := new(SplitPaneRequest_SplitDirection)
	*p = x
	return p
}

func (x SplitPaneRequest_SplitDirection) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SplitPaneRequest_SplitDirection) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[43].Descriptor()
}

func (SplitPaneRequest_SplitDirection) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[43]
}

func (x SplitPaneRequest_SplitDirection) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SplitPaneRequest_SplitDirection) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SplitPaneRequest_SplitDirection(num)
	return nil
}

// Deprecated: Use SplitPaneRequest_SplitDirection.Descriptor instead.
func (SplitPaneRequest_SplitDirection) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{109, 0}
}

type SplitPaneResponse_Status int32

const (
	SplitPaneResponse_OK                   SplitPaneResponse_Status = 0
	SplitPaneResponse_SESSION_NOT_FOUND    SplitPaneResponse_Status = 1
	SplitPaneResponse_INVALID_PROFILE_NAME SplitPaneResponse_Status = 2
	// This can happen if the session to be split is too small. If splitting multiple sessions and
	// one or more cannot be split, the status will be set to CANNOT_SPLIT, even if some did succeed
	// (in which case there will be one or more session_id's).
	SplitPaneResponse_CANNOT_SPLIT SplitPaneResponse_Status = 3
	// Couldn't decode JSON
	SplitPaneResponse_MALFORMED_CUSTOM_PROFILE_PROPERTY SplitPaneResponse_Status = 4
)

// Enum value maps for SplitPaneResponse_Status.
var (
	SplitPaneResponse_Status_name = map[int32]string{
		0: "OK",
		1: "SESSION_NOT_FOUND",
		2: "INVALID_PROFILE_NAME",
		3: "CANNOT_SPLIT",
		4: "MALFORMED_CUSTOM_PROFILE_PROPERTY",
	}
	SplitPaneResponse_Status_value = map[string]int32{
		"OK":                                0,
		"SESSION_NOT_FOUND":                 1,
		"INVALID_PROFILE_NAME":              2,
		"CANNOT_SPLIT":                      3,
		"MALFORMED_CUSTOM_PROFILE_PROPERTY": 4,
	}
)

func (x SplitPaneResponse_Status) Enum() *SplitPaneResponse_Status {
	p := new(SplitPaneResponse_Status)
	*p = x
	return p
}

func (x SplitPaneResponse_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SplitPaneResponse_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_iterm2_proto_enumTypes[44].Descriptor()
}

func (SplitPaneResponse_Status) Type() protoreflect.EnumType {
	return &file_iterm2_proto_enumTypes[44]
}

func (x SplitPaneResponse_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Do not use.
func (x *SplitPaneResponse_Status) UnmarshalJSON(b []byte) error {
	num, err := protoimpl.X.UnmarshalJSONEnum(x.Descriptor(), b)
	if err != nil {
		return err
	}
	*x = SplitPaneResponse_Status(num)
	return nil
}

// Deprecated: Use SplitPaneResponse_Status.Descriptor instead.
func (SplitPaneResponse_Status) EnumDescriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{110, 0}
}

// All requests are wrapped in this message. This encoded message is the entirety of the payload
// of messages sent over WebSocket from client to iTerm2.
type ClientOriginatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Types that are assignable to Submessage:
	//	*ClientOriginatedMessage_GetBufferRequest
	//	*ClientOriginatedMessage_GetPromptRequest
	//	*ClientOriginatedMessage_TransactionRequest
	//	*ClientOriginatedMessage_NotificationRequest
	//	*ClientOriginatedMessage_RegisterToolRequest
	//	*ClientOriginatedMessage_SetProfilePropertyRequest
	//	*ClientOriginatedMessage_ListSessionsRequest
	//	*ClientOriginatedMessage_SendTextRequest
	//	*ClientOriginatedMessage_CreateTabRequest
	//	*ClientOriginatedMessage_SplitPaneRequest
	//	*ClientOriginatedMessage_GetProfilePropertyRequest
	//	*ClientOriginatedMessage_SetPropertyRequest
	//	*ClientOriginatedMessage_GetPropertyRequest
	//	*ClientOriginatedMessage_InjectRequest
	//	*ClientOriginatedMessage_ActivateRequest
	//	*ClientOriginatedMessage_VariableRequest
	//	*ClientOriginatedMessage_SavedArrangementRequest
	//	*ClientOriginatedMessage_FocusRequest
	//	*ClientOriginatedMessage_ListProfilesRequest
	//	*ClientOriginatedMessage_ServerOriginatedRpcResultRequest
	//	*ClientOriginatedMessage_RestartSessionRequest
	//	*ClientOriginatedMessage_MenuItemRequest
	//	*ClientOriginatedMessage_SetTabLayoutRequest
	//	*ClientOriginatedMessage_GetBroadcastDomainsRequest
	//	*ClientOriginatedMessage_TmuxRequest
	//	*ClientOriginatedMessage_ReorderTabsRequest
	//	*ClientOriginatedMessage_PreferencesRequest
	//	*ClientOriginatedMessage_ColorPresetRequest
	//	*ClientOriginatedMessage_SelectionRequest
	//	*ClientOriginatedMessage_StatusBarComponentRequest
	//	*ClientOriginatedMessage_SetBroadcastDomainsRequest
	//	*ClientOriginatedMessage_CloseRequest
	//	*ClientOriginatedMessage_InvokeFunctionRequest
	//	*ClientOriginatedMessage_ListPromptsRequest
	Submessage isClientOriginatedMessage_Submessage `protobuf_oneof:"submessage"`
}

func (x *ClientOriginatedMessage) Reset() {
	*x = ClientOriginatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientOriginatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientOriginatedMessage) ProtoMessage() {}

func (x *ClientOriginatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientOriginatedMessage.ProtoReflect.Descriptor instead.
func (*ClientOriginatedMessage) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{0}
}

func (x *ClientOriginatedMessage) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (m *ClientOriginatedMessage) GetSubmessage() isClientOriginatedMessage_Submessage {
	if m != nil {
		return m.Submessage
	}
	return nil
}

func (x *ClientOriginatedMessage) GetGetBufferRequest() *GetBufferRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_GetBufferRequest); ok {
		return x.GetBufferRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetGetPromptRequest() *GetPromptRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_GetPromptRequest); ok {
		return x.GetPromptRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetTransactionRequest() *TransactionRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_TransactionRequest); ok {
		return x.TransactionRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetNotificationRequest() *NotificationRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_NotificationRequest); ok {
		return x.NotificationRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetRegisterToolRequest() *RegisterToolRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_RegisterToolRequest); ok {
		return x.RegisterToolRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSetProfilePropertyRequest() *SetProfilePropertyRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SetProfilePropertyRequest); ok {
		return x.SetProfilePropertyRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetListSessionsRequest() *ListSessionsRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_ListSessionsRequest); ok {
		return x.ListSessionsRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSendTextRequest() *SendTextRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SendTextRequest); ok {
		return x.SendTextRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetCreateTabRequest() *CreateTabRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_CreateTabRequest); ok {
		return x.CreateTabRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSplitPaneRequest() *SplitPaneRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SplitPaneRequest); ok {
		return x.SplitPaneRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetGetProfilePropertyRequest() *GetProfilePropertyRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_GetProfilePropertyRequest); ok {
		return x.GetProfilePropertyRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSetPropertyRequest() *SetPropertyRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SetPropertyRequest); ok {
		return x.SetPropertyRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetGetPropertyRequest() *GetPropertyRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_GetPropertyRequest); ok {
		return x.GetPropertyRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetInjectRequest() *InjectRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_InjectRequest); ok {
		return x.InjectRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetActivateRequest() *ActivateRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_ActivateRequest); ok {
		return x.ActivateRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetVariableRequest() *VariableRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_VariableRequest); ok {
		return x.VariableRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSavedArrangementRequest() *SavedArrangementRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SavedArrangementRequest); ok {
		return x.SavedArrangementRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetFocusRequest() *FocusRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_FocusRequest); ok {
		return x.FocusRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetListProfilesRequest() *ListProfilesRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_ListProfilesRequest); ok {
		return x.ListProfilesRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetServerOriginatedRpcResultRequest() *ServerOriginatedRPCResultRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_ServerOriginatedRpcResultRequest); ok {
		return x.ServerOriginatedRpcResultRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetRestartSessionRequest() *RestartSessionRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_RestartSessionRequest); ok {
		return x.RestartSessionRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetMenuItemRequest() *MenuItemRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_MenuItemRequest); ok {
		return x.MenuItemRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSetTabLayoutRequest() *SetTabLayoutRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SetTabLayoutRequest); ok {
		return x.SetTabLayoutRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetGetBroadcastDomainsRequest() *GetBroadcastDomainsRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_GetBroadcastDomainsRequest); ok {
		return x.GetBroadcastDomainsRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetTmuxRequest() *TmuxRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_TmuxRequest); ok {
		return x.TmuxRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetReorderTabsRequest() *ReorderTabsRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_ReorderTabsRequest); ok {
		return x.ReorderTabsRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetPreferencesRequest() *PreferencesRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_PreferencesRequest); ok {
		return x.PreferencesRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetColorPresetRequest() *ColorPresetRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_ColorPresetRequest); ok {
		return x.ColorPresetRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSelectionRequest() *SelectionRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SelectionRequest); ok {
		return x.SelectionRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetStatusBarComponentRequest() *StatusBarComponentRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_StatusBarComponentRequest); ok {
		return x.StatusBarComponentRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetSetBroadcastDomainsRequest() *SetBroadcastDomainsRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_SetBroadcastDomainsRequest); ok {
		return x.SetBroadcastDomainsRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetCloseRequest() *CloseRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_CloseRequest); ok {
		return x.CloseRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetInvokeFunctionRequest() *InvokeFunctionRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_InvokeFunctionRequest); ok {
		return x.InvokeFunctionRequest
	}
	return nil
}

func (x *ClientOriginatedMessage) GetListPromptsRequest() *ListPromptsRequest {
	if x, ok := x.GetSubmessage().(*ClientOriginatedMessage_ListPromptsRequest); ok {
		return x.ListPromptsRequest
	}
	return nil
}

type isClientOriginatedMessage_Submessage interface {
	isClientOriginatedMessage_Submessage()
}

type ClientOriginatedMessage_GetBufferRequest struct {
	GetBufferRequest *GetBufferRequest `protobuf:"bytes,100,opt,name=get_buffer_request,json=getBufferRequest,oneof"`
}

type ClientOriginatedMessage_GetPromptRequest struct {
	GetPromptRequest *GetPromptRequest `protobuf:"bytes,101,opt,name=get_prompt_request,json=getPromptRequest,oneof"`
}

type ClientOriginatedMessage_TransactionRequest struct {
	TransactionRequest *TransactionRequest `protobuf:"bytes,102,opt,name=transaction_request,json=transactionRequest,oneof"`
}

type ClientOriginatedMessage_NotificationRequest struct {
	NotificationRequest *NotificationRequest `protobuf:"bytes,103,opt,name=notification_request,json=notificationRequest,oneof"`
}

type ClientOriginatedMessage_RegisterToolRequest struct {
	RegisterToolRequest *RegisterToolRequest `protobuf:"bytes,104,opt,name=register_tool_request,json=registerToolRequest,oneof"`
}

type ClientOriginatedMessage_SetProfilePropertyRequest struct {
	SetProfilePropertyRequest *SetProfilePropertyRequest `protobuf:"bytes,105,opt,name=set_profile_property_request,json=setProfilePropertyRequest,oneof"`
}

type ClientOriginatedMessage_ListSessionsRequest struct {
	ListSessionsRequest *ListSessionsRequest `protobuf:"bytes,106,opt,name=list_sessions_request,json=listSessionsRequest,oneof"`
}

type ClientOriginatedMessage_SendTextRequest struct {
	SendTextRequest *SendTextRequest `protobuf:"bytes,107,opt,name=send_text_request,json=sendTextRequest,oneof"`
}

type ClientOriginatedMessage_CreateTabRequest struct {
	CreateTabRequest *CreateTabRequest `protobuf:"bytes,108,opt,name=create_tab_request,json=createTabRequest,oneof"`
}

type ClientOriginatedMessage_SplitPaneRequest struct {
	SplitPaneRequest *SplitPaneRequest `protobuf:"bytes,109,opt,name=split_pane_request,json=splitPaneRequest,oneof"`
}

type ClientOriginatedMessage_GetProfilePropertyRequest struct {
	GetProfilePropertyRequest *GetProfilePropertyRequest `protobuf:"bytes,110,opt,name=get_profile_property_request,json=getProfilePropertyRequest,oneof"`
}

type ClientOriginatedMessage_SetPropertyRequest struct {
	SetPropertyRequest *SetPropertyRequest `protobuf:"bytes,111,opt,name=set_property_request,json=setPropertyRequest,oneof"`
}

type ClientOriginatedMessage_GetPropertyRequest struct {
	GetPropertyRequest *GetPropertyRequest `protobuf:"bytes,112,opt,name=get_property_request,json=getPropertyRequest,oneof"`
}

type ClientOriginatedMessage_InjectRequest struct {
	InjectRequest *InjectRequest `protobuf:"bytes,113,opt,name=inject_request,json=injectRequest,oneof"`
}

type ClientOriginatedMessage_ActivateRequest struct {
	ActivateRequest *ActivateRequest `protobuf:"bytes,114,opt,name=activate_request,json=activateRequest,oneof"`
}

type ClientOriginatedMessage_VariableRequest struct {
	VariableRequest *VariableRequest `protobuf:"bytes,115,opt,name=variable_request,json=variableRequest,oneof"`
}

type ClientOriginatedMessage_SavedArrangementRequest struct {
	SavedArrangementRequest *SavedArrangementRequest `protobuf:"bytes,116,opt,name=saved_arrangement_request,json=savedArrangementRequest,oneof"`
}

type ClientOriginatedMessage_FocusRequest struct {
	FocusRequest *FocusRequest `protobuf:"bytes,117,opt,name=focus_request,json=focusRequest,oneof"`
}

type ClientOriginatedMessage_ListProfilesRequest struct {
	ListProfilesRequest *ListProfilesRequest `protobuf:"bytes,118,opt,name=list_profiles_request,json=listProfilesRequest,oneof"`
}

type ClientOriginatedMessage_ServerOriginatedRpcResultRequest struct {
	ServerOriginatedRpcResultRequest *ServerOriginatedRPCResultRequest `protobuf:"bytes,119,opt,name=server_originated_rpc_result_request,json=serverOriginatedRpcResultRequest,oneof"`
}

type ClientOriginatedMessage_RestartSessionRequest struct {
	RestartSessionRequest *RestartSessionRequest `protobuf:"bytes,120,opt,name=restart_session_request,json=restartSessionRequest,oneof"`
}

type ClientOriginatedMessage_MenuItemRequest struct {
	MenuItemRequest *MenuItemRequest `protobuf:"bytes,121,opt,name=menu_item_request,json=menuItemRequest,oneof"`
}

type ClientOriginatedMessage_SetTabLayoutRequest struct {
	SetTabLayoutRequest *SetTabLayoutRequest `protobuf:"bytes,122,opt,name=set_tab_layout_request,json=setTabLayoutRequest,oneof"`
}

type ClientOriginatedMessage_GetBroadcastDomainsRequest struct {
	GetBroadcastDomainsRequest *GetBroadcastDomainsRequest `protobuf:"bytes,123,opt,name=get_broadcast_domains_request,json=getBroadcastDomainsRequest,oneof"`
}

type ClientOriginatedMessage_TmuxRequest struct {
	TmuxRequest *TmuxRequest `protobuf:"bytes,124,opt,name=tmux_request,json=tmuxRequest,oneof"`
}

type ClientOriginatedMessage_ReorderTabsRequest struct {
	ReorderTabsRequest *ReorderTabsRequest `protobuf:"bytes,125,opt,name=reorder_tabs_request,json=reorderTabsRequest,oneof"`
}

type ClientOriginatedMessage_PreferencesRequest struct {
	PreferencesRequest *PreferencesRequest `protobuf:"bytes,126,opt,name=preferences_request,json=preferencesRequest,oneof"`
}

type ClientOriginatedMessage_ColorPresetRequest struct {
	ColorPresetRequest *ColorPresetRequest `protobuf:"bytes,127,opt,name=color_preset_request,json=colorPresetRequest,oneof"`
}

type ClientOriginatedMessage_SelectionRequest struct {
	SelectionRequest *SelectionRequest `protobuf:"bytes,128,opt,name=selection_request,json=selectionRequest,oneof"`
}

type ClientOriginatedMessage_StatusBarComponentRequest struct {
	StatusBarComponentRequest *StatusBarComponentRequest `protobuf:"bytes,129,opt,name=status_bar_component_request,json=statusBarComponentRequest,oneof"`
}

type ClientOriginatedMessage_SetBroadcastDomainsRequest struct {
	SetBroadcastDomainsRequest *SetBroadcastDomainsRequest `protobuf:"bytes,130,opt,name=set_broadcast_domains_request,json=setBroadcastDomainsRequest,oneof"`
}

type ClientOriginatedMessage_CloseRequest struct {
	CloseRequest *CloseRequest `protobuf:"bytes,131,opt,name=close_request,json=closeRequest,oneof"`
}

type ClientOriginatedMessage_InvokeFunctionRequest struct {
	InvokeFunctionRequest *InvokeFunctionRequest `protobuf:"bytes,132,opt,name=invoke_function_request,json=invokeFunctionRequest,oneof"`
}

type ClientOriginatedMessage_ListPromptsRequest struct {
	ListPromptsRequest *ListPromptsRequest `protobuf:"bytes,133,opt,name=list_prompts_request,json=listPromptsRequest,oneof"`
}

func (*ClientOriginatedMessage_GetBufferRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_GetPromptRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_TransactionRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_NotificationRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_RegisterToolRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SetProfilePropertyRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_ListSessionsRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SendTextRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_CreateTabRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SplitPaneRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_GetProfilePropertyRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SetPropertyRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_GetPropertyRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_InjectRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_ActivateRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_VariableRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SavedArrangementRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_FocusRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_ListProfilesRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_ServerOriginatedRpcResultRequest) isClientOriginatedMessage_Submessage() {
}

func (*ClientOriginatedMessage_RestartSessionRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_MenuItemRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SetTabLayoutRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_GetBroadcastDomainsRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_TmuxRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_ReorderTabsRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_PreferencesRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_ColorPresetRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SelectionRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_StatusBarComponentRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_SetBroadcastDomainsRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_CloseRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_InvokeFunctionRequest) isClientOriginatedMessage_Submessage() {}

func (*ClientOriginatedMessage_ListPromptsRequest) isClientOriginatedMessage_Submessage() {}

// All responses are wrapped in this message. This encoded message is the entirety of the payload
// of messages sent over WebSocket from iTerm2 to client.
type ServerOriginatedMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id *int64 `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	// Responses to ClientOriginatedMessages of the corresponding type
	//
	// Types that are assignable to Submessage:
	//	*ServerOriginatedMessage_Error
	//	*ServerOriginatedMessage_GetBufferResponse
	//	*ServerOriginatedMessage_GetPromptResponse
	//	*ServerOriginatedMessage_TransactionResponse
	//	*ServerOriginatedMessage_NotificationResponse
	//	*ServerOriginatedMessage_RegisterToolResponse
	//	*ServerOriginatedMessage_SetProfilePropertyResponse
	//	*ServerOriginatedMessage_ListSessionsResponse
	//	*ServerOriginatedMessage_SendTextResponse
	//	*ServerOriginatedMessage_CreateTabResponse
	//	*ServerOriginatedMessage_SplitPaneResponse
	//	*ServerOriginatedMessage_GetProfilePropertyResponse
	//	*ServerOriginatedMessage_SetPropertyResponse
	//	*ServerOriginatedMessage_GetPropertyResponse
	//	*ServerOriginatedMessage_InjectResponse
	//	*ServerOriginatedMessage_ActivateResponse
	//	*ServerOriginatedMessage_VariableResponse
	//	*ServerOriginatedMessage_SavedArrangementResponse
	//	*ServerOriginatedMessage_FocusResponse
	//	*ServerOriginatedMessage_ListProfilesResponse
	//	*ServerOriginatedMessage_ServerOriginatedRpcResultResponse
	//	*ServerOriginatedMessage_RestartSessionResponse
	//	*ServerOriginatedMessage_MenuItemResponse
	//	*ServerOriginatedMessage_SetTabLayoutResponse
	//	*ServerOriginatedMessage_GetBroadcastDomainsResponse
	//	*ServerOriginatedMessage_TmuxResponse
	//	*ServerOriginatedMessage_ReorderTabsResponse
	//	*ServerOriginatedMessage_PreferencesResponse
	//	*ServerOriginatedMessage_ColorPresetResponse
	//	*ServerOriginatedMessage_SelectionResponse
	//	*ServerOriginatedMessage_StatusBarComponentResponse
	//	*ServerOriginatedMessage_SetBroadcastDomainsResponse
	//	*ServerOriginatedMessage_CloseResponse
	//	*ServerOriginatedMessage_InvokeFunctionResponse
	//	*ServerOriginatedMessage_ListPromptsResponse
	//	*ServerOriginatedMessage_Notification
	Submessage isServerOriginatedMessage_Submessage `protobuf_oneof:"submessage"`
}

func (x *ServerOriginatedMessage) Reset() {
	*x = ServerOriginatedMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOriginatedMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOriginatedMessage) ProtoMessage() {}

func (x *ServerOriginatedMessage) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOriginatedMessage.ProtoReflect.Descriptor instead.
func (*ServerOriginatedMessage) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{1}
}

func (x *ServerOriginatedMessage) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (m *ServerOriginatedMessage) GetSubmessage() isServerOriginatedMessage_Submessage {
	if m != nil {
		return m.Submessage
	}
	return nil
}

func (x *ServerOriginatedMessage) GetError() string {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_Error); ok {
		return x.Error
	}
	return ""
}

func (x *ServerOriginatedMessage) GetGetBufferResponse() *GetBufferResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_GetBufferResponse); ok {
		return x.GetBufferResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetGetPromptResponse() *GetPromptResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_GetPromptResponse); ok {
		return x.GetPromptResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetTransactionResponse() *TransactionResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_TransactionResponse); ok {
		return x.TransactionResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetNotificationResponse() *NotificationResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_NotificationResponse); ok {
		return x.NotificationResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetRegisterToolResponse() *RegisterToolResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_RegisterToolResponse); ok {
		return x.RegisterToolResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSetProfilePropertyResponse() *SetProfilePropertyResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SetProfilePropertyResponse); ok {
		return x.SetProfilePropertyResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetListSessionsResponse() *ListSessionsResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_ListSessionsResponse); ok {
		return x.ListSessionsResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSendTextResponse() *SendTextResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SendTextResponse); ok {
		return x.SendTextResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetCreateTabResponse() *CreateTabResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_CreateTabResponse); ok {
		return x.CreateTabResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSplitPaneResponse() *SplitPaneResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SplitPaneResponse); ok {
		return x.SplitPaneResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetGetProfilePropertyResponse() *GetProfilePropertyResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_GetProfilePropertyResponse); ok {
		return x.GetProfilePropertyResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSetPropertyResponse() *SetPropertyResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SetPropertyResponse); ok {
		return x.SetPropertyResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetGetPropertyResponse() *GetPropertyResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_GetPropertyResponse); ok {
		return x.GetPropertyResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetInjectResponse() *InjectResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_InjectResponse); ok {
		return x.InjectResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetActivateResponse() *ActivateResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_ActivateResponse); ok {
		return x.ActivateResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetVariableResponse() *VariableResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_VariableResponse); ok {
		return x.VariableResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSavedArrangementResponse() *SavedArrangementResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SavedArrangementResponse); ok {
		return x.SavedArrangementResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetFocusResponse() *FocusResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_FocusResponse); ok {
		return x.FocusResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetListProfilesResponse() *ListProfilesResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_ListProfilesResponse); ok {
		return x.ListProfilesResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetServerOriginatedRpcResultResponse() *ServerOriginatedRPCResultResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_ServerOriginatedRpcResultResponse); ok {
		return x.ServerOriginatedRpcResultResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetRestartSessionResponse() *RestartSessionResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_RestartSessionResponse); ok {
		return x.RestartSessionResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetMenuItemResponse() *MenuItemResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_MenuItemResponse); ok {
		return x.MenuItemResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSetTabLayoutResponse() *SetTabLayoutResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SetTabLayoutResponse); ok {
		return x.SetTabLayoutResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetGetBroadcastDomainsResponse() *GetBroadcastDomainsResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_GetBroadcastDomainsResponse); ok {
		return x.GetBroadcastDomainsResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetTmuxResponse() *TmuxResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_TmuxResponse); ok {
		return x.TmuxResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetReorderTabsResponse() *ReorderTabsResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_ReorderTabsResponse); ok {
		return x.ReorderTabsResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetPreferencesResponse() *PreferencesResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_PreferencesResponse); ok {
		return x.PreferencesResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetColorPresetResponse() *ColorPresetResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_ColorPresetResponse); ok {
		return x.ColorPresetResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSelectionResponse() *SelectionResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SelectionResponse); ok {
		return x.SelectionResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetStatusBarComponentResponse() *StatusBarComponentResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_StatusBarComponentResponse); ok {
		return x.StatusBarComponentResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetSetBroadcastDomainsResponse() *SetBroadcastDomainsResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_SetBroadcastDomainsResponse); ok {
		return x.SetBroadcastDomainsResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetCloseResponse() *CloseResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_CloseResponse); ok {
		return x.CloseResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetInvokeFunctionResponse() *InvokeFunctionResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_InvokeFunctionResponse); ok {
		return x.InvokeFunctionResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetListPromptsResponse() *ListPromptsResponse {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_ListPromptsResponse); ok {
		return x.ListPromptsResponse
	}
	return nil
}

func (x *ServerOriginatedMessage) GetNotification() *Notification {
	if x, ok := x.GetSubmessage().(*ServerOriginatedMessage_Notification); ok {
		return x.Notification
	}
	return nil
}

type isServerOriginatedMessage_Submessage interface {
	isServerOriginatedMessage_Submessage()
}

type ServerOriginatedMessage_Error struct {
	Error string `protobuf:"bytes,2,opt,name=error,oneof"` // Set if request was malformed
}

type ServerOriginatedMessage_GetBufferResponse struct {
	GetBufferResponse *GetBufferResponse `protobuf:"bytes,100,opt,name=get_buffer_response,json=getBufferResponse,oneof"`
}

type ServerOriginatedMessage_GetPromptResponse struct {
	GetPromptResponse *GetPromptResponse `protobuf:"bytes,101,opt,name=get_prompt_response,json=getPromptResponse,oneof"`
}

type ServerOriginatedMessage_TransactionResponse struct {
	TransactionResponse *TransactionResponse `protobuf:"bytes,102,opt,name=transaction_response,json=transactionResponse,oneof"`
}

type ServerOriginatedMessage_NotificationResponse struct {
	NotificationResponse *NotificationResponse `protobuf:"bytes,103,opt,name=notification_response,json=notificationResponse,oneof"`
}

type ServerOriginatedMessage_RegisterToolResponse struct {
	RegisterToolResponse *RegisterToolResponse `protobuf:"bytes,104,opt,name=register_tool_response,json=registerToolResponse,oneof"`
}

type ServerOriginatedMessage_SetProfilePropertyResponse struct {
	SetProfilePropertyResponse *SetProfilePropertyResponse `protobuf:"bytes,105,opt,name=set_profile_property_response,json=setProfilePropertyResponse,oneof"`
}

type ServerOriginatedMessage_ListSessionsResponse struct {
	ListSessionsResponse *ListSessionsResponse `protobuf:"bytes,106,opt,name=list_sessions_response,json=listSessionsResponse,oneof"`
}

type ServerOriginatedMessage_SendTextResponse struct {
	SendTextResponse *SendTextResponse `protobuf:"bytes,107,opt,name=send_text_response,json=sendTextResponse,oneof"`
}

type ServerOriginatedMessage_CreateTabResponse struct {
	CreateTabResponse *CreateTabResponse `protobuf:"bytes,108,opt,name=create_tab_response,json=createTabResponse,oneof"`
}

type ServerOriginatedMessage_SplitPaneResponse struct {
	SplitPaneResponse *SplitPaneResponse `protobuf:"bytes,109,opt,name=split_pane_response,json=splitPaneResponse,oneof"`
}

type ServerOriginatedMessage_GetProfilePropertyResponse struct {
	GetProfilePropertyResponse *GetProfilePropertyResponse `protobuf:"bytes,110,opt,name=get_profile_property_response,json=getProfilePropertyResponse,oneof"`
}

type ServerOriginatedMessage_SetPropertyResponse struct {
	SetPropertyResponse *SetPropertyResponse `protobuf:"bytes,111,opt,name=set_property_response,json=setPropertyResponse,oneof"`
}

type ServerOriginatedMessage_GetPropertyResponse struct {
	GetPropertyResponse *GetPropertyResponse `protobuf:"bytes,112,opt,name=get_property_response,json=getPropertyResponse,oneof"`
}

type ServerOriginatedMessage_InjectResponse struct {
	InjectResponse *InjectResponse `protobuf:"bytes,113,opt,name=inject_response,json=injectResponse,oneof"`
}

type ServerOriginatedMessage_ActivateResponse struct {
	ActivateResponse *ActivateResponse `protobuf:"bytes,114,opt,name=activate_response,json=activateResponse,oneof"`
}

type ServerOriginatedMessage_VariableResponse struct {
	VariableResponse *VariableResponse `protobuf:"bytes,115,opt,name=variable_response,json=variableResponse,oneof"`
}

type ServerOriginatedMessage_SavedArrangementResponse struct {
	SavedArrangementResponse *SavedArrangementResponse `protobuf:"bytes,116,opt,name=saved_arrangement_response,json=savedArrangementResponse,oneof"`
}

type ServerOriginatedMessage_FocusResponse struct {
	FocusResponse *FocusResponse `protobuf:"bytes,117,opt,name=focus_response,json=focusResponse,oneof"`
}

type ServerOriginatedMessage_ListProfilesResponse struct {
	ListProfilesResponse *ListProfilesResponse `protobuf:"bytes,118,opt,name=list_profiles_response,json=listProfilesResponse,oneof"`
}

type ServerOriginatedMessage_ServerOriginatedRpcResultResponse struct {
	ServerOriginatedRpcResultResponse *ServerOriginatedRPCResultResponse `protobuf:"bytes,119,opt,name=server_originated_rpc_result_response,json=serverOriginatedRpcResultResponse,oneof"`
}

type ServerOriginatedMessage_RestartSessionResponse struct {
	RestartSessionResponse *RestartSessionResponse `protobuf:"bytes,120,opt,name=restart_session_response,json=restartSessionResponse,oneof"`
}

type ServerOriginatedMessage_MenuItemResponse struct {
	MenuItemResponse *MenuItemResponse `protobuf:"bytes,121,opt,name=menu_item_response,json=menuItemResponse,oneof"`
}

type ServerOriginatedMessage_SetTabLayoutResponse struct {
	SetTabLayoutResponse *SetTabLayoutResponse `protobuf:"bytes,122,opt,name=set_tab_layout_response,json=setTabLayoutResponse,oneof"`
}

type ServerOriginatedMessage_GetBroadcastDomainsResponse struct {
	GetBroadcastDomainsResponse *GetBroadcastDomainsResponse `protobuf:"bytes,123,opt,name=get_broadcast_domains_response,json=getBroadcastDomainsResponse,oneof"`
}

type ServerOriginatedMessage_TmuxResponse struct {
	TmuxResponse *TmuxResponse `protobuf:"bytes,124,opt,name=tmux_response,json=tmuxResponse,oneof"`
}

type ServerOriginatedMessage_ReorderTabsResponse struct {
	ReorderTabsResponse *ReorderTabsResponse `protobuf:"bytes,125,opt,name=reorder_tabs_response,json=reorderTabsResponse,oneof"`
}

type ServerOriginatedMessage_PreferencesResponse struct {
	PreferencesResponse *PreferencesResponse `protobuf:"bytes,126,opt,name=preferences_response,json=preferencesResponse,oneof"`
}

type ServerOriginatedMessage_ColorPresetResponse struct {
	ColorPresetResponse *ColorPresetResponse `protobuf:"bytes,127,opt,name=color_preset_response,json=colorPresetResponse,oneof"`
}

type ServerOriginatedMessage_SelectionResponse struct {
	SelectionResponse *SelectionResponse `protobuf:"bytes,128,opt,name=selection_response,json=selectionResponse,oneof"`
}

type ServerOriginatedMessage_StatusBarComponentResponse struct {
	StatusBarComponentResponse *StatusBarComponentResponse `protobuf:"bytes,129,opt,name=status_bar_component_response,json=statusBarComponentResponse,oneof"`
}

type ServerOriginatedMessage_SetBroadcastDomainsResponse struct {
	SetBroadcastDomainsResponse *SetBroadcastDomainsResponse `protobuf:"bytes,130,opt,name=set_broadcast_domains_response,json=setBroadcastDomainsResponse,oneof"`
}

type ServerOriginatedMessage_CloseResponse struct {
	CloseResponse *CloseResponse `protobuf:"bytes,131,opt,name=close_response,json=closeResponse,oneof"`
}

type ServerOriginatedMessage_InvokeFunctionResponse struct {
	InvokeFunctionResponse *InvokeFunctionResponse `protobuf:"bytes,132,opt,name=invoke_function_response,json=invokeFunctionResponse,oneof"`
}

type ServerOriginatedMessage_ListPromptsResponse struct {
	ListPromptsResponse *ListPromptsResponse `protobuf:"bytes,133,opt,name=list_prompts_response,json=listPromptsResponse,oneof"`
}

type ServerOriginatedMessage_Notification struct {
	// This is the only response that is sent spontaneously. The 'id' field will not be set.
	Notification *Notification `protobuf:"bytes,1000,opt,name=notification,oneof"`
}

func (*ServerOriginatedMessage_Error) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_GetBufferResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_GetPromptResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_TransactionResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_NotificationResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_RegisterToolResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SetProfilePropertyResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_ListSessionsResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SendTextResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_CreateTabResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SplitPaneResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_GetProfilePropertyResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SetPropertyResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_GetPropertyResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_InjectResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_ActivateResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_VariableResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SavedArrangementResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_FocusResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_ListProfilesResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_ServerOriginatedRpcResultResponse) isServerOriginatedMessage_Submessage() {
}

func (*ServerOriginatedMessage_RestartSessionResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_MenuItemResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SetTabLayoutResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_GetBroadcastDomainsResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_TmuxResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_ReorderTabsResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_PreferencesResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_ColorPresetResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SelectionResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_StatusBarComponentResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_SetBroadcastDomainsResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_CloseResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_InvokeFunctionResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_ListPromptsResponse) isServerOriginatedMessage_Submessage() {}

func (*ServerOriginatedMessage_Notification) isServerOriginatedMessage_Submessage() {}

type InvokeFunctionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Context:
	//	*InvokeFunctionRequest_Tab_
	//	*InvokeFunctionRequest_Session_
	//	*InvokeFunctionRequest_Window_
	//	*InvokeFunctionRequest_App_
	//	*InvokeFunctionRequest_Method_
	Context    isInvokeFunctionRequest_Context `protobuf_oneof:"context"`
	Invocation *string                         `protobuf:"bytes,5,opt,name=invocation" json:"invocation,omitempty"`
	Timeout    *float64                        `protobuf:"fixed64,6,opt,name=timeout,def=-1" json:"timeout,omitempty"` // If not given a reasonable default value will be used. Negative value means to use the default.
}

// Default values for InvokeFunctionRequest fields.
const (
	Default_InvokeFunctionRequest_Timeout = float64(-1)
)

func (x *InvokeFunctionRequest) Reset() {
	*x = InvokeFunctionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionRequest) ProtoMessage() {}

func (x *InvokeFunctionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionRequest.ProtoReflect.Descriptor instead.
func (*InvokeFunctionRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{2}
}

func (m *InvokeFunctionRequest) GetContext() isInvokeFunctionRequest_Context {
	if m != nil {
		return m.Context
	}
	return nil
}

func (x *InvokeFunctionRequest) GetTab() *InvokeFunctionRequest_Tab {
	if x, ok := x.GetContext().(*InvokeFunctionRequest_Tab_); ok {
		return x.Tab
	}
	return nil
}

func (x *InvokeFunctionRequest) GetSession() *InvokeFunctionRequest_Session {
	if x, ok := x.GetContext().(*InvokeFunctionRequest_Session_); ok {
		return x.Session
	}
	return nil
}

func (x *InvokeFunctionRequest) GetWindow() *InvokeFunctionRequest_Window {
	if x, ok := x.GetContext().(*InvokeFunctionRequest_Window_); ok {
		return x.Window
	}
	return nil
}

func (x *InvokeFunctionRequest) GetApp() *InvokeFunctionRequest_App {
	if x, ok := x.GetContext().(*InvokeFunctionRequest_App_); ok {
		return x.App
	}
	return nil
}

func (x *InvokeFunctionRequest) GetMethod() *InvokeFunctionRequest_Method {
	if x, ok := x.GetContext().(*InvokeFunctionRequest_Method_); ok {
		return x.Method
	}
	return nil
}

func (x *InvokeFunctionRequest) GetInvocation() string {
	if x != nil && x.Invocation != nil {
		return *x.Invocation
	}
	return ""
}

func (x *InvokeFunctionRequest) GetTimeout() float64 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return Default_InvokeFunctionRequest_Timeout
}

type isInvokeFunctionRequest_Context interface {
	isInvokeFunctionRequest_Context()
}

type InvokeFunctionRequest_Tab_ struct {
	Tab *InvokeFunctionRequest_Tab `protobuf:"bytes,1,opt,name=tab,oneof"`
}

type InvokeFunctionRequest_Session_ struct {
	Session *InvokeFunctionRequest_Session `protobuf:"bytes,2,opt,name=session,oneof"`
}

type InvokeFunctionRequest_Window_ struct {
	Window *InvokeFunctionRequest_Window `protobuf:"bytes,3,opt,name=window,oneof"`
}

type InvokeFunctionRequest_App_ struct {
	App *InvokeFunctionRequest_App `protobuf:"bytes,4,opt,name=app,oneof"`
}

type InvokeFunctionRequest_Method_ struct {
	Method *InvokeFunctionRequest_Method `protobuf:"bytes,7,opt,name=method,oneof"`
}

func (*InvokeFunctionRequest_Tab_) isInvokeFunctionRequest_Context() {}

func (*InvokeFunctionRequest_Session_) isInvokeFunctionRequest_Context() {}

func (*InvokeFunctionRequest_Window_) isInvokeFunctionRequest_Context() {}

func (*InvokeFunctionRequest_App_) isInvokeFunctionRequest_Context() {}

func (*InvokeFunctionRequest_Method_) isInvokeFunctionRequest_Context() {}

type InvokeFunctionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Disposition:
	//	*InvokeFunctionResponse_Error_
	//	*InvokeFunctionResponse_Success_
	Disposition isInvokeFunctionResponse_Disposition `protobuf_oneof:"disposition"`
}

func (x *InvokeFunctionResponse) Reset() {
	*x = InvokeFunctionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionResponse) ProtoMessage() {}

func (x *InvokeFunctionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionResponse.ProtoReflect.Descriptor instead.
func (*InvokeFunctionResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{3}
}

func (m *InvokeFunctionResponse) GetDisposition() isInvokeFunctionResponse_Disposition {
	if m != nil {
		return m.Disposition
	}
	return nil
}

func (x *InvokeFunctionResponse) GetError() *InvokeFunctionResponse_Error {
	if x, ok := x.GetDisposition().(*InvokeFunctionResponse_Error_); ok {
		return x.Error
	}
	return nil
}

func (x *InvokeFunctionResponse) GetSuccess() *InvokeFunctionResponse_Success {
	if x, ok := x.GetDisposition().(*InvokeFunctionResponse_Success_); ok {
		return x.Success
	}
	return nil
}

type isInvokeFunctionResponse_Disposition interface {
	isInvokeFunctionResponse_Disposition()
}

type InvokeFunctionResponse_Error_ struct {
	Error *InvokeFunctionResponse_Error `protobuf:"bytes,1,opt,name=error,oneof"`
}

type InvokeFunctionResponse_Success_ struct {
	Success *InvokeFunctionResponse_Success `protobuf:"bytes,2,opt,name=success,oneof"`
}

func (*InvokeFunctionResponse_Error_) isInvokeFunctionResponse_Disposition() {}

func (*InvokeFunctionResponse_Success_) isInvokeFunctionResponse_Disposition() {}

type CloseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//	*CloseRequest_Tabs
	//	*CloseRequest_Sessions
	//	*CloseRequest_Windows
	Target isCloseRequest_Target `protobuf_oneof:"target"`
	Force  *bool                 `protobuf:"varint,4,opt,name=force" json:"force,omitempty"`
}

func (x *CloseRequest) Reset() {
	*x = CloseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest) ProtoMessage() {}

func (x *CloseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest.ProtoReflect.Descriptor instead.
func (*CloseRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{4}
}

func (m *CloseRequest) GetTarget() isCloseRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *CloseRequest) GetTabs() *CloseRequest_CloseTabs {
	if x, ok := x.GetTarget().(*CloseRequest_Tabs); ok {
		return x.Tabs
	}
	return nil
}

func (x *CloseRequest) GetSessions() *CloseRequest_CloseSessions {
	if x, ok := x.GetTarget().(*CloseRequest_Sessions); ok {
		return x.Sessions
	}
	return nil
}

func (x *CloseRequest) GetWindows() *CloseRequest_CloseWindows {
	if x, ok := x.GetTarget().(*CloseRequest_Windows); ok {
		return x.Windows
	}
	return nil
}

func (x *CloseRequest) GetForce() bool {
	if x != nil && x.Force != nil {
		return *x.Force
	}
	return false
}

type isCloseRequest_Target interface {
	isCloseRequest_Target()
}

type CloseRequest_Tabs struct {
	Tabs *CloseRequest_CloseTabs `protobuf:"bytes,1,opt,name=tabs,oneof"`
}

type CloseRequest_Sessions struct {
	Sessions *CloseRequest_CloseSessions `protobuf:"bytes,2,opt,name=sessions,oneof"`
}

type CloseRequest_Windows struct {
	Windows *CloseRequest_CloseWindows `protobuf:"bytes,3,opt,name=windows,oneof"`
}

func (*CloseRequest_Tabs) isCloseRequest_Target() {}

func (*CloseRequest_Sessions) isCloseRequest_Target() {}

func (*CloseRequest_Windows) isCloseRequest_Target() {}

type CloseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Statuses []CloseResponse_Status `protobuf:"varint,1,rep,name=statuses,enum=iterm2.CloseResponse_Status" json:"statuses,omitempty"`
}

func (x *CloseResponse) Reset() {
	*x = CloseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseResponse) ProtoMessage() {}

func (x *CloseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseResponse.ProtoReflect.Descriptor instead.
func (*CloseResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{5}
}

func (x *CloseResponse) GetStatuses() []CloseResponse_Status {
	if x != nil {
		return x.Statuses
	}
	return nil
}

type SetBroadcastDomainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastDomains []*BroadcastDomain `protobuf:"bytes,1,rep,name=broadcast_domains,json=broadcastDomains" json:"broadcast_domains,omitempty"`
}

func (x *SetBroadcastDomainsRequest) Reset() {
	*x = SetBroadcastDomainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBroadcastDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBroadcastDomainsRequest) ProtoMessage() {}

func (x *SetBroadcastDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBroadcastDomainsRequest.ProtoReflect.Descriptor instead.
func (*SetBroadcastDomainsRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{6}
}

func (x *SetBroadcastDomainsRequest) GetBroadcastDomains() []*BroadcastDomain {
	if x != nil {
		return x.BroadcastDomains
	}
	return nil
}

type SetBroadcastDomainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SetBroadcastDomainsResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SetBroadcastDomainsResponse_Status" json:"status,omitempty"`
}

func (x *SetBroadcastDomainsResponse) Reset() {
	*x = SetBroadcastDomainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetBroadcastDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetBroadcastDomainsResponse) ProtoMessage() {}

func (x *SetBroadcastDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetBroadcastDomainsResponse.ProtoReflect.Descriptor instead.
func (*SetBroadcastDomainsResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{7}
}

func (x *SetBroadcastDomainsResponse) GetStatus() SetBroadcastDomainsResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SetBroadcastDomainsResponse_OK
}

type StatusBarComponentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*StatusBarComponentRequest_OpenPopover_
	Request    isStatusBarComponentRequest_Request `protobuf_oneof:"request"`
	Identifier *string                             `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"` // ID of statusbar component
}

func (x *StatusBarComponentRequest) Reset() {
	*x = StatusBarComponentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusBarComponentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusBarComponentRequest) ProtoMessage() {}

func (x *StatusBarComponentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusBarComponentRequest.ProtoReflect.Descriptor instead.
func (*StatusBarComponentRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{8}
}

func (m *StatusBarComponentRequest) GetRequest() isStatusBarComponentRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *StatusBarComponentRequest) GetOpenPopover() *StatusBarComponentRequest_OpenPopover {
	if x, ok := x.GetRequest().(*StatusBarComponentRequest_OpenPopover_); ok {
		return x.OpenPopover
	}
	return nil
}

func (x *StatusBarComponentRequest) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

type isStatusBarComponentRequest_Request interface {
	isStatusBarComponentRequest_Request()
}

type StatusBarComponentRequest_OpenPopover_ struct {
	OpenPopover *StatusBarComponentRequest_OpenPopover `protobuf:"bytes,1,opt,name=open_popover,json=openPopover,oneof"`
}

func (*StatusBarComponentRequest_OpenPopover_) isStatusBarComponentRequest_Request() {}

type StatusBarComponentResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *StatusBarComponentResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.StatusBarComponentResponse_Status" json:"status,omitempty"`
}

func (x *StatusBarComponentResponse) Reset() {
	*x = StatusBarComponentResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusBarComponentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusBarComponentResponse) ProtoMessage() {}

func (x *StatusBarComponentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusBarComponentResponse.ProtoReflect.Descriptor instead.
func (*StatusBarComponentResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{9}
}

func (x *StatusBarComponentResponse) GetStatus() StatusBarComponentResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return StatusBarComponentResponse_OK
}

type WindowedCoordRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CoordRange *CoordRange `protobuf:"bytes,1,opt,name=coord_range,json=coordRange" json:"coord_range,omitempty"`
	Columns    *Range      `protobuf:"bytes,2,opt,name=columns" json:"columns,omitempty"`
}

func (x *WindowedCoordRange) Reset() {
	*x = WindowedCoordRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WindowedCoordRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WindowedCoordRange) ProtoMessage() {}

func (x *WindowedCoordRange) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WindowedCoordRange.ProtoReflect.Descriptor instead.
func (*WindowedCoordRange) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{10}
}

func (x *WindowedCoordRange) GetCoordRange() *CoordRange {
	if x != nil {
		return x.CoordRange
	}
	return nil
}

func (x *WindowedCoordRange) GetColumns() *Range {
	if x != nil {
		return x.Columns
	}
	return nil
}

type SubSelection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowedCoordRange *WindowedCoordRange `protobuf:"bytes,1,opt,name=windowed_coord_range,json=windowedCoordRange" json:"windowed_coord_range,omitempty"`
	SelectionMode      *SelectionMode      `protobuf:"varint,2,opt,name=selection_mode,json=selectionMode,enum=iterm2.SelectionMode" json:"selection_mode,omitempty"`
	Connected          *bool               `protobuf:"varint,3,opt,name=connected" json:"connected,omitempty"`
}

func (x *SubSelection) Reset() {
	*x = SubSelection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubSelection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubSelection) ProtoMessage() {}

func (x *SubSelection) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubSelection.ProtoReflect.Descriptor instead.
func (*SubSelection) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{11}
}

func (x *SubSelection) GetWindowedCoordRange() *WindowedCoordRange {
	if x != nil {
		return x.WindowedCoordRange
	}
	return nil
}

func (x *SubSelection) GetSelectionMode() SelectionMode {
	if x != nil && x.SelectionMode != nil {
		return *x.SelectionMode
	}
	return SelectionMode_CHARACTER
}

func (x *SubSelection) GetConnected() bool {
	if x != nil && x.Connected != nil {
		return *x.Connected
	}
	return false
}

type Selection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubSelections []*SubSelection `protobuf:"bytes,1,rep,name=sub_selections,json=subSelections" json:"sub_selections,omitempty"`
}

func (x *Selection) Reset() {
	*x = Selection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Selection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Selection) ProtoMessage() {}

func (x *Selection) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Selection.ProtoReflect.Descriptor instead.
func (*Selection) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{12}
}

func (x *Selection) GetSubSelections() []*SubSelection {
	if x != nil {
		return x.SubSelections
	}
	return nil
}

type SelectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*SelectionRequest_GetSelectionRequest_
	//	*SelectionRequest_SetSelectionRequest_
	Request isSelectionRequest_Request `protobuf_oneof:"request"`
}

func (x *SelectionRequest) Reset() {
	*x = SelectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionRequest) ProtoMessage() {}

func (x *SelectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionRequest.ProtoReflect.Descriptor instead.
func (*SelectionRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{13}
}

func (m *SelectionRequest) GetRequest() isSelectionRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *SelectionRequest) GetGetSelectionRequest() *SelectionRequest_GetSelectionRequest {
	if x, ok := x.GetRequest().(*SelectionRequest_GetSelectionRequest_); ok {
		return x.GetSelectionRequest
	}
	return nil
}

func (x *SelectionRequest) GetSetSelectionRequest() *SelectionRequest_SetSelectionRequest {
	if x, ok := x.GetRequest().(*SelectionRequest_SetSelectionRequest_); ok {
		return x.SetSelectionRequest
	}
	return nil
}

type isSelectionRequest_Request interface {
	isSelectionRequest_Request()
}

type SelectionRequest_GetSelectionRequest_ struct {
	GetSelectionRequest *SelectionRequest_GetSelectionRequest `protobuf:"bytes,1,opt,name=get_selection_request,json=getSelectionRequest,oneof"`
}

type SelectionRequest_SetSelectionRequest_ struct {
	SetSelectionRequest *SelectionRequest_SetSelectionRequest `protobuf:"bytes,2,opt,name=set_selection_request,json=setSelectionRequest,oneof"`
}

func (*SelectionRequest_GetSelectionRequest_) isSelectionRequest_Request() {}

func (*SelectionRequest_SetSelectionRequest_) isSelectionRequest_Request() {}

type SelectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SelectionResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SelectionResponse_Status" json:"status,omitempty"`
	// Types that are assignable to Response:
	//	*SelectionResponse_GetSelectionResponse_
	//	*SelectionResponse_SetSelectionResponse_
	Response isSelectionResponse_Response `protobuf_oneof:"response"`
}

func (x *SelectionResponse) Reset() {
	*x = SelectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionResponse) ProtoMessage() {}

func (x *SelectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionResponse.ProtoReflect.Descriptor instead.
func (*SelectionResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{14}
}

func (x *SelectionResponse) GetStatus() SelectionResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SelectionResponse_OK
}

func (m *SelectionResponse) GetResponse() isSelectionResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *SelectionResponse) GetGetSelectionResponse() *SelectionResponse_GetSelectionResponse {
	if x, ok := x.GetResponse().(*SelectionResponse_GetSelectionResponse_); ok {
		return x.GetSelectionResponse
	}
	return nil
}

func (x *SelectionResponse) GetSetSelectionResponse() *SelectionResponse_SetSelectionResponse {
	if x, ok := x.GetResponse().(*SelectionResponse_SetSelectionResponse_); ok {
		return x.SetSelectionResponse
	}
	return nil
}

type isSelectionResponse_Response interface {
	isSelectionResponse_Response()
}

type SelectionResponse_GetSelectionResponse_ struct {
	GetSelectionResponse *SelectionResponse_GetSelectionResponse `protobuf:"bytes,2,opt,name=get_selection_response,json=getSelectionResponse,oneof"`
}

type SelectionResponse_SetSelectionResponse_ struct {
	SetSelectionResponse *SelectionResponse_SetSelectionResponse `protobuf:"bytes,3,opt,name=set_selection_response,json=setSelectionResponse,oneof"`
}

func (*SelectionResponse_GetSelectionResponse_) isSelectionResponse_Response() {}

func (*SelectionResponse_SetSelectionResponse_) isSelectionResponse_Response() {}

type ColorPresetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*ColorPresetRequest_ListPresets_
	//	*ColorPresetRequest_GetPreset_
	Request isColorPresetRequest_Request `protobuf_oneof:"request"`
}

func (x *ColorPresetRequest) Reset() {
	*x = ColorPresetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorPresetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorPresetRequest) ProtoMessage() {}

func (x *ColorPresetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorPresetRequest.ProtoReflect.Descriptor instead.
func (*ColorPresetRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{15}
}

func (m *ColorPresetRequest) GetRequest() isColorPresetRequest_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *ColorPresetRequest) GetListPresets() *ColorPresetRequest_ListPresets {
	if x, ok := x.GetRequest().(*ColorPresetRequest_ListPresets_); ok {
		return x.ListPresets
	}
	return nil
}

func (x *ColorPresetRequest) GetGetPreset() *ColorPresetRequest_GetPreset {
	if x, ok := x.GetRequest().(*ColorPresetRequest_GetPreset_); ok {
		return x.GetPreset
	}
	return nil
}

type isColorPresetRequest_Request interface {
	isColorPresetRequest_Request()
}

type ColorPresetRequest_ListPresets_ struct {
	ListPresets *ColorPresetRequest_ListPresets `protobuf:"bytes,1,opt,name=list_presets,json=listPresets,oneof"`
}

type ColorPresetRequest_GetPreset_ struct {
	GetPreset *ColorPresetRequest_GetPreset `protobuf:"bytes,2,opt,name=get_preset,json=getPreset,oneof"`
}

func (*ColorPresetRequest_ListPresets_) isColorPresetRequest_Request() {}

func (*ColorPresetRequest_GetPreset_) isColorPresetRequest_Request() {}

type ColorPresetResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*ColorPresetResponse_ListPresets_
	//	*ColorPresetResponse_GetPreset_
	Response isColorPresetResponse_Response `protobuf_oneof:"response"`
	Status   *ColorPresetResponse_Status    `protobuf:"varint,3,opt,name=status,enum=iterm2.ColorPresetResponse_Status" json:"status,omitempty"`
}

func (x *ColorPresetResponse) Reset() {
	*x = ColorPresetResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorPresetResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorPresetResponse) ProtoMessage() {}

func (x *ColorPresetResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorPresetResponse.ProtoReflect.Descriptor instead.
func (*ColorPresetResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{16}
}

func (m *ColorPresetResponse) GetResponse() isColorPresetResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *ColorPresetResponse) GetListPresets() *ColorPresetResponse_ListPresets {
	if x, ok := x.GetResponse().(*ColorPresetResponse_ListPresets_); ok {
		return x.ListPresets
	}
	return nil
}

func (x *ColorPresetResponse) GetGetPreset() *ColorPresetResponse_GetPreset {
	if x, ok := x.GetResponse().(*ColorPresetResponse_GetPreset_); ok {
		return x.GetPreset
	}
	return nil
}

func (x *ColorPresetResponse) GetStatus() ColorPresetResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ColorPresetResponse_OK
}

type isColorPresetResponse_Response interface {
	isColorPresetResponse_Response()
}

type ColorPresetResponse_ListPresets_ struct {
	ListPresets *ColorPresetResponse_ListPresets `protobuf:"bytes,1,opt,name=list_presets,json=listPresets,oneof"`
}

type ColorPresetResponse_GetPreset_ struct {
	GetPreset *ColorPresetResponse_GetPreset `protobuf:"bytes,2,opt,name=get_preset,json=getPreset,oneof"`
}

func (*ColorPresetResponse_ListPresets_) isColorPresetResponse_Response() {}

func (*ColorPresetResponse_GetPreset_) isColorPresetResponse_Response() {}

type PreferencesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Requests []*PreferencesRequest_Request `protobuf:"bytes,1,rep,name=requests" json:"requests,omitempty"`
}

func (x *PreferencesRequest) Reset() {
	*x = PreferencesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesRequest) ProtoMessage() {}

func (x *PreferencesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesRequest.ProtoReflect.Descriptor instead.
func (*PreferencesRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{17}
}

func (x *PreferencesRequest) GetRequests() []*PreferencesRequest_Request {
	if x != nil {
		return x.Requests
	}
	return nil
}

type PreferencesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Results []*PreferencesResponse_Result `protobuf:"bytes,1,rep,name=results" json:"results,omitempty"`
}

func (x *PreferencesResponse) Reset() {
	*x = PreferencesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesResponse) ProtoMessage() {}

func (x *PreferencesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesResponse.ProtoReflect.Descriptor instead.
func (*PreferencesResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18}
}

func (x *PreferencesResponse) GetResults() []*PreferencesResponse_Result {
	if x != nil {
		return x.Results
	}
	return nil
}

type ReorderTabsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Assignments []*ReorderTabsRequest_Assignment `protobuf:"bytes,3,rep,name=assignments" json:"assignments,omitempty"`
}

func (x *ReorderTabsRequest) Reset() {
	*x = ReorderTabsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReorderTabsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderTabsRequest) ProtoMessage() {}

func (x *ReorderTabsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderTabsRequest.ProtoReflect.Descriptor instead.
func (*ReorderTabsRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{19}
}

func (x *ReorderTabsRequest) GetAssignments() []*ReorderTabsRequest_Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type ReorderTabsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *ReorderTabsResponse_Status `protobuf:"varint,4,opt,name=status,enum=iterm2.ReorderTabsResponse_Status" json:"status,omitempty"`
}

func (x *ReorderTabsResponse) Reset() {
	*x = ReorderTabsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReorderTabsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderTabsResponse) ProtoMessage() {}

func (x *ReorderTabsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderTabsResponse.ProtoReflect.Descriptor instead.
func (*ReorderTabsResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{20}
}

func (x *ReorderTabsResponse) GetStatus() ReorderTabsResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ReorderTabsResponse_OK
}

type TmuxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*TmuxRequest_ListConnections_
	//	*TmuxRequest_SendCommand_
	//	*TmuxRequest_SetWindowVisible_
	//	*TmuxRequest_CreateWindow_
	Payload isTmuxRequest_Payload `protobuf_oneof:"payload"`
}

func (x *TmuxRequest) Reset() {
	*x = TmuxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxRequest) ProtoMessage() {}

func (x *TmuxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxRequest.ProtoReflect.Descriptor instead.
func (*TmuxRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{21}
}

func (m *TmuxRequest) GetPayload() isTmuxRequest_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *TmuxRequest) GetListConnections() *TmuxRequest_ListConnections {
	if x, ok := x.GetPayload().(*TmuxRequest_ListConnections_); ok {
		return x.ListConnections
	}
	return nil
}

func (x *TmuxRequest) GetSendCommand() *TmuxRequest_SendCommand {
	if x, ok := x.GetPayload().(*TmuxRequest_SendCommand_); ok {
		return x.SendCommand
	}
	return nil
}

func (x *TmuxRequest) GetSetWindowVisible() *TmuxRequest_SetWindowVisible {
	if x, ok := x.GetPayload().(*TmuxRequest_SetWindowVisible_); ok {
		return x.SetWindowVisible
	}
	return nil
}

func (x *TmuxRequest) GetCreateWindow() *TmuxRequest_CreateWindow {
	if x, ok := x.GetPayload().(*TmuxRequest_CreateWindow_); ok {
		return x.CreateWindow
	}
	return nil
}

type isTmuxRequest_Payload interface {
	isTmuxRequest_Payload()
}

type TmuxRequest_ListConnections_ struct {
	ListConnections *TmuxRequest_ListConnections `protobuf:"bytes,1,opt,name=list_connections,json=listConnections,oneof"`
}

type TmuxRequest_SendCommand_ struct {
	SendCommand *TmuxRequest_SendCommand `protobuf:"bytes,2,opt,name=send_command,json=sendCommand,oneof"`
}

type TmuxRequest_SetWindowVisible_ struct {
	SetWindowVisible *TmuxRequest_SetWindowVisible `protobuf:"bytes,3,opt,name=set_window_visible,json=setWindowVisible,oneof"`
}

type TmuxRequest_CreateWindow_ struct {
	CreateWindow *TmuxRequest_CreateWindow `protobuf:"bytes,4,opt,name=create_window,json=createWindow,oneof"`
}

func (*TmuxRequest_ListConnections_) isTmuxRequest_Payload() {}

func (*TmuxRequest_SendCommand_) isTmuxRequest_Payload() {}

func (*TmuxRequest_SetWindowVisible_) isTmuxRequest_Payload() {}

func (*TmuxRequest_CreateWindow_) isTmuxRequest_Payload() {}

type TmuxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Payload:
	//	*TmuxResponse_ListConnections_
	//	*TmuxResponse_SendCommand_
	//	*TmuxResponse_SetWindowVisible_
	//	*TmuxResponse_CreateWindow_
	Payload isTmuxResponse_Payload `protobuf_oneof:"payload"`
	Status  *TmuxResponse_Status   `protobuf:"varint,4,opt,name=status,enum=iterm2.TmuxResponse_Status" json:"status,omitempty"`
}

func (x *TmuxResponse) Reset() {
	*x = TmuxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxResponse) ProtoMessage() {}

func (x *TmuxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxResponse.ProtoReflect.Descriptor instead.
func (*TmuxResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{22}
}

func (m *TmuxResponse) GetPayload() isTmuxResponse_Payload {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (x *TmuxResponse) GetListConnections() *TmuxResponse_ListConnections {
	if x, ok := x.GetPayload().(*TmuxResponse_ListConnections_); ok {
		return x.ListConnections
	}
	return nil
}

func (x *TmuxResponse) GetSendCommand() *TmuxResponse_SendCommand {
	if x, ok := x.GetPayload().(*TmuxResponse_SendCommand_); ok {
		return x.SendCommand
	}
	return nil
}

func (x *TmuxResponse) GetSetWindowVisible() *TmuxResponse_SetWindowVisible {
	if x, ok := x.GetPayload().(*TmuxResponse_SetWindowVisible_); ok {
		return x.SetWindowVisible
	}
	return nil
}

func (x *TmuxResponse) GetCreateWindow() *TmuxResponse_CreateWindow {
	if x, ok := x.GetPayload().(*TmuxResponse_CreateWindow_); ok {
		return x.CreateWindow
	}
	return nil
}

func (x *TmuxResponse) GetStatus() TmuxResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return TmuxResponse_OK
}

type isTmuxResponse_Payload interface {
	isTmuxResponse_Payload()
}

type TmuxResponse_ListConnections_ struct {
	ListConnections *TmuxResponse_ListConnections `protobuf:"bytes,1,opt,name=list_connections,json=listConnections,oneof"`
}

type TmuxResponse_SendCommand_ struct {
	SendCommand *TmuxResponse_SendCommand `protobuf:"bytes,2,opt,name=send_command,json=sendCommand,oneof"`
}

type TmuxResponse_SetWindowVisible_ struct {
	SetWindowVisible *TmuxResponse_SetWindowVisible `protobuf:"bytes,3,opt,name=set_window_visible,json=setWindowVisible,oneof"`
}

type TmuxResponse_CreateWindow_ struct {
	CreateWindow *TmuxResponse_CreateWindow `protobuf:"bytes,5,opt,name=create_window,json=createWindow,oneof"`
}

func (*TmuxResponse_ListConnections_) isTmuxResponse_Payload() {}

func (*TmuxResponse_SendCommand_) isTmuxResponse_Payload() {}

func (*TmuxResponse_SetWindowVisible_) isTmuxResponse_Payload() {}

func (*TmuxResponse_CreateWindow_) isTmuxResponse_Payload() {}

type GetBroadcastDomainsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetBroadcastDomainsRequest) Reset() {
	*x = GetBroadcastDomainsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBroadcastDomainsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBroadcastDomainsRequest) ProtoMessage() {}

func (x *GetBroadcastDomainsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBroadcastDomainsRequest.ProtoReflect.Descriptor instead.
func (*GetBroadcastDomainsRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{23}
}

type BroadcastDomain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionIds []string `protobuf:"bytes,1,rep,name=session_ids,json=sessionIds" json:"session_ids,omitempty"`
}

func (x *BroadcastDomain) Reset() {
	*x = BroadcastDomain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastDomain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastDomain) ProtoMessage() {}

func (x *BroadcastDomain) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastDomain.ProtoReflect.Descriptor instead.
func (*BroadcastDomain) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{24}
}

func (x *BroadcastDomain) GetSessionIds() []string {
	if x != nil {
		return x.SessionIds
	}
	return nil
}

type GetBroadcastDomainsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastDomains []*BroadcastDomain `protobuf:"bytes,1,rep,name=broadcast_domains,json=broadcastDomains" json:"broadcast_domains,omitempty"`
}

func (x *GetBroadcastDomainsResponse) Reset() {
	*x = GetBroadcastDomainsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBroadcastDomainsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBroadcastDomainsResponse) ProtoMessage() {}

func (x *GetBroadcastDomainsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBroadcastDomainsResponse.ProtoReflect.Descriptor instead.
func (*GetBroadcastDomainsResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{25}
}

func (x *GetBroadcastDomainsResponse) GetBroadcastDomains() []*BroadcastDomain {
	if x != nil {
		return x.BroadcastDomains
	}
	return nil
}

type SetTabLayoutRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The tree structure must exactly match the actual tree structure, including the `vertical`
	// setting. Only the grid_sizes may change. They must still add up to the same value in every
	// dimension.
	Root  *SplitTreeNode `protobuf:"bytes,1,opt,name=root" json:"root,omitempty"`
	TabId *string        `protobuf:"bytes,2,opt,name=tab_id,json=tabId" json:"tab_id,omitempty"`
}

func (x *SetTabLayoutRequest) Reset() {
	*x = SetTabLayoutRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTabLayoutRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTabLayoutRequest) ProtoMessage() {}

func (x *SetTabLayoutRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTabLayoutRequest.ProtoReflect.Descriptor instead.
func (*SetTabLayoutRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{26}
}

func (x *SetTabLayoutRequest) GetRoot() *SplitTreeNode {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *SetTabLayoutRequest) GetTabId() string {
	if x != nil && x.TabId != nil {
		return *x.TabId
	}
	return ""
}

type SetTabLayoutResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SetTabLayoutResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SetTabLayoutResponse_Status" json:"status,omitempty"`
}

func (x *SetTabLayoutResponse) Reset() {
	*x = SetTabLayoutResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetTabLayoutResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetTabLayoutResponse) ProtoMessage() {}

func (x *SetTabLayoutResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetTabLayoutResponse.ProtoReflect.Descriptor instead.
func (*SetTabLayoutResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{27}
}

func (x *SetTabLayoutResponse) GetStatus() SetTabLayoutResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SetTabLayoutResponse_OK
}

// Invoke or ask for info about a menu item
type MenuItemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Unique identifier of the menu item.
	Identifier *string `protobuf:"bytes,1,opt,name=identifier" json:"identifier,omitempty"`
	// If set do not actually invoke it. Just return its state.
	QueryOnly *bool `protobuf:"varint,2,opt,name=query_only,json=queryOnly" json:"query_only,omitempty"`
}

func (x *MenuItemRequest) Reset() {
	*x = MenuItemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuItemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItemRequest) ProtoMessage() {}

func (x *MenuItemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItemRequest.ProtoReflect.Descriptor instead.
func (*MenuItemRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{28}
}

func (x *MenuItemRequest) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *MenuItemRequest) GetQueryOnly() bool {
	if x != nil && x.QueryOnly != nil {
		return *x.QueryOnly
	}
	return false
}

type MenuItemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status  *MenuItemResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.MenuItemResponse_Status" json:"status,omitempty"`
	Checked *bool                    `protobuf:"varint,2,opt,name=checked" json:"checked,omitempty"`
	Enabled *bool                    `protobuf:"varint,3,opt,name=enabled" json:"enabled,omitempty"`
}

func (x *MenuItemResponse) Reset() {
	*x = MenuItemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MenuItemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItemResponse) ProtoMessage() {}

func (x *MenuItemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItemResponse.ProtoReflect.Descriptor instead.
func (*MenuItemResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{29}
}

func (x *MenuItemResponse) GetStatus() MenuItemResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return MenuItemResponse_OK
}

func (x *MenuItemResponse) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

func (x *MenuItemResponse) GetEnabled() bool {
	if x != nil && x.Enabled != nil {
		return *x.Enabled
	}
	return false
}

type RestartSessionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"` // "all" not allowed.
	// If set, then still-running sessions will fail to restart with SESSION_NOT_RESTARTABLE.
	// If not set, then a still-running session gets killed and restarted.
	OnlyIfExited *bool `protobuf:"varint,2,opt,name=only_if_exited,json=onlyIfExited" json:"only_if_exited,omitempty"`
}

func (x *RestartSessionRequest) Reset() {
	*x = RestartSessionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartSessionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartSessionRequest) ProtoMessage() {}

func (x *RestartSessionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartSessionRequest.ProtoReflect.Descriptor instead.
func (*RestartSessionRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{30}
}

func (x *RestartSessionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *RestartSessionRequest) GetOnlyIfExited() bool {
	if x != nil && x.OnlyIfExited != nil {
		return *x.OnlyIfExited
	}
	return false
}

type RestartSessionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RestartSessionResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.RestartSessionResponse_Status" json:"status,omitempty"`
}

func (x *RestartSessionResponse) Reset() {
	*x = RestartSessionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RestartSessionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestartSessionResponse) ProtoMessage() {}

func (x *RestartSessionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestartSessionResponse.ProtoReflect.Descriptor instead.
func (*RestartSessionResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{31}
}

func (x *RestartSessionResponse) GetStatus() RestartSessionResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return RestartSessionResponse_OK
}

// This is the result of an iTerm2-to-script RPC call.
type ServerOriginatedRPCResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId *string `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	// Types that are assignable to Result:
	//	*ServerOriginatedRPCResultRequest_JsonException
	//	*ServerOriginatedRPCResultRequest_JsonValue
	Result isServerOriginatedRPCResultRequest_Result `protobuf_oneof:"result"`
}

func (x *ServerOriginatedRPCResultRequest) Reset() {
	*x = ServerOriginatedRPCResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOriginatedRPCResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOriginatedRPCResultRequest) ProtoMessage() {}

func (x *ServerOriginatedRPCResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOriginatedRPCResultRequest.ProtoReflect.Descriptor instead.
func (*ServerOriginatedRPCResultRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{32}
}

func (x *ServerOriginatedRPCResultRequest) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (m *ServerOriginatedRPCResultRequest) GetResult() isServerOriginatedRPCResultRequest_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *ServerOriginatedRPCResultRequest) GetJsonException() string {
	if x, ok := x.GetResult().(*ServerOriginatedRPCResultRequest_JsonException); ok {
		return x.JsonException
	}
	return ""
}

func (x *ServerOriginatedRPCResultRequest) GetJsonValue() string {
	if x, ok := x.GetResult().(*ServerOriginatedRPCResultRequest_JsonValue); ok {
		return x.JsonValue
	}
	return ""
}

type isServerOriginatedRPCResultRequest_Result interface {
	isServerOriginatedRPCResultRequest_Result()
}

type ServerOriginatedRPCResultRequest_JsonException struct {
	// Exceptions should be dictionaries with a key of "reason" having a string value describing
	// what went wrong.
	JsonException string `protobuf:"bytes,2,opt,name=json_exception,json=jsonException,oneof"`
}

type ServerOriginatedRPCResultRequest_JsonValue struct {
	JsonValue string `protobuf:"bytes,3,opt,name=json_value,json=jsonValue,oneof"`
}

func (*ServerOriginatedRPCResultRequest_JsonException) isServerOriginatedRPCResultRequest_Result() {}

func (*ServerOriginatedRPCResultRequest_JsonValue) isServerOriginatedRPCResultRequest_Result() {}

// This simply acknowledges receipt of ServerOriginatedRPCResultRequest.
type ServerOriginatedRPCResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ServerOriginatedRPCResultResponse) Reset() {
	*x = ServerOriginatedRPCResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOriginatedRPCResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOriginatedRPCResultResponse) ProtoMessage() {}

func (x *ServerOriginatedRPCResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOriginatedRPCResultResponse.ProtoReflect.Descriptor instead.
func (*ServerOriginatedRPCResultResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{33}
}

// Requests a list of all profiles.
type ListProfilesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The profile properties to respond with. See SetProfilePropertyRequest for a list of values.
	// If empty, all properties will be returned.
	Properties []string `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty"`
	// If empty, all profiles will be returned. Otherwise, only profiles with one of the listed
	// GUIDs will be returned.
	Guids []string `protobuf:"bytes,2,rep,name=guids" json:"guids,omitempty"`
}

func (x *ListProfilesRequest) Reset() {
	*x = ListProfilesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesRequest) ProtoMessage() {}

func (x *ListProfilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesRequest.ProtoReflect.Descriptor instead.
func (*ListProfilesRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{34}
}

func (x *ListProfilesRequest) GetProperties() []string {
	if x != nil {
		return x.Properties
	}
	return nil
}

func (x *ListProfilesRequest) GetGuids() []string {
	if x != nil {
		return x.Guids
	}
	return nil
}

type ListProfilesResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Profiles []*ListProfilesResponse_Profile `protobuf:"bytes,1,rep,name=profiles" json:"profiles,omitempty"`
}

func (x *ListProfilesResponse) Reset() {
	*x = ListProfilesResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesResponse) ProtoMessage() {}

func (x *ListProfilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesResponse.ProtoReflect.Descriptor instead.
func (*ListProfilesResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{35}
}

func (x *ListProfilesResponse) GetProfiles() []*ListProfilesResponse_Profile {
	if x != nil {
		return x.Profiles
	}
	return nil
}

type FocusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *FocusRequest) Reset() {
	*x = FocusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusRequest) ProtoMessage() {}

func (x *FocusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusRequest.ProtoReflect.Descriptor instead.
func (*FocusRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{36}
}

type FocusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A collection of notifications that completely describe the state of every tab and window and
	// the application itself.
	Notifications []*FocusChangedNotification `protobuf:"bytes,1,rep,name=notifications" json:"notifications,omitempty"`
}

func (x *FocusResponse) Reset() {
	*x = FocusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusResponse) ProtoMessage() {}

func (x *FocusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusResponse.ProtoReflect.Descriptor instead.
func (*FocusResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{37}
}

func (x *FocusResponse) GetNotifications() []*FocusChangedNotification {
	if x != nil {
		return x.Notifications
	}
	return nil
}

type SavedArrangementRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Not used for LIST
	Name   *string                         `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Action *SavedArrangementRequest_Action `protobuf:"varint,2,opt,name=action,enum=iterm2.SavedArrangementRequest_Action" json:"action,omitempty"`
	// If given and the action is SAVE then only the tabs in the identified window are saved.
	// If given and the action is RESTORE then the arrangement will be restored as tabs in the identified window.
	// Not used for LIST
	WindowId *string `protobuf:"bytes,3,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
}

func (x *SavedArrangementRequest) Reset() {
	*x = SavedArrangementRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedArrangementRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedArrangementRequest) ProtoMessage() {}

func (x *SavedArrangementRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedArrangementRequest.ProtoReflect.Descriptor instead.
func (*SavedArrangementRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{38}
}

func (x *SavedArrangementRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SavedArrangementRequest) GetAction() SavedArrangementRequest_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return SavedArrangementRequest_RESTORE
}

func (x *SavedArrangementRequest) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

type SavedArrangementResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SavedArrangementResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SavedArrangementResponse_Status" json:"status,omitempty"`
	Names  []string                         `protobuf:"bytes,2,rep,name=names" json:"names,omitempty"`
}

func (x *SavedArrangementResponse) Reset() {
	*x = SavedArrangementResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SavedArrangementResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SavedArrangementResponse) ProtoMessage() {}

func (x *SavedArrangementResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SavedArrangementResponse.ProtoReflect.Descriptor instead.
func (*SavedArrangementResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{39}
}

func (x *SavedArrangementResponse) GetStatus() SavedArrangementResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SavedArrangementResponse_OK
}

func (x *SavedArrangementResponse) GetNames() []string {
	if x != nil {
		return x.Names
	}
	return nil
}

type VariableRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Scope:
	//	*VariableRequest_SessionId
	//	*VariableRequest_TabId
	//	*VariableRequest_App
	//	*VariableRequest_WindowId
	Scope isVariableRequest_Scope `protobuf_oneof:"scope"`
	Set   []*VariableRequest_Set  `protobuf:"bytes,2,rep,name=set" json:"set,omitempty"`
	Get   []string                `protobuf:"bytes,3,rep,name=get" json:"get,omitempty"` // Set to special value "*" to get all in a JSON dictionary
}

func (x *VariableRequest) Reset() {
	*x = VariableRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableRequest) ProtoMessage() {}

func (x *VariableRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableRequest.ProtoReflect.Descriptor instead.
func (*VariableRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{40}
}

func (m *VariableRequest) GetScope() isVariableRequest_Scope {
	if m != nil {
		return m.Scope
	}
	return nil
}

func (x *VariableRequest) GetSessionId() string {
	if x, ok := x.GetScope().(*VariableRequest_SessionId); ok {
		return x.SessionId
	}
	return ""
}

func (x *VariableRequest) GetTabId() string {
	if x, ok := x.GetScope().(*VariableRequest_TabId); ok {
		return x.TabId
	}
	return ""
}

func (x *VariableRequest) GetApp() bool {
	if x, ok := x.GetScope().(*VariableRequest_App); ok {
		return x.App
	}
	return false
}

func (x *VariableRequest) GetWindowId() string {
	if x, ok := x.GetScope().(*VariableRequest_WindowId); ok {
		return x.WindowId
	}
	return ""
}

func (x *VariableRequest) GetSet() []*VariableRequest_Set {
	if x != nil {
		return x.Set
	}
	return nil
}

func (x *VariableRequest) GetGet() []string {
	if x != nil {
		return x.Get
	}
	return nil
}

type isVariableRequest_Scope interface {
	isVariableRequest_Scope()
}

type VariableRequest_SessionId struct {
	SessionId string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,oneof"` // "all" is allowed only if no gets (only sets allowed)
}

type VariableRequest_TabId struct {
	TabId string `protobuf:"bytes,4,opt,name=tab_id,json=tabId,oneof"` // "all" is allowed only if no gets (only sets allowed)
}

type VariableRequest_App struct {
	App bool `protobuf:"varint,5,opt,name=app,oneof"`
}

type VariableRequest_WindowId struct {
	WindowId string `protobuf:"bytes,6,opt,name=window_id,json=windowId,oneof"` // "all" is allowed only if no gets (only sets allowed)
}

func (*VariableRequest_SessionId) isVariableRequest_Scope() {}

func (*VariableRequest_TabId) isVariableRequest_Scope() {}

func (*VariableRequest_App) isVariableRequest_Scope() {}

func (*VariableRequest_WindowId) isVariableRequest_Scope() {}

type VariableResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *VariableResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.VariableResponse_Status" json:"status,omitempty"`
	Values []string                 `protobuf:"bytes,2,rep,name=values" json:"values,omitempty"` // 1:1 with get field in request.  JSON encoded, with null for unset variables.
}

func (x *VariableResponse) Reset() {
	*x = VariableResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableResponse) ProtoMessage() {}

func (x *VariableResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableResponse.ProtoReflect.Descriptor instead.
func (*VariableResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{41}
}

func (x *VariableResponse) GetStatus() VariableResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return VariableResponse_OK
}

func (x *VariableResponse) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type ActivateRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// To activate the app without changing anything else omit the identifier.
	//
	// Types that are assignable to Identifier:
	//	*ActivateRequest_WindowId
	//	*ActivateRequest_TabId
	//	*ActivateRequest_SessionId
	Identifier       isActivateRequest_Identifier `protobuf_oneof:"identifier"`
	OrderWindowFront *bool                        `protobuf:"varint,4,opt,name=order_window_front,json=orderWindowFront" json:"order_window_front,omitempty"`
	// This may be enabled if tab_id or session_id is set.
	SelectTab *bool `protobuf:"varint,5,opt,name=select_tab,json=selectTab" json:"select_tab,omitempty"`
	// This may be enabled if session_id is set.
	SelectSession *bool                `protobuf:"varint,6,opt,name=select_session,json=selectSession" json:"select_session,omitempty"`
	ActivateApp   *ActivateRequest_App `protobuf:"bytes,7,opt,name=activate_app,json=activateApp" json:"activate_app,omitempty"`
}

func (x *ActivateRequest) Reset() {
	*x = ActivateRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRequest) ProtoMessage() {}

func (x *ActivateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRequest.ProtoReflect.Descriptor instead.
func (*ActivateRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{42}
}

func (m *ActivateRequest) GetIdentifier() isActivateRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *ActivateRequest) GetWindowId() string {
	if x, ok := x.GetIdentifier().(*ActivateRequest_WindowId); ok {
		return x.WindowId
	}
	return ""
}

func (x *ActivateRequest) GetTabId() string {
	if x, ok := x.GetIdentifier().(*ActivateRequest_TabId); ok {
		return x.TabId
	}
	return ""
}

func (x *ActivateRequest) GetSessionId() string {
	if x, ok := x.GetIdentifier().(*ActivateRequest_SessionId); ok {
		return x.SessionId
	}
	return ""
}

func (x *ActivateRequest) GetOrderWindowFront() bool {
	if x != nil && x.OrderWindowFront != nil {
		return *x.OrderWindowFront
	}
	return false
}

func (x *ActivateRequest) GetSelectTab() bool {
	if x != nil && x.SelectTab != nil {
		return *x.SelectTab
	}
	return false
}

func (x *ActivateRequest) GetSelectSession() bool {
	if x != nil && x.SelectSession != nil {
		return *x.SelectSession
	}
	return false
}

func (x *ActivateRequest) GetActivateApp() *ActivateRequest_App {
	if x != nil {
		return x.ActivateApp
	}
	return nil
}

type isActivateRequest_Identifier interface {
	isActivateRequest_Identifier()
}

type ActivateRequest_WindowId struct {
	WindowId string `protobuf:"bytes,1,opt,name=window_id,json=windowId,oneof"`
}

type ActivateRequest_TabId struct {
	TabId string `protobuf:"bytes,2,opt,name=tab_id,json=tabId,oneof"`
}

type ActivateRequest_SessionId struct {
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,oneof"`
}

func (*ActivateRequest_WindowId) isActivateRequest_Identifier() {}

func (*ActivateRequest_TabId) isActivateRequest_Identifier() {}

func (*ActivateRequest_SessionId) isActivateRequest_Identifier() {}

type ActivateResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *ActivateResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.ActivateResponse_Status" json:"status,omitempty"`
}

func (x *ActivateResponse) Reset() {
	*x = ActivateResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateResponse) ProtoMessage() {}

func (x *ActivateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateResponse.ProtoReflect.Descriptor instead.
func (*ActivateResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{43}
}

func (x *ActivateResponse) GetStatus() ActivateResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return ActivateResponse_OK
}

// Injects bytes as input to the terminal, as though the running program had produced them.
type InjectRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId []string `protobuf:"bytes,1,rep,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Data      []byte   `protobuf:"bytes,2,opt,name=data" json:"data,omitempty"`
}

func (x *InjectRequest) Reset() {
	*x = InjectRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectRequest) ProtoMessage() {}

func (x *InjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectRequest.ProtoReflect.Descriptor instead.
func (*InjectRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{44}
}

func (x *InjectRequest) GetSessionId() []string {
	if x != nil {
		return x.SessionId
	}
	return nil
}

func (x *InjectRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type InjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// One status per session_id in the request
	Status []InjectResponse_Status `protobuf:"varint,1,rep,name=status,enum=iterm2.InjectResponse_Status" json:"status,omitempty"`
}

func (x *InjectResponse) Reset() {
	*x = InjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InjectResponse) ProtoMessage() {}

func (x *InjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InjectResponse.ProtoReflect.Descriptor instead.
func (*InjectResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{45}
}

func (x *InjectResponse) GetStatus() []InjectResponse_Status {
	if x != nil {
		return x.Status
	}
	return nil
}

type GetPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The kind of ID that's set determines the kind of object you're querying.
	//
	// Types that are assignable to Identifier:
	//	*GetPropertyRequest_WindowId
	//	*GetPropertyRequest_SessionId
	Identifier isGetPropertyRequest_Identifier `protobuf_oneof:"identifier"`
	// For sessions:
	// "grid_size" -> { "width": number, "height": number }
	// "buried" -> boolean
	// "number_of_lines" -> { "overflow": number, "grid": number, "history": number }
	//
	// For windows:
	// "frame" -> { "origin": { "x": number, "y": number }, "size": { "width": number, "height": number } }
	// "fullscreen" -> boolean
	Name *string `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
}

func (x *GetPropertyRequest) Reset() {
	*x = GetPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyRequest) ProtoMessage() {}

func (x *GetPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyRequest.ProtoReflect.Descriptor instead.
func (*GetPropertyRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{46}
}

func (m *GetPropertyRequest) GetIdentifier() isGetPropertyRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *GetPropertyRequest) GetWindowId() string {
	if x, ok := x.GetIdentifier().(*GetPropertyRequest_WindowId); ok {
		return x.WindowId
	}
	return ""
}

func (x *GetPropertyRequest) GetSessionId() string {
	if x, ok := x.GetIdentifier().(*GetPropertyRequest_SessionId); ok {
		return x.SessionId
	}
	return ""
}

func (x *GetPropertyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type isGetPropertyRequest_Identifier interface {
	isGetPropertyRequest_Identifier()
}

type GetPropertyRequest_WindowId struct {
	WindowId string `protobuf:"bytes,1,opt,name=window_id,json=windowId,oneof"`
}

type GetPropertyRequest_SessionId struct {
	SessionId string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,oneof"` // Does not accept "all". Accepts "active".
}

func (*GetPropertyRequest_WindowId) isGetPropertyRequest_Identifier() {}

func (*GetPropertyRequest_SessionId) isGetPropertyRequest_Identifier() {}

type GetPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name           Example value
	// -------------  ---------------
	// frame          { "origin": { "x": 0, "y": 0 }, "size": { "width": 1024, "height": 768 }}
	// fullscreen     true, false
	//
	// For sessions:
	// grid_size      { "width": 80, "height": 25 }
	// buried         true
	Status    *GetPropertyResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.GetPropertyResponse_Status" json:"status,omitempty"`
	JsonValue *string                     `protobuf:"bytes,2,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"`
}

func (x *GetPropertyResponse) Reset() {
	*x = GetPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPropertyResponse) ProtoMessage() {}

func (x *GetPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPropertyResponse.ProtoReflect.Descriptor instead.
func (*GetPropertyResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{47}
}

func (x *GetPropertyResponse) GetStatus() GetPropertyResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return GetPropertyResponse_OK
}

func (x *GetPropertyResponse) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

type SetPropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Eventually you'll be able to set properties on other things besides The kind of ID that's set
	// determines the kind of object you're updating.
	//
	// Types that are assignable to Identifier:
	//	*SetPropertyRequest_WindowId
	//	*SetPropertyRequest_SessionId
	Identifier isSetPropertyRequest_Identifier `protobuf_oneof:"identifier"`
	// For windows:
	// Name           Example JSON
	// -------------  ---------------
	// frame          { "origin": { "x": 0, "y": 0 }, "size": { "width": 1024, "height": 768 }}
	// fullscreen     true, false
	//
	// For sessions:
	// grid_size      { "width": 80, "height": 25 }
	// buried         true
	Name      *string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	JsonValue *string `protobuf:"bytes,4,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"`
}

func (x *SetPropertyRequest) Reset() {
	*x = SetPropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPropertyRequest) ProtoMessage() {}

func (x *SetPropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPropertyRequest.ProtoReflect.Descriptor instead.
func (*SetPropertyRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{48}
}

func (m *SetPropertyRequest) GetIdentifier() isSetPropertyRequest_Identifier {
	if m != nil {
		return m.Identifier
	}
	return nil
}

func (x *SetPropertyRequest) GetWindowId() string {
	if x, ok := x.GetIdentifier().(*SetPropertyRequest_WindowId); ok {
		return x.WindowId
	}
	return ""
}

func (x *SetPropertyRequest) GetSessionId() string {
	if x, ok := x.GetIdentifier().(*SetPropertyRequest_SessionId); ok {
		return x.SessionId
	}
	return ""
}

func (x *SetPropertyRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SetPropertyRequest) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

type isSetPropertyRequest_Identifier interface {
	isSetPropertyRequest_Identifier()
}

type SetPropertyRequest_WindowId struct {
	WindowId string `protobuf:"bytes,1,opt,name=window_id,json=windowId,oneof"`
}

type SetPropertyRequest_SessionId struct {
	SessionId string `protobuf:"bytes,5,opt,name=session_id,json=sessionId,oneof"` // Accepts "all" and "active"
}

func (*SetPropertyRequest_WindowId) isSetPropertyRequest_Identifier() {}

func (*SetPropertyRequest_SessionId) isSetPropertyRequest_Identifier() {}

type SetPropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SetPropertyResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SetPropertyResponse_Status" json:"status,omitempty"`
}

func (x *SetPropertyResponse) Reset() {
	*x = SetPropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetPropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetPropertyResponse) ProtoMessage() {}

func (x *SetPropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetPropertyResponse.ProtoReflect.Descriptor instead.
func (*SetPropertyResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{49}
}

func (x *SetPropertyResponse) GetStatus() SetPropertyResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SetPropertyResponse_OK
}

// Registers a toolbelt tool that displays a webview with a URL of your choice.
type RegisterToolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This name is displayed to the user.
	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// The tool's identifier should be unique. Prefix it with your app bundle. For example:
	// com.example.mytool
	Identifier *string `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"`
	// The first time a tool is registered iTerm2 automatically adds it to the
	// set of visible tools. To show it on subsequent re-registrations, set this
	// to true. If the toolbelt itself is hidden, it will not be opened.
	RevealIfAlreadyRegistered *bool                         `protobuf:"varint,5,opt,name=reveal_if_already_registered,json=revealIfAlreadyRegistered,def=0" json:"reveal_if_already_registered,omitempty"`
	ToolType                  *RegisterToolRequest_ToolType `protobuf:"varint,3,opt,name=tool_type,json=toolType,enum=iterm2.RegisterToolRequest_ToolType,def=1" json:"tool_type,omitempty"`
	// For web view tools: The URL loaded at startup
	URL *string `protobuf:"bytes,4,opt,name=URL" json:"URL,omitempty"`
}

// Default values for RegisterToolRequest fields.
const (
	Default_RegisterToolRequest_RevealIfAlreadyRegistered = bool(false)
	Default_RegisterToolRequest_ToolType                  = RegisterToolRequest_WEB_VIEW_TOOL
)

func (x *RegisterToolRequest) Reset() {
	*x = RegisterToolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterToolRequest) ProtoMessage() {}

func (x *RegisterToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterToolRequest.ProtoReflect.Descriptor instead.
func (*RegisterToolRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{50}
}

func (x *RegisterToolRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RegisterToolRequest) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *RegisterToolRequest) GetRevealIfAlreadyRegistered() bool {
	if x != nil && x.RevealIfAlreadyRegistered != nil {
		return *x.RevealIfAlreadyRegistered
	}
	return Default_RegisterToolRequest_RevealIfAlreadyRegistered
}

func (x *RegisterToolRequest) GetToolType() RegisterToolRequest_ToolType {
	if x != nil && x.ToolType != nil {
		return *x.ToolType
	}
	return Default_RegisterToolRequest_ToolType
}

func (x *RegisterToolRequest) GetURL() string {
	if x != nil && x.URL != nil {
		return *x.URL
	}
	return ""
}

// Describes an RPC from iTerm2 to script. I don't want to invent my own type
// system so this is dynamically typed, which matches Python well enough.
type RPCRegistrationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string                                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Arguments []*RPCRegistrationRequest_RPCArgumentSignature `protobuf:"bytes,2,rep,name=arguments" json:"arguments,omitempty"`
	Defaults  []*RPCRegistrationRequest_RPCArgument          `protobuf:"bytes,4,rep,name=defaults" json:"defaults,omitempty"`
	// If not specified, iTerm2 decides based on its built-in default.
	Timeout *float32                     `protobuf:"fixed32,3,opt,name=timeout" json:"timeout,omitempty"`
	Role    *RPCRegistrationRequest_Role `protobuf:"varint,5,opt,name=role,enum=iterm2.RPCRegistrationRequest_Role,def=1" json:"role,omitempty"`
	// Types that are assignable to RoleSpecificAttributes:
	//	*RPCRegistrationRequest_SessionTitleAttributes_
	//	*RPCRegistrationRequest_StatusBarComponentAttributes_
	//	*RPCRegistrationRequest_ContextMenuAttributes_
	RoleSpecificAttributes isRPCRegistrationRequest_RoleSpecificAttributes `protobuf_oneof:"RoleSpecificAttributes"`
	// Deprecated: Do not use.
	DisplayName *string `protobuf:"bytes,6,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
}

// Default values for RPCRegistrationRequest fields.
const (
	Default_RPCRegistrationRequest_Role = RPCRegistrationRequest_GENERIC
)

func (x *RPCRegistrationRequest) Reset() {
	*x = RPCRegistrationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest) ProtoMessage() {}

func (x *RPCRegistrationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51}
}

func (x *RPCRegistrationRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RPCRegistrationRequest) GetArguments() []*RPCRegistrationRequest_RPCArgumentSignature {
	if x != nil {
		return x.Arguments
	}
	return nil
}

func (x *RPCRegistrationRequest) GetDefaults() []*RPCRegistrationRequest_RPCArgument {
	if x != nil {
		return x.Defaults
	}
	return nil
}

func (x *RPCRegistrationRequest) GetTimeout() float32 {
	if x != nil && x.Timeout != nil {
		return *x.Timeout
	}
	return 0
}

func (x *RPCRegistrationRequest) GetRole() RPCRegistrationRequest_Role {
	if x != nil && x.Role != nil {
		return *x.Role
	}
	return Default_RPCRegistrationRequest_Role
}

func (m *RPCRegistrationRequest) GetRoleSpecificAttributes() isRPCRegistrationRequest_RoleSpecificAttributes {
	if m != nil {
		return m.RoleSpecificAttributes
	}
	return nil
}

func (x *RPCRegistrationRequest) GetSessionTitleAttributes() *RPCRegistrationRequest_SessionTitleAttributes {
	if x, ok := x.GetRoleSpecificAttributes().(*RPCRegistrationRequest_SessionTitleAttributes_); ok {
		return x.SessionTitleAttributes
	}
	return nil
}

func (x *RPCRegistrationRequest) GetStatusBarComponentAttributes() *RPCRegistrationRequest_StatusBarComponentAttributes {
	if x, ok := x.GetRoleSpecificAttributes().(*RPCRegistrationRequest_StatusBarComponentAttributes_); ok {
		return x.StatusBarComponentAttributes
	}
	return nil
}

func (x *RPCRegistrationRequest) GetContextMenuAttributes() *RPCRegistrationRequest_ContextMenuAttributes {
	if x, ok := x.GetRoleSpecificAttributes().(*RPCRegistrationRequest_ContextMenuAttributes_); ok {
		return x.ContextMenuAttributes
	}
	return nil
}

// Deprecated: Do not use.
func (x *RPCRegistrationRequest) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

type isRPCRegistrationRequest_RoleSpecificAttributes interface {
	isRPCRegistrationRequest_RoleSpecificAttributes()
}

type RPCRegistrationRequest_SessionTitleAttributes_ struct {
	SessionTitleAttributes *RPCRegistrationRequest_SessionTitleAttributes `protobuf:"bytes,7,opt,name=session_title_attributes,json=sessionTitleAttributes,oneof"`
}

type RPCRegistrationRequest_StatusBarComponentAttributes_ struct {
	StatusBarComponentAttributes *RPCRegistrationRequest_StatusBarComponentAttributes `protobuf:"bytes,8,opt,name=status_bar_component_attributes,json=statusBarComponentAttributes,oneof"`
}

type RPCRegistrationRequest_ContextMenuAttributes_ struct {
	ContextMenuAttributes *RPCRegistrationRequest_ContextMenuAttributes `protobuf:"bytes,9,opt,name=context_menu_attributes,json=contextMenuAttributes,oneof"`
}

func (*RPCRegistrationRequest_SessionTitleAttributes_) isRPCRegistrationRequest_RoleSpecificAttributes() {
}

func (*RPCRegistrationRequest_StatusBarComponentAttributes_) isRPCRegistrationRequest_RoleSpecificAttributes() {
}

func (*RPCRegistrationRequest_ContextMenuAttributes_) isRPCRegistrationRequest_RoleSpecificAttributes() {
}

type RegisterToolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *RegisterToolResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.RegisterToolResponse_Status" json:"status,omitempty"`
}

func (x *RegisterToolResponse) Reset() {
	*x = RegisterToolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RegisterToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterToolResponse) ProtoMessage() {}

func (x *RegisterToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterToolResponse.ProtoReflect.Descriptor instead.
func (*RegisterToolResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{52}
}

func (x *RegisterToolResponse) GetStatus() RegisterToolResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return RegisterToolResponse_OK
}

type KeystrokePattern struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The keystroke matches the pattern if it has all the required and none of the forbidden modifiers.
	RequiredModifiers  []Modifiers `protobuf:"varint,1,rep,name=required_modifiers,json=requiredModifiers,enum=iterm2.Modifiers" json:"required_modifiers,omitempty"`
	ForbiddenModifiers []Modifiers `protobuf:"varint,2,rep,name=forbidden_modifiers,json=forbiddenModifiers,enum=iterm2.Modifiers" json:"forbidden_modifiers,omitempty"`
	// The pattern matches if the keystroke has any of these keycodes:
	Keycodes []int32 `protobuf:"varint,3,rep,name=keycodes" json:"keycodes,omitempty"`
	// The pattern matches if the keystroke equals of any of these characters:
	Characters []string `protobuf:"bytes,4,rep,name=characters" json:"characters,omitempty"`
	// The pattern matches if the keystroke equals any of these characters ignoring modifiers.
	// This is Apple parlance for "ignoring the shift key plus various other undocumented things"
	CharactersIgnoringModifiers []string `protobuf:"bytes,5,rep,name=characters_ignoring_modifiers,json=charactersIgnoringModifiers" json:"characters_ignoring_modifiers,omitempty"`
}

func (x *KeystrokePattern) Reset() {
	*x = KeystrokePattern{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeystrokePattern) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeystrokePattern) ProtoMessage() {}

func (x *KeystrokePattern) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeystrokePattern.ProtoReflect.Descriptor instead.
func (*KeystrokePattern) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{53}
}

func (x *KeystrokePattern) GetRequiredModifiers() []Modifiers {
	if x != nil {
		return x.RequiredModifiers
	}
	return nil
}

func (x *KeystrokePattern) GetForbiddenModifiers() []Modifiers {
	if x != nil {
		return x.ForbiddenModifiers
	}
	return nil
}

func (x *KeystrokePattern) GetKeycodes() []int32 {
	if x != nil {
		return x.Keycodes
	}
	return nil
}

func (x *KeystrokePattern) GetCharacters() []string {
	if x != nil {
		return x.Characters
	}
	return nil
}

func (x *KeystrokePattern) GetCharactersIgnoringModifiers() []string {
	if x != nil {
		return x.CharactersIgnoringModifiers
	}
	return nil
}

type KeystrokeMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// KeystrokeFilterRequest was split from this to make a more sensible API.
	//
	// Deprecated: Do not use.
	PatternsToIgnore []*KeystrokePattern `protobuf:"bytes,1,rep,name=patterns_to_ignore,json=patternsToIgnore" json:"patterns_to_ignore,omitempty"`
	// If false, then only key-down events are sent. If true, key-down, key-up, and flags-changed events are sent.
	Advanced *bool `protobuf:"varint,2,opt,name=advanced" json:"advanced,omitempty"`
}

func (x *KeystrokeMonitorRequest) Reset() {
	*x = KeystrokeMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeystrokeMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeystrokeMonitorRequest) ProtoMessage() {}

func (x *KeystrokeMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeystrokeMonitorRequest.ProtoReflect.Descriptor instead.
func (*KeystrokeMonitorRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{54}
}

// Deprecated: Do not use.
func (x *KeystrokeMonitorRequest) GetPatternsToIgnore() []*KeystrokePattern {
	if x != nil {
		return x.PatternsToIgnore
	}
	return nil
}

func (x *KeystrokeMonitorRequest) GetAdvanced() bool {
	if x != nil && x.Advanced != nil {
		return *x.Advanced
	}
	return false
}

type KeystrokeFilterRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If a keystroke matches any of these patterns then they will not be handled by the application.
	// A notification will be posted and the script can handle it as it pleases.
	PatternsToIgnore []*KeystrokePattern `protobuf:"bytes,1,rep,name=patterns_to_ignore,json=patternsToIgnore" json:"patterns_to_ignore,omitempty"`
}

func (x *KeystrokeFilterRequest) Reset() {
	*x = KeystrokeFilterRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeystrokeFilterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeystrokeFilterRequest) ProtoMessage() {}

func (x *KeystrokeFilterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeystrokeFilterRequest.ProtoReflect.Descriptor instead.
func (*KeystrokeFilterRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{55}
}

func (x *KeystrokeFilterRequest) GetPatternsToIgnore() []*KeystrokePattern {
	if x != nil {
		return x.PatternsToIgnore
	}
	return nil
}

type VariableMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name       *string        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Scope      *VariableScope `protobuf:"varint,2,opt,name=scope,enum=iterm2.VariableScope" json:"scope,omitempty"`
	Identifier *string        `protobuf:"bytes,3,opt,name=identifier" json:"identifier,omitempty"` // Session, Window, or Tab identifier.
}

func (x *VariableMonitorRequest) Reset() {
	*x = VariableMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableMonitorRequest) ProtoMessage() {}

func (x *VariableMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableMonitorRequest.ProtoReflect.Descriptor instead.
func (*VariableMonitorRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{56}
}

func (x *VariableMonitorRequest) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VariableMonitorRequest) GetScope() VariableScope {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return VariableScope_SESSION
}

func (x *VariableMonitorRequest) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

type ProfileChangeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid *string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
}

func (x *ProfileChangeRequest) Reset() {
	*x = ProfileChangeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileChangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileChangeRequest) ProtoMessage() {}

func (x *ProfileChangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileChangeRequest.ProtoReflect.Descriptor instead.
func (*ProfileChangeRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{57}
}

func (x *ProfileChangeRequest) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

type PromptMonitorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modes []PromptMonitorMode `protobuf:"varint,1,rep,name=modes,enum=iterm2.PromptMonitorMode" json:"modes,omitempty"`
}

func (x *PromptMonitorRequest) Reset() {
	*x = PromptMonitorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromptMonitorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptMonitorRequest) ProtoMessage() {}

func (x *PromptMonitorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptMonitorRequest.ProtoReflect.Descriptor instead.
func (*PromptMonitorRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{58}
}

func (x *PromptMonitorRequest) GetModes() []PromptMonitorMode {
	if x != nil {
		return x.Modes
	}
	return nil
}

type NotificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See documentation on session IDs. NOTIFY_ON_NEW_SESSION, NOTIFY_ON_TERMINATE_SESSION, and
	// NOTIFY_ON_LAYOUT_CHANGE do not use the session ID and are posted on all such events.
	//
	// NOTE: This is not used for NOTIFY_ON_VARIABLE_CHANGE.
	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	// Set to true to subscribe, false to unsubscribe.
	Subscribe *bool `protobuf:"varint,2,opt,name=subscribe" json:"subscribe,omitempty"`
	// When to be notified (or notification to unsubscribe from)
	NotificationType *NotificationType `protobuf:"varint,3,opt,name=notification_type,json=notificationType,enum=iterm2.NotificationType" json:"notification_type,omitempty"`
	// Types that are assignable to Arguments:
	//	*NotificationRequest_RpcRegistrationRequest
	//	*NotificationRequest_KeystrokeMonitorRequest
	//	*NotificationRequest_VariableMonitorRequest
	//	*NotificationRequest_ProfileChangeRequest
	//	*NotificationRequest_KeystrokeFilterRequest
	//	*NotificationRequest_PromptMonitorRequest
	Arguments isNotificationRequest_Arguments `protobuf_oneof:"arguments"`
}

func (x *NotificationRequest) Reset() {
	*x = NotificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationRequest) ProtoMessage() {}

func (x *NotificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationRequest.ProtoReflect.Descriptor instead.
func (*NotificationRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{59}
}

func (x *NotificationRequest) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *NotificationRequest) GetSubscribe() bool {
	if x != nil && x.Subscribe != nil {
		return *x.Subscribe
	}
	return false
}

func (x *NotificationRequest) GetNotificationType() NotificationType {
	if x != nil && x.NotificationType != nil {
		return *x.NotificationType
	}
	return NotificationType_NOTIFY_ON_KEYSTROKE
}

func (m *NotificationRequest) GetArguments() isNotificationRequest_Arguments {
	if m != nil {
		return m.Arguments
	}
	return nil
}

func (x *NotificationRequest) GetRpcRegistrationRequest() *RPCRegistrationRequest {
	if x, ok := x.GetArguments().(*NotificationRequest_RpcRegistrationRequest); ok {
		return x.RpcRegistrationRequest
	}
	return nil
}

func (x *NotificationRequest) GetKeystrokeMonitorRequest() *KeystrokeMonitorRequest {
	if x, ok := x.GetArguments().(*NotificationRequest_KeystrokeMonitorRequest); ok {
		return x.KeystrokeMonitorRequest
	}
	return nil
}

func (x *NotificationRequest) GetVariableMonitorRequest() *VariableMonitorRequest {
	if x, ok := x.GetArguments().(*NotificationRequest_VariableMonitorRequest); ok {
		return x.VariableMonitorRequest
	}
	return nil
}

func (x *NotificationRequest) GetProfileChangeRequest() *ProfileChangeRequest {
	if x, ok := x.GetArguments().(*NotificationRequest_ProfileChangeRequest); ok {
		return x.ProfileChangeRequest
	}
	return nil
}

func (x *NotificationRequest) GetKeystrokeFilterRequest() *KeystrokeFilterRequest {
	if x, ok := x.GetArguments().(*NotificationRequest_KeystrokeFilterRequest); ok {
		return x.KeystrokeFilterRequest
	}
	return nil
}

func (x *NotificationRequest) GetPromptMonitorRequest() *PromptMonitorRequest {
	if x, ok := x.GetArguments().(*NotificationRequest_PromptMonitorRequest); ok {
		return x.PromptMonitorRequest
	}
	return nil
}

type isNotificationRequest_Arguments interface {
	isNotificationRequest_Arguments()
}

type NotificationRequest_RpcRegistrationRequest struct {
	RpcRegistrationRequest *RPCRegistrationRequest `protobuf:"bytes,4,opt,name=rpc_registration_request,json=rpcRegistrationRequest,oneof"` // For NOTIFY_ON_SERVER_ORIGINATED_RPC
}

type NotificationRequest_KeystrokeMonitorRequest struct {
	KeystrokeMonitorRequest *KeystrokeMonitorRequest `protobuf:"bytes,5,opt,name=keystroke_monitor_request,json=keystrokeMonitorRequest,oneof"`
}

type NotificationRequest_VariableMonitorRequest struct {
	VariableMonitorRequest *VariableMonitorRequest `protobuf:"bytes,6,opt,name=variable_monitor_request,json=variableMonitorRequest,oneof"`
}

type NotificationRequest_ProfileChangeRequest struct {
	ProfileChangeRequest *ProfileChangeRequest `protobuf:"bytes,7,opt,name=profile_change_request,json=profileChangeRequest,oneof"`
}

type NotificationRequest_KeystrokeFilterRequest struct {
	KeystrokeFilterRequest *KeystrokeFilterRequest `protobuf:"bytes,8,opt,name=keystroke_filter_request,json=keystrokeFilterRequest,oneof"`
}

type NotificationRequest_PromptMonitorRequest struct {
	PromptMonitorRequest *PromptMonitorRequest `protobuf:"bytes,9,opt,name=prompt_monitor_request,json=promptMonitorRequest,oneof"`
}

func (*NotificationRequest_RpcRegistrationRequest) isNotificationRequest_Arguments() {}

func (*NotificationRequest_KeystrokeMonitorRequest) isNotificationRequest_Arguments() {}

func (*NotificationRequest_VariableMonitorRequest) isNotificationRequest_Arguments() {}

func (*NotificationRequest_ProfileChangeRequest) isNotificationRequest_Arguments() {}

func (*NotificationRequest_KeystrokeFilterRequest) isNotificationRequest_Arguments() {}

func (*NotificationRequest_PromptMonitorRequest) isNotificationRequest_Arguments() {}

type NotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *NotificationResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.NotificationResponse_Status" json:"status,omitempty"`
}

func (x *NotificationResponse) Reset() {
	*x = NotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationResponse) ProtoMessage() {}

func (x *NotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationResponse.ProtoReflect.Descriptor instead.
func (*NotificationResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{60}
}

func (x *NotificationResponse) GetStatus() NotificationResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return NotificationResponse_OK
}

type Notification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	KeystrokeNotification    *KeystrokeNotification    `protobuf:"bytes,1,opt,name=keystroke_notification,json=keystrokeNotification" json:"keystroke_notification,omitempty"`
	ScreenUpdateNotification *ScreenUpdateNotification `protobuf:"bytes,2,opt,name=screen_update_notification,json=screenUpdateNotification" json:"screen_update_notification,omitempty"`
	PromptNotification       *PromptNotification       `protobuf:"bytes,3,opt,name=prompt_notification,json=promptNotification" json:"prompt_notification,omitempty"`
	// Deprecated: Do not use.
	LocationChangeNotification       *LocationChangeNotification          `protobuf:"bytes,4,opt,name=location_change_notification,json=locationChangeNotification" json:"location_change_notification,omitempty"`
	CustomEscapeSequenceNotification *CustomEscapeSequenceNotification    `protobuf:"bytes,5,opt,name=custom_escape_sequence_notification,json=customEscapeSequenceNotification" json:"custom_escape_sequence_notification,omitempty"`
	NewSessionNotification           *NewSessionNotification              `protobuf:"bytes,6,opt,name=new_session_notification,json=newSessionNotification" json:"new_session_notification,omitempty"`
	TerminateSessionNotification     *TerminateSessionNotification        `protobuf:"bytes,7,opt,name=terminate_session_notification,json=terminateSessionNotification" json:"terminate_session_notification,omitempty"`
	LayoutChangedNotification        *LayoutChangedNotification           `protobuf:"bytes,8,opt,name=layout_changed_notification,json=layoutChangedNotification" json:"layout_changed_notification,omitempty"`
	FocusChangedNotification         *FocusChangedNotification            `protobuf:"bytes,9,opt,name=focus_changed_notification,json=focusChangedNotification" json:"focus_changed_notification,omitempty"`
	ServerOriginatedRpcNotification  *ServerOriginatedRPCNotification     `protobuf:"bytes,10,opt,name=server_originated_rpc_notification,json=serverOriginatedRpcNotification" json:"server_originated_rpc_notification,omitempty"`
	BroadcastDomainsChanged          *BroadcastDomainsChangedNotification `protobuf:"bytes,11,opt,name=broadcast_domains_changed,json=broadcastDomainsChanged" json:"broadcast_domains_changed,omitempty"`
	VariableChangedNotification      *VariableChangedNotification         `protobuf:"bytes,12,opt,name=variable_changed_notification,json=variableChangedNotification" json:"variable_changed_notification,omitempty"`
	ProfileChangedNotification       *ProfileChangedNotification          `protobuf:"bytes,13,opt,name=profile_changed_notification,json=profileChangedNotification" json:"profile_changed_notification,omitempty"`
}

func (x *Notification) Reset() {
	*x = Notification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Notification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Notification) ProtoMessage() {}

func (x *Notification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Notification.ProtoReflect.Descriptor instead.
func (*Notification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{61}
}

func (x *Notification) GetKeystrokeNotification() *KeystrokeNotification {
	if x != nil {
		return x.KeystrokeNotification
	}
	return nil
}

func (x *Notification) GetScreenUpdateNotification() *ScreenUpdateNotification {
	if x != nil {
		return x.ScreenUpdateNotification
	}
	return nil
}

func (x *Notification) GetPromptNotification() *PromptNotification {
	if x != nil {
		return x.PromptNotification
	}
	return nil
}

// Deprecated: Do not use.
func (x *Notification) GetLocationChangeNotification() *LocationChangeNotification {
	if x != nil {
		return x.LocationChangeNotification
	}
	return nil
}

func (x *Notification) GetCustomEscapeSequenceNotification() *CustomEscapeSequenceNotification {
	if x != nil {
		return x.CustomEscapeSequenceNotification
	}
	return nil
}

func (x *Notification) GetNewSessionNotification() *NewSessionNotification {
	if x != nil {
		return x.NewSessionNotification
	}
	return nil
}

func (x *Notification) GetTerminateSessionNotification() *TerminateSessionNotification {
	if x != nil {
		return x.TerminateSessionNotification
	}
	return nil
}

func (x *Notification) GetLayoutChangedNotification() *LayoutChangedNotification {
	if x != nil {
		return x.LayoutChangedNotification
	}
	return nil
}

func (x *Notification) GetFocusChangedNotification() *FocusChangedNotification {
	if x != nil {
		return x.FocusChangedNotification
	}
	return nil
}

func (x *Notification) GetServerOriginatedRpcNotification() *ServerOriginatedRPCNotification {
	if x != nil {
		return x.ServerOriginatedRpcNotification
	}
	return nil
}

func (x *Notification) GetBroadcastDomainsChanged() *BroadcastDomainsChangedNotification {
	if x != nil {
		return x.BroadcastDomainsChanged
	}
	return nil
}

func (x *Notification) GetVariableChangedNotification() *VariableChangedNotification {
	if x != nil {
		return x.VariableChangedNotification
	}
	return nil
}

func (x *Notification) GetProfileChangedNotification() *ProfileChangedNotification {
	if x != nil {
		return x.ProfileChangedNotification
	}
	return nil
}

type ProfileChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid *string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
}

func (x *ProfileChangedNotification) Reset() {
	*x = ProfileChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileChangedNotification) ProtoMessage() {}

func (x *ProfileChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileChangedNotification.ProtoReflect.Descriptor instead.
func (*ProfileChangedNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{62}
}

func (x *ProfileChangedNotification) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

type VariableChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Scope        *VariableScope `protobuf:"varint,1,opt,name=scope,enum=iterm2.VariableScope" json:"scope,omitempty"`
	Identifier   *string        `protobuf:"bytes,2,opt,name=identifier" json:"identifier,omitempty"` // unset if app scope, otherwise is session, window, or tab ID
	Name         *string        `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	JsonNewValue *string        `protobuf:"bytes,4,opt,name=json_new_value,json=jsonNewValue" json:"json_new_value,omitempty"` // Will be "null" if unset.
}

func (x *VariableChangedNotification) Reset() {
	*x = VariableChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableChangedNotification) ProtoMessage() {}

func (x *VariableChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableChangedNotification.ProtoReflect.Descriptor instead.
func (*VariableChangedNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{63}
}

func (x *VariableChangedNotification) GetScope() VariableScope {
	if x != nil && x.Scope != nil {
		return *x.Scope
	}
	return VariableScope_SESSION
}

func (x *VariableChangedNotification) GetIdentifier() string {
	if x != nil && x.Identifier != nil {
		return *x.Identifier
	}
	return ""
}

func (x *VariableChangedNotification) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VariableChangedNotification) GetJsonNewValue() string {
	if x != nil && x.JsonNewValue != nil {
		return *x.JsonNewValue
	}
	return ""
}

type BroadcastDomainsChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BroadcastDomains []*BroadcastDomain `protobuf:"bytes,1,rep,name=broadcast_domains,json=broadcastDomains" json:"broadcast_domains,omitempty"`
}

func (x *BroadcastDomainsChangedNotification) Reset() {
	*x = BroadcastDomainsChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BroadcastDomainsChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastDomainsChangedNotification) ProtoMessage() {}

func (x *BroadcastDomainsChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastDomainsChangedNotification.ProtoReflect.Descriptor instead.
func (*BroadcastDomainsChangedNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{64}
}

func (x *BroadcastDomainsChangedNotification) GetBroadcastDomains() []*BroadcastDomain {
	if x != nil {
		return x.BroadcastDomains
	}
	return nil
}

type ServerOriginatedRPC struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string                            `protobuf:"bytes,2,opt,name=name" json:"name,omitempty"`
	Arguments []*ServerOriginatedRPC_RPCArgument `protobuf:"bytes,3,rep,name=arguments" json:"arguments,omitempty"`
}

func (x *ServerOriginatedRPC) Reset() {
	*x = ServerOriginatedRPC{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOriginatedRPC) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOriginatedRPC) ProtoMessage() {}

func (x *ServerOriginatedRPC) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOriginatedRPC.ProtoReflect.Descriptor instead.
func (*ServerOriginatedRPC) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{65}
}

func (x *ServerOriginatedRPC) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ServerOriginatedRPC) GetArguments() []*ServerOriginatedRPC_RPCArgument {
	if x != nil {
		return x.Arguments
	}
	return nil
}

// This is an iTerm2-to-script RPC call. The script must have registered for
// an RPC matching the signature of `rpc`.
type ServerOriginatedRPCNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RequestId *string              `protobuf:"bytes,1,opt,name=request_id,json=requestId" json:"request_id,omitempty"`
	Rpc       *ServerOriginatedRPC `protobuf:"bytes,2,opt,name=rpc" json:"rpc,omitempty"`
}

func (x *ServerOriginatedRPCNotification) Reset() {
	*x = ServerOriginatedRPCNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOriginatedRPCNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOriginatedRPCNotification) ProtoMessage() {}

func (x *ServerOriginatedRPCNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOriginatedRPCNotification.ProtoReflect.Descriptor instead.
func (*ServerOriginatedRPCNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{66}
}

func (x *ServerOriginatedRPCNotification) GetRequestId() string {
	if x != nil && x.RequestId != nil {
		return *x.RequestId
	}
	return ""
}

func (x *ServerOriginatedRPCNotification) GetRpc() *ServerOriginatedRPC {
	if x != nil {
		return x.Rpc
	}
	return nil
}

type KeystrokeNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Characters                  *string                       `protobuf:"bytes,1,opt,name=characters" json:"characters,omitempty"`
	CharactersIgnoringModifiers *string                       `protobuf:"bytes,2,opt,name=charactersIgnoringModifiers" json:"charactersIgnoringModifiers,omitempty"`
	Modifiers                   []Modifiers                   `protobuf:"varint,3,rep,name=modifiers,enum=iterm2.Modifiers" json:"modifiers,omitempty"`
	KeyCode                     *int32                        `protobuf:"varint,4,opt,name=keyCode" json:"keyCode,omitempty"`
	Session                     *string                       `protobuf:"bytes,5,opt,name=session" json:"session,omitempty"`
	Action                      *KeystrokeNotification_Action `protobuf:"varint,6,opt,name=action,enum=iterm2.KeystrokeNotification_Action" json:"action,omitempty"`
}

func (x *KeystrokeNotification) Reset() {
	*x = KeystrokeNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeystrokeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeystrokeNotification) ProtoMessage() {}

func (x *KeystrokeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeystrokeNotification.ProtoReflect.Descriptor instead.
func (*KeystrokeNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{67}
}

func (x *KeystrokeNotification) GetCharacters() string {
	if x != nil && x.Characters != nil {
		return *x.Characters
	}
	return ""
}

func (x *KeystrokeNotification) GetCharactersIgnoringModifiers() string {
	if x != nil && x.CharactersIgnoringModifiers != nil {
		return *x.CharactersIgnoringModifiers
	}
	return ""
}

func (x *KeystrokeNotification) GetModifiers() []Modifiers {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

func (x *KeystrokeNotification) GetKeyCode() int32 {
	if x != nil && x.KeyCode != nil {
		return *x.KeyCode
	}
	return 0
}

func (x *KeystrokeNotification) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *KeystrokeNotification) GetAction() KeystrokeNotification_Action {
	if x != nil && x.Action != nil {
		return *x.Action
	}
	return KeystrokeNotification_KEY_DOWN
}

type ScreenUpdateNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
}

func (x *ScreenUpdateNotification) Reset() {
	*x = ScreenUpdateNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ScreenUpdateNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScreenUpdateNotification) ProtoMessage() {}

func (x *ScreenUpdateNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScreenUpdateNotification.ProtoReflect.Descriptor instead.
func (*ScreenUpdateNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{68}
}

func (x *ScreenUpdateNotification) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

type PromptNotificationPrompt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Placeholder *string            `protobuf:"bytes,1,opt,name=placeholder" json:"placeholder,omitempty"`
	Prompt      *GetPromptResponse `protobuf:"bytes,2,opt,name=prompt" json:"prompt,omitempty"`
}

func (x *PromptNotificationPrompt) Reset() {
	*x = PromptNotificationPrompt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromptNotificationPrompt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptNotificationPrompt) ProtoMessage() {}

func (x *PromptNotificationPrompt) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptNotificationPrompt.ProtoReflect.Descriptor instead.
func (*PromptNotificationPrompt) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{69}
}

func (x *PromptNotificationPrompt) GetPlaceholder() string {
	if x != nil && x.Placeholder != nil {
		return *x.Placeholder
	}
	return ""
}

func (x *PromptNotificationPrompt) GetPrompt() *GetPromptResponse {
	if x != nil {
		return x.Prompt
	}
	return nil
}

type PromptNotificationCommandStart struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Command *string `protobuf:"bytes,1,opt,name=command" json:"command,omitempty"`
}

func (x *PromptNotificationCommandStart) Reset() {
	*x = PromptNotificationCommandStart{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromptNotificationCommandStart) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptNotificationCommandStart) ProtoMessage() {}

func (x *PromptNotificationCommandStart) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptNotificationCommandStart.ProtoReflect.Descriptor instead.
func (*PromptNotificationCommandStart) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{70}
}

func (x *PromptNotificationCommandStart) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

type PromptNotificationCommandEnd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *int32 `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
}

func (x *PromptNotificationCommandEnd) Reset() {
	*x = PromptNotificationCommandEnd{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromptNotificationCommandEnd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptNotificationCommandEnd) ProtoMessage() {}

func (x *PromptNotificationCommandEnd) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptNotificationCommandEnd.ProtoReflect.Descriptor instead.
func (*PromptNotificationCommandEnd) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{71}
}

func (x *PromptNotificationCommandEnd) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type PromptNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	// Types that are assignable to Event:
	//	*PromptNotification_Prompt
	//	*PromptNotification_CommandStart
	//	*PromptNotification_CommandEnd
	Event          isPromptNotification_Event `protobuf_oneof:"event"`
	UniquePromptId *string                    `protobuf:"bytes,5,opt,name=unique_prompt_id,json=uniquePromptId" json:"unique_prompt_id,omitempty"`
}

func (x *PromptNotification) Reset() {
	*x = PromptNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PromptNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PromptNotification) ProtoMessage() {}

func (x *PromptNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PromptNotification.ProtoReflect.Descriptor instead.
func (*PromptNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{72}
}

func (x *PromptNotification) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (m *PromptNotification) GetEvent() isPromptNotification_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *PromptNotification) GetPrompt() *PromptNotificationPrompt {
	if x, ok := x.GetEvent().(*PromptNotification_Prompt); ok {
		return x.Prompt
	}
	return nil
}

func (x *PromptNotification) GetCommandStart() *PromptNotificationCommandStart {
	if x, ok := x.GetEvent().(*PromptNotification_CommandStart); ok {
		return x.CommandStart
	}
	return nil
}

func (x *PromptNotification) GetCommandEnd() *PromptNotificationCommandEnd {
	if x, ok := x.GetEvent().(*PromptNotification_CommandEnd); ok {
		return x.CommandEnd
	}
	return nil
}

func (x *PromptNotification) GetUniquePromptId() string {
	if x != nil && x.UniquePromptId != nil {
		return *x.UniquePromptId
	}
	return ""
}

type isPromptNotification_Event interface {
	isPromptNotification_Event()
}

type PromptNotification_Prompt struct {
	Prompt *PromptNotificationPrompt `protobuf:"bytes,2,opt,name=prompt,oneof"`
}

type PromptNotification_CommandStart struct {
	CommandStart *PromptNotificationCommandStart `protobuf:"bytes,3,opt,name=command_start,json=commandStart,oneof"`
}

type PromptNotification_CommandEnd struct {
	CommandEnd *PromptNotificationCommandEnd `protobuf:"bytes,4,opt,name=command_end,json=commandEnd,oneof"`
}

func (*PromptNotification_Prompt) isPromptNotification_Event() {}

func (*PromptNotification_CommandStart) isPromptNotification_Event() {}

func (*PromptNotification_CommandEnd) isPromptNotification_Event() {}

type LocationChangeNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostName  *string `protobuf:"bytes,1,opt,name=host_name,json=hostName" json:"host_name,omitempty"`
	UserName  *string `protobuf:"bytes,2,opt,name=user_name,json=userName" json:"user_name,omitempty"`
	Directory *string `protobuf:"bytes,3,opt,name=directory" json:"directory,omitempty"`
	Session   *string `protobuf:"bytes,4,opt,name=session" json:"session,omitempty"`
}

func (x *LocationChangeNotification) Reset() {
	*x = LocationChangeNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LocationChangeNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocationChangeNotification) ProtoMessage() {}

func (x *LocationChangeNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocationChangeNotification.ProtoReflect.Descriptor instead.
func (*LocationChangeNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{73}
}

func (x *LocationChangeNotification) GetHostName() string {
	if x != nil && x.HostName != nil {
		return *x.HostName
	}
	return ""
}

func (x *LocationChangeNotification) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *LocationChangeNotification) GetDirectory() string {
	if x != nil && x.Directory != nil {
		return *x.Directory
	}
	return ""
}

func (x *LocationChangeNotification) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

// OSC 1337 ; Custom=id=<identity>:<payload> ST
type CustomEscapeSequenceNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Session        *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	SenderIdentity *string `protobuf:"bytes,2,opt,name=sender_identity,json=senderIdentity" json:"sender_identity,omitempty"`
	Payload        *string `protobuf:"bytes,3,opt,name=payload" json:"payload,omitempty"`
}

func (x *CustomEscapeSequenceNotification) Reset() {
	*x = CustomEscapeSequenceNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CustomEscapeSequenceNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CustomEscapeSequenceNotification) ProtoMessage() {}

func (x *CustomEscapeSequenceNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CustomEscapeSequenceNotification.ProtoReflect.Descriptor instead.
func (*CustomEscapeSequenceNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{74}
}

func (x *CustomEscapeSequenceNotification) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *CustomEscapeSequenceNotification) GetSenderIdentity() string {
	if x != nil && x.SenderIdentity != nil {
		return *x.SenderIdentity
	}
	return ""
}

func (x *CustomEscapeSequenceNotification) GetPayload() string {
	if x != nil && x.Payload != nil {
		return *x.Payload
	}
	return ""
}

// Sent when a new session is created or a closure is undone.
type NewSessionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *NewSessionNotification) Reset() {
	*x = NewSessionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewSessionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewSessionNotification) ProtoMessage() {}

func (x *NewSessionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewSessionNotification.ProtoReflect.Descriptor instead.
func (*NewSessionNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{75}
}

func (x *NewSessionNotification) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

// Note this is sent when the app becomes/resigns active, the key window changes, the selected tab
// of a window changes, or the active pane of a tab changes. Note that you may receive duplicate
// notifications at times. Ignore those that do not signify a change.
type FocusChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Event:
	//	*FocusChangedNotification_ApplicationActive
	//	*FocusChangedNotification_Window_
	//	*FocusChangedNotification_SelectedTab
	//	*FocusChangedNotification_Session
	Event isFocusChangedNotification_Event `protobuf_oneof:"event"`
}

func (x *FocusChangedNotification) Reset() {
	*x = FocusChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusChangedNotification) ProtoMessage() {}

func (x *FocusChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusChangedNotification.ProtoReflect.Descriptor instead.
func (*FocusChangedNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{76}
}

func (m *FocusChangedNotification) GetEvent() isFocusChangedNotification_Event {
	if m != nil {
		return m.Event
	}
	return nil
}

func (x *FocusChangedNotification) GetApplicationActive() bool {
	if x, ok := x.GetEvent().(*FocusChangedNotification_ApplicationActive); ok {
		return x.ApplicationActive
	}
	return false
}

func (x *FocusChangedNotification) GetWindow() *FocusChangedNotification_Window {
	if x, ok := x.GetEvent().(*FocusChangedNotification_Window_); ok {
		return x.Window
	}
	return nil
}

func (x *FocusChangedNotification) GetSelectedTab() string {
	if x, ok := x.GetEvent().(*FocusChangedNotification_SelectedTab); ok {
		return x.SelectedTab
	}
	return ""
}

func (x *FocusChangedNotification) GetSession() string {
	if x, ok := x.GetEvent().(*FocusChangedNotification_Session); ok {
		return x.Session
	}
	return ""
}

type isFocusChangedNotification_Event interface {
	isFocusChangedNotification_Event()
}

type FocusChangedNotification_ApplicationActive struct {
	// true: application became active. false: application resigned active.
	ApplicationActive bool `protobuf:"varint,1,opt,name=application_active,json=applicationActive,oneof"`
}

type FocusChangedNotification_Window_ struct {
	// If set, gives info about a change to window focus.
	Window *FocusChangedNotification_Window `protobuf:"bytes,2,opt,name=window,oneof"`
}

type FocusChangedNotification_SelectedTab struct {
	// If set, selected tab changed to the one identified herein.
	SelectedTab string `protobuf:"bytes,3,opt,name=selected_tab,json=selectedTab,oneof"`
}

type FocusChangedNotification_Session struct {
	// If set, the given session became active in its tab.
	Session string `protobuf:"bytes,4,opt,name=session,oneof"`
}

func (*FocusChangedNotification_ApplicationActive) isFocusChangedNotification_Event() {}

func (*FocusChangedNotification_Window_) isFocusChangedNotification_Event() {}

func (*FocusChangedNotification_SelectedTab) isFocusChangedNotification_Event() {}

func (*FocusChangedNotification_Session) isFocusChangedNotification_Event() {}

type TerminateSessionNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *TerminateSessionNotification) Reset() {
	*x = TerminateSessionNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerminateSessionNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerminateSessionNotification) ProtoMessage() {}

func (x *TerminateSessionNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerminateSessionNotification.ProtoReflect.Descriptor instead.
func (*TerminateSessionNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{77}
}

func (x *TerminateSessionNotification) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

type LayoutChangedNotification struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ListSessionsResponse *ListSessionsResponse `protobuf:"bytes,1,opt,name=list_sessions_response,json=listSessionsResponse" json:"list_sessions_response,omitempty"`
}

func (x *LayoutChangedNotification) Reset() {
	*x = LayoutChangedNotification{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LayoutChangedNotification) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LayoutChangedNotification) ProtoMessage() {}

func (x *LayoutChangedNotification) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LayoutChangedNotification.ProtoReflect.Descriptor instead.
func (*LayoutChangedNotification) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{78}
}

func (x *LayoutChangedNotification) GetListSessionsResponse() *ListSessionsResponse {
	if x != nil {
		return x.ListSessionsResponse
	}
	return nil
}

// Requests the contents of a range of lines.
type GetBufferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See documentation on session IDs. "all" not accepted.
	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	// Which lines to return?
	LineRange *LineRange `protobuf:"bytes,2,opt,name=line_range,json=lineRange" json:"line_range,omitempty"`
}

func (x *GetBufferRequest) Reset() {
	*x = GetBufferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBufferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBufferRequest) ProtoMessage() {}

func (x *GetBufferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBufferRequest.ProtoReflect.Descriptor instead.
func (*GetBufferRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{79}
}

func (x *GetBufferRequest) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *GetBufferRequest) GetLineRange() *LineRange {
	if x != nil {
		return x.LineRange
	}
	return nil
}

// Contains the contents of a range of lines.
type GetBufferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *GetBufferResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.GetBufferResponse_Status,def=0" json:"status,omitempty"`
	// Which lines were returned
	//
	// Deprecated: Do not use.
	Range *Range `protobuf:"bytes,2,opt,name=range" json:"range,omitempty"`
	// Those lines' contents.
	Contents []*LineContents `protobuf:"bytes,3,rep,name=contents" json:"contents,omitempty"`
	Cursor   *Coord          `protobuf:"bytes,4,opt,name=cursor" json:"cursor,omitempty"`
	// The number of lines (including lines lost from the head of scrollback history) that precede
	// the screen. Subtract this from cursor.y to get the cursor's position on the screen when it
	// is scrolled to the bottom.
	//
	// Deprecated: Do not use.
	NumLinesAboveScreen *int64 `protobuf:"varint,5,opt,name=num_lines_above_screen,json=numLinesAboveScreen" json:"num_lines_above_screen,omitempty"`
	// The returned range
	WindowedCoordRange *WindowedCoordRange `protobuf:"bytes,6,opt,name=windowed_coord_range,json=windowedCoordRange" json:"windowed_coord_range,omitempty"`
}

// Default values for GetBufferResponse fields.
const (
	Default_GetBufferResponse_Status = GetBufferResponse_OK
)

func (x *GetBufferResponse) Reset() {
	*x = GetBufferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBufferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBufferResponse) ProtoMessage() {}

func (x *GetBufferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBufferResponse.ProtoReflect.Descriptor instead.
func (*GetBufferResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{80}
}

func (x *GetBufferResponse) GetStatus() GetBufferResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_GetBufferResponse_Status
}

// Deprecated: Do not use.
func (x *GetBufferResponse) GetRange() *Range {
	if x != nil {
		return x.Range
	}
	return nil
}

func (x *GetBufferResponse) GetContents() []*LineContents {
	if x != nil {
		return x.Contents
	}
	return nil
}

func (x *GetBufferResponse) GetCursor() *Coord {
	if x != nil {
		return x.Cursor
	}
	return nil
}

// Deprecated: Do not use.
func (x *GetBufferResponse) GetNumLinesAboveScreen() int64 {
	if x != nil && x.NumLinesAboveScreen != nil {
		return *x.NumLinesAboveScreen
	}
	return 0
}

func (x *GetBufferResponse) GetWindowedCoordRange() *WindowedCoordRange {
	if x != nil {
		return x.WindowedCoordRange
	}
	return nil
}

// Requests metadata about the current shell prompt.
type GetPromptRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See documentation on session IDs. "all" not accepted.
	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	// If given return this ID instead of the last one.
	UniquePromptId *string `protobuf:"bytes,2,opt,name=unique_prompt_id,json=uniquePromptId" json:"unique_prompt_id,omitempty"`
}

func (x *GetPromptRequest) Reset() {
	*x = GetPromptRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromptRequest) ProtoMessage() {}

func (x *GetPromptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromptRequest.ProtoReflect.Descriptor instead.
func (*GetPromptRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{81}
}

func (x *GetPromptRequest) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *GetPromptRequest) GetUniquePromptId() string {
	if x != nil && x.UniquePromptId != nil {
		return *x.UniquePromptId
	}
	return ""
}

// Responds with metadata about the current shell prompt, if possible.
type GetPromptResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status           *GetPromptResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.GetPromptResponse_Status,def=0" json:"status,omitempty"`
	PromptRange      *CoordRange               `protobuf:"bytes,2,opt,name=prompt_range,json=promptRange" json:"prompt_range,omitempty"`
	CommandRange     *CoordRange               `protobuf:"bytes,3,opt,name=command_range,json=commandRange" json:"command_range,omitempty"`
	OutputRange      *CoordRange               `protobuf:"bytes,4,opt,name=output_range,json=outputRange" json:"output_range,omitempty"`
	WorkingDirectory *string                   `protobuf:"bytes,5,opt,name=working_directory,json=workingDirectory" json:"working_directory,omitempty"`
	Command          *string                   `protobuf:"bytes,6,opt,name=command" json:"command,omitempty"`
	PromptState      *GetPromptResponse_State  `protobuf:"varint,7,opt,name=prompt_state,json=promptState,enum=iterm2.GetPromptResponse_State" json:"prompt_state,omitempty"`
	// Exit status. Equivalent to shell's $? variable. Only set if state is FINISHED.
	ExitStatus     *uint32 `protobuf:"varint,9,opt,name=exit_status,json=exitStatus" json:"exit_status,omitempty"`
	UniquePromptId *string `protobuf:"bytes,10,opt,name=unique_prompt_id,json=uniquePromptId" json:"unique_prompt_id,omitempty"`
}

// Default values for GetPromptResponse fields.
const (
	Default_GetPromptResponse_Status = GetPromptResponse_OK
)

func (x *GetPromptResponse) Reset() {
	*x = GetPromptResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetPromptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPromptResponse) ProtoMessage() {}

func (x *GetPromptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPromptResponse.ProtoReflect.Descriptor instead.
func (*GetPromptResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{82}
}

func (x *GetPromptResponse) GetStatus() GetPromptResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_GetPromptResponse_Status
}

func (x *GetPromptResponse) GetPromptRange() *CoordRange {
	if x != nil {
		return x.PromptRange
	}
	return nil
}

func (x *GetPromptResponse) GetCommandRange() *CoordRange {
	if x != nil {
		return x.CommandRange
	}
	return nil
}

func (x *GetPromptResponse) GetOutputRange() *CoordRange {
	if x != nil {
		return x.OutputRange
	}
	return nil
}

func (x *GetPromptResponse) GetWorkingDirectory() string {
	if x != nil && x.WorkingDirectory != nil {
		return *x.WorkingDirectory
	}
	return ""
}

func (x *GetPromptResponse) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *GetPromptResponse) GetPromptState() GetPromptResponse_State {
	if x != nil && x.PromptState != nil {
		return *x.PromptState
	}
	return GetPromptResponse_EDITING
}

func (x *GetPromptResponse) GetExitStatus() uint32 {
	if x != nil && x.ExitStatus != nil {
		return *x.ExitStatus
	}
	return 0
}

func (x *GetPromptResponse) GetUniquePromptId() string {
	if x != nil && x.UniquePromptId != nil {
		return *x.UniquePromptId
	}
	return ""
}

type ListPromptsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Must name a specific session. "all" not allowed.
	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	// If unspecified, start at oldest.
	FirstUniqueId *string `protobuf:"bytes,2,opt,name=first_unique_id,json=firstUniqueId" json:"first_unique_id,omitempty"`
	// If unspecified, end at newest.
	LastUniqueId *string `protobuf:"bytes,3,opt,name=last_unique_id,json=lastUniqueId" json:"last_unique_id,omitempty"`
}

func (x *ListPromptsRequest) Reset() {
	*x = ListPromptsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPromptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromptsRequest) ProtoMessage() {}

func (x *ListPromptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromptsRequest.ProtoReflect.Descriptor instead.
func (*ListPromptsRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{83}
}

func (x *ListPromptsRequest) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *ListPromptsRequest) GetFirstUniqueId() string {
	if x != nil && x.FirstUniqueId != nil {
		return *x.FirstUniqueId
	}
	return ""
}

func (x *ListPromptsRequest) GetLastUniqueId() string {
	if x != nil && x.LastUniqueId != nil {
		return *x.LastUniqueId
	}
	return ""
}

type ListPromptsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *ListPromptsResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.ListPromptsResponse_Status,def=0" json:"status,omitempty"`
	// Chronological list of prompt IDs, suitable for GetPromptRequest.unique_prompt_id.
	UniquePromptId []string `protobuf:"bytes,2,rep,name=unique_prompt_id,json=uniquePromptId" json:"unique_prompt_id,omitempty"`
}

// Default values for ListPromptsResponse fields.
const (
	Default_ListPromptsResponse_Status = ListPromptsResponse_OK
)

func (x *ListPromptsResponse) Reset() {
	*x = ListPromptsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListPromptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPromptsResponse) ProtoMessage() {}

func (x *ListPromptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPromptsResponse.ProtoReflect.Descriptor instead.
func (*ListPromptsResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{84}
}

func (x *ListPromptsResponse) GetStatus() ListPromptsResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_ListPromptsResponse_Status
}

func (x *ListPromptsResponse) GetUniquePromptId() []string {
	if x != nil {
		return x.UniquePromptId
	}
	return nil
}

type GetProfilePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See documentation on session IDs
	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	// If not set, all properties will be returned
	Keys []string `protobuf:"bytes,2,rep,name=keys" json:"keys,omitempty"`
}

func (x *GetProfilePropertyRequest) Reset() {
	*x = GetProfilePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilePropertyRequest) ProtoMessage() {}

func (x *GetProfilePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilePropertyRequest.ProtoReflect.Descriptor instead.
func (*GetProfilePropertyRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{85}
}

func (x *GetProfilePropertyRequest) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *GetProfilePropertyRequest) GetKeys() []string {
	if x != nil {
		return x.Keys
	}
	return nil
}

type ProfileProperty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	JsonValue *string `protobuf:"bytes,2,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"`
}

func (x *ProfileProperty) Reset() {
	*x = ProfileProperty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProfileProperty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProfileProperty) ProtoMessage() {}

func (x *ProfileProperty) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProfileProperty.ProtoReflect.Descriptor instead.
func (*ProfileProperty) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{86}
}

func (x *ProfileProperty) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *ProfileProperty) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

type GetProfilePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status     *GetProfilePropertyResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.GetProfilePropertyResponse_Status,def=0" json:"status,omitempty"`
	Properties []*ProfileProperty                 `protobuf:"bytes,3,rep,name=properties" json:"properties,omitempty"`
}

// Default values for GetProfilePropertyResponse fields.
const (
	Default_GetProfilePropertyResponse_Status = GetProfilePropertyResponse_OK
)

func (x *GetProfilePropertyResponse) Reset() {
	*x = GetProfilePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProfilePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProfilePropertyResponse) ProtoMessage() {}

func (x *GetProfilePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProfilePropertyResponse.ProtoReflect.Descriptor instead.
func (*GetProfilePropertyResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{87}
}

func (x *GetProfilePropertyResponse) GetStatus() GetProfilePropertyResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_GetProfilePropertyResponse_Status
}

func (x *GetProfilePropertyResponse) GetProperties() []*ProfileProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

// Sets a value in a session's copy of the profile without modifying the underlying profile.
type SetProfilePropertyRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Target:
	//	*SetProfilePropertyRequest_Session
	//	*SetProfilePropertyRequest_GuidList_
	Target      isSetProfilePropertyRequest_Target      `protobuf_oneof:"target"`
	Key         *string                                 `protobuf:"bytes,3,opt,name=key" json:"key,omitempty"`                              // deprecated
	JsonValue   *string                                 `protobuf:"bytes,4,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"` // deprecated
	Assignments []*SetProfilePropertyRequest_Assignment `protobuf:"bytes,5,rep,name=assignments" json:"assignments,omitempty"`
}

func (x *SetProfilePropertyRequest) Reset() {
	*x = SetProfilePropertyRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProfilePropertyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProfilePropertyRequest) ProtoMessage() {}

func (x *SetProfilePropertyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProfilePropertyRequest.ProtoReflect.Descriptor instead.
func (*SetProfilePropertyRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{88}
}

func (m *SetProfilePropertyRequest) GetTarget() isSetProfilePropertyRequest_Target {
	if m != nil {
		return m.Target
	}
	return nil
}

func (x *SetProfilePropertyRequest) GetSession() string {
	if x, ok := x.GetTarget().(*SetProfilePropertyRequest_Session); ok {
		return x.Session
	}
	return ""
}

func (x *SetProfilePropertyRequest) GetGuidList() *SetProfilePropertyRequest_GuidList {
	if x, ok := x.GetTarget().(*SetProfilePropertyRequest_GuidList_); ok {
		return x.GuidList
	}
	return nil
}

func (x *SetProfilePropertyRequest) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *SetProfilePropertyRequest) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

func (x *SetProfilePropertyRequest) GetAssignments() []*SetProfilePropertyRequest_Assignment {
	if x != nil {
		return x.Assignments
	}
	return nil
}

type isSetProfilePropertyRequest_Target interface {
	isSetProfilePropertyRequest_Target()
}

type SetProfilePropertyRequest_Session struct {
	// See documentation on session IDs
	Session string `protobuf:"bytes,1,opt,name=session,oneof"`
}

type SetProfilePropertyRequest_GuidList_ struct {
	GuidList *SetProfilePropertyRequest_GuidList `protobuf:"bytes,2,opt,name=guid_list,json=guidList,oneof"`
}

func (*SetProfilePropertyRequest_Session) isSetProfilePropertyRequest_Target() {}

func (*SetProfilePropertyRequest_GuidList_) isSetProfilePropertyRequest_Target() {}

type SetProfilePropertyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SetProfilePropertyResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SetProfilePropertyResponse_Status,def=0" json:"status,omitempty"`
}

// Default values for SetProfilePropertyResponse fields.
const (
	Default_SetProfilePropertyResponse_Status = SetProfilePropertyResponse_OK
)

func (x *SetProfilePropertyResponse) Reset() {
	*x = SetProfilePropertyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProfilePropertyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProfilePropertyResponse) ProtoMessage() {}

func (x *SetProfilePropertyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProfilePropertyResponse.ProtoReflect.Descriptor instead.
func (*SetProfilePropertyResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{89}
}

func (x *SetProfilePropertyResponse) GetStatus() SetProfilePropertyResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_SetProfilePropertyResponse_Status
}

type TransactionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Set to true to begin a new transaction or false to end the current
	// transaction. The app's main loop will not advance while in a
	// transaction. This effectively freezes time. Keep transactions short.
	Begin *bool `protobuf:"varint,1,opt,name=begin" json:"begin,omitempty"`
}

func (x *TransactionRequest) Reset() {
	*x = TransactionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionRequest) ProtoMessage() {}

func (x *TransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionRequest.ProtoReflect.Descriptor instead.
func (*TransactionRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{90}
}

func (x *TransactionRequest) GetBegin() bool {
	if x != nil && x.Begin != nil {
		return *x.Begin
	}
	return false
}

type TransactionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *TransactionResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.TransactionResponse_Status,def=0" json:"status,omitempty"`
}

// Default values for TransactionResponse fields.
const (
	Default_TransactionResponse_Status = TransactionResponse_OK
)

func (x *TransactionResponse) Reset() {
	*x = TransactionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransactionResponse) ProtoMessage() {}

func (x *TransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransactionResponse.ProtoReflect.Descriptor instead.
func (*TransactionResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{91}
}

func (x *TransactionResponse) GetStatus() TransactionResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_TransactionResponse_Status
}

// Describes a range of lines.
type LineRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Only one of these fields should be set:
	// ---------------------------------------
	// Return just the current contents of the screen.
	ScreenContentsOnly *bool `protobuf:"varint,1,opt,name=screen_contents_only,json=screenContentsOnly" json:"screen_contents_only,omitempty"`
	// Return the last `trailing lines` of the buffer, which could go back into
	// scrollback history.
	TrailingLines      *int32              `protobuf:"varint,2,opt,name=trailing_lines,json=trailingLines" json:"trailing_lines,omitempty"`
	WindowedCoordRange *WindowedCoordRange `protobuf:"bytes,3,opt,name=windowed_coord_range,json=windowedCoordRange" json:"windowed_coord_range,omitempty"`
}

func (x *LineRange) Reset() {
	*x = LineRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineRange) ProtoMessage() {}

func (x *LineRange) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineRange.ProtoReflect.Descriptor instead.
func (*LineRange) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{92}
}

func (x *LineRange) GetScreenContentsOnly() bool {
	if x != nil && x.ScreenContentsOnly != nil {
		return *x.ScreenContentsOnly
	}
	return false
}

func (x *LineRange) GetTrailingLines() int32 {
	if x != nil && x.TrailingLines != nil {
		return *x.TrailingLines
	}
	return 0
}

func (x *LineRange) GetWindowedCoordRange() *WindowedCoordRange {
	if x != nil {
		return x.WindowedCoordRange
	}
	return nil
}

// Describes a range of values.
type Range struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Location *int64 `protobuf:"varint,1,opt,name=location" json:"location,omitempty"`
	Length   *int64 `protobuf:"varint,2,opt,name=length" json:"length,omitempty"`
}

func (x *Range) Reset() {
	*x = Range{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Range) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Range) ProtoMessage() {}

func (x *Range) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Range.ProtoReflect.Descriptor instead.
func (*Range) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{93}
}

func (x *Range) GetLocation() int64 {
	if x != nil && x.Location != nil {
		return *x.Location
	}
	return 0
}

func (x *Range) GetLength() int64 {
	if x != nil && x.Length != nil {
		return *x.Length
	}
	return 0
}

// Describes a range of cells.
// |..xxxxx|
// |xxxx...|
// In the example above, the range of x's is: {start: {x:2, y:0}, end: {x:4, y:1}}
// The end coordinate is the first cell *after* the end of the range described (so an empty range
// has start == end)
type CoordRange struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start *Coord `protobuf:"bytes,1,opt,name=start" json:"start,omitempty"`
	End   *Coord `protobuf:"bytes,2,opt,name=end" json:"end,omitempty"`
}

func (x *CoordRange) Reset() {
	*x = CoordRange{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CoordRange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CoordRange) ProtoMessage() {}

func (x *CoordRange) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CoordRange.ProtoReflect.Descriptor instead.
func (*CoordRange) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{94}
}

func (x *CoordRange) GetStart() *Coord {
	if x != nil {
		return x.Start
	}
	return nil
}

func (x *CoordRange) GetEnd() *Coord {
	if x != nil {
		return x.End
	}
	return nil
}

// Describes a cell's location.
type Coord struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	// y=0 describes the first line. When the scrollback buffer is full and history is lost, the first
	// lines become unavailable, but the numbering is stable (so the Nth line is always the Nth line,
	// even if it's not the Nth *visible* line).
	Y *int64 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (x *Coord) Reset() {
	*x = Coord{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Coord) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Coord) ProtoMessage() {}

func (x *Coord) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Coord.ProtoReflect.Descriptor instead.
func (*Coord) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{95}
}

func (x *Coord) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Coord) GetY() int64 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

// Describes the content of a line.
type LineContents struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	// Some cells do not contain one code point. Use this to map code points in
	// `text` to a screen position. If the line has no uninitialized cells at its end, then the
	// sum of `repeats` equals the width of the display.
	//
	// For example, consider a line of text that appears on your display like:
	//   xyz compañía
	//
	// The corresponding value of `text` would be:
	//   xyzcompan~i'a
	// Note: ~ and ' are combining marks, but are shown uncombined for illustrative purposes.
	//
	// Each code point in "xyz" as well as each of the non-accented letters in compañía takes one
	// cell.
	//
	// The blank following 'z' is an uninitialized cell that has no code points,
	// so the z and the c in `text` are adjacent. It's unusual for these to occur in the middle
	// of a line, but it is possible.
	//
	// The ñ is composed of the letter n and a combining tilde (U+0303) (indicated in our example
	// as ~), while í is composed of the letter i and a combining acute accent (U+0301) (indicated in
	// our example as ').
	//
	// To map code points in `text` to screen positions, `code_points_per_cell`
	// provides the number of code points in each cell. In our example you would
	// get:
	//
	//   num_code_points=1, repeats=3     // x, y, z
	//   num_code_points=0, repeats=1     // uninitialized cell
	//   num_code_points=1, repeats=5     // c, o, m, p, a
	//   num_code_points=2, repeats=2     // n + combining tilde, i + combining acute accent
	//   num_code_points=1, repeats=1     // a
	//
	// Lines usually end with a series of uninitialized cells. These are not included.
	//
	// Here is psuedocode to interpret code_points_per_cell:
	//
	//   text_index_to_screen_coord = {}
	//   screen_coord_to_text_index = {}
	//   text_index = 0
	//   screen_coord = 0
	//   for cpps in code_points_per_cell:
	//     repeat cpps.repeats times:
	//       text_index_to_screen_coord[text_index] = screen_coord
	//       screen_coord_to_text_index[screen_coord] = text_index
	//       text_index += cpps.num_code_points
	//       screen_coord += 1
	//
	// Cells with images are omitted.
	CodePointsPerCell []*CodePointsPerCell       `protobuf:"bytes,2,rep,name=code_points_per_cell,json=codePointsPerCell" json:"code_points_per_cell,omitempty"`
	Continuation      *LineContents_Continuation `protobuf:"varint,3,opt,name=continuation,enum=iterm2.LineContents_Continuation,def=1" json:"continuation,omitempty"`
}

// Default values for LineContents fields.
const (
	Default_LineContents_Continuation = LineContents_CONTINUATION_HARD_EOL
)

func (x *LineContents) Reset() {
	*x = LineContents{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineContents) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineContents) ProtoMessage() {}

func (x *LineContents) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineContents.ProtoReflect.Descriptor instead.
func (*LineContents) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{96}
}

func (x *LineContents) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *LineContents) GetCodePointsPerCell() []*CodePointsPerCell {
	if x != nil {
		return x.CodePointsPerCell
	}
	return nil
}

func (x *LineContents) GetContinuation() LineContents_Continuation {
	if x != nil && x.Continuation != nil {
		return *x.Continuation
	}
	return Default_LineContents_Continuation
}

type CodePointsPerCell struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Number of code points per cell
	NumCodePoints *int32 `protobuf:"varint,1,opt,name=num_code_points,json=numCodePoints,def=1" json:"num_code_points,omitempty"`
	// Number of adjacent cells with this number of code points (always one or more).
	Repeats *int32 `protobuf:"varint,2,opt,name=repeats" json:"repeats,omitempty"`
}

// Default values for CodePointsPerCell fields.
const (
	Default_CodePointsPerCell_NumCodePoints = int32(1)
)

func (x *CodePointsPerCell) Reset() {
	*x = CodePointsPerCell{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CodePointsPerCell) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CodePointsPerCell) ProtoMessage() {}

func (x *CodePointsPerCell) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CodePointsPerCell.ProtoReflect.Descriptor instead.
func (*CodePointsPerCell) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{97}
}

func (x *CodePointsPerCell) GetNumCodePoints() int32 {
	if x != nil && x.NumCodePoints != nil {
		return *x.NumCodePoints
	}
	return Default_CodePointsPerCell_NumCodePoints
}

func (x *CodePointsPerCell) GetRepeats() int32 {
	if x != nil && x.Repeats != nil {
		return *x.Repeats
	}
	return 0
}

type ListSessionsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ListSessionsRequest) Reset() {
	*x = ListSessionsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsRequest) ProtoMessage() {}

func (x *ListSessionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsRequest.ProtoReflect.Descriptor instead.
func (*ListSessionsRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{98}
}

type SendTextRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See documentation on session IDs
	Session *string `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	// The text to send. As usual for proto buffers, this should be UTF-8
	// encoded. It will be converted to the session's encoding before being sent.
	Text *string `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	// If set, input will not be broadcast when broadcasting is on.
	SuppressBroadcast *bool `protobuf:"varint,3,opt,name=suppress_broadcast,json=suppressBroadcast" json:"suppress_broadcast,omitempty"`
}

func (x *SendTextRequest) Reset() {
	*x = SendTextRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTextRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTextRequest) ProtoMessage() {}

func (x *SendTextRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTextRequest.ProtoReflect.Descriptor instead.
func (*SendTextRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{99}
}

func (x *SendTextRequest) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *SendTextRequest) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *SendTextRequest) GetSuppressBroadcast() bool {
	if x != nil && x.SuppressBroadcast != nil {
		return *x.SuppressBroadcast
	}
	return false
}

type SendTextResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SendTextResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SendTextResponse_Status" json:"status,omitempty"`
}

func (x *SendTextResponse) Reset() {
	*x = SendTextResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTextResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTextResponse) ProtoMessage() {}

func (x *SendTextResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTextResponse.ProtoReflect.Descriptor instead.
func (*SendTextResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{100}
}

func (x *SendTextResponse) GetStatus() SendTextResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SendTextResponse_OK
}

type Size struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width  *int32 `protobuf:"varint,1,opt,name=width" json:"width,omitempty"`
	Height *int32 `protobuf:"varint,2,opt,name=height" json:"height,omitempty"`
}

func (x *Size) Reset() {
	*x = Size{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Size) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Size) ProtoMessage() {}

func (x *Size) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Size.ProtoReflect.Descriptor instead.
func (*Size) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{101}
}

func (x *Size) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Size) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

type Point struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X *int32 `protobuf:"varint,1,opt,name=x" json:"x,omitempty"`
	Y *int32 `protobuf:"varint,2,opt,name=y" json:"y,omitempty"`
}

func (x *Point) Reset() {
	*x = Point{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Point) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Point) ProtoMessage() {}

func (x *Point) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Point.ProtoReflect.Descriptor instead.
func (*Point) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{102}
}

func (x *Point) GetX() int32 {
	if x != nil && x.X != nil {
		return *x.X
	}
	return 0
}

func (x *Point) GetY() int32 {
	if x != nil && x.Y != nil {
		return *x.Y
	}
	return 0
}

type Frame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Origin *Point `protobuf:"bytes,1,opt,name=origin" json:"origin,omitempty"`
	Size   *Size  `protobuf:"bytes,2,opt,name=size" json:"size,omitempty"`
}

func (x *Frame) Reset() {
	*x = Frame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Frame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Frame) ProtoMessage() {}

func (x *Frame) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Frame.ProtoReflect.Descriptor instead.
func (*Frame) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{103}
}

func (x *Frame) GetOrigin() *Point {
	if x != nil {
		return x.Origin
	}
	return nil
}

func (x *Frame) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

type SessionSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UniqueIdentifier *string `protobuf:"bytes,1,opt,name=unique_identifier,json=uniqueIdentifier" json:"unique_identifier,omitempty"`
	Frame            *Frame  `protobuf:"bytes,2,opt,name=frame" json:"frame,omitempty"`                       // will not be set for buried sessions
	GridSize         *Size   `protobuf:"bytes,3,opt,name=grid_size,json=gridSize" json:"grid_size,omitempty"` // will not be set for buried sessions
	Title            *string `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
}

func (x *SessionSummary) Reset() {
	*x = SessionSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SessionSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionSummary) ProtoMessage() {}

func (x *SessionSummary) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionSummary.ProtoReflect.Descriptor instead.
func (*SessionSummary) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{104}
}

func (x *SessionSummary) GetUniqueIdentifier() string {
	if x != nil && x.UniqueIdentifier != nil {
		return *x.UniqueIdentifier
	}
	return ""
}

func (x *SessionSummary) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *SessionSummary) GetGridSize() *Size {
	if x != nil {
		return x.GridSize
	}
	return nil
}

func (x *SessionSummary) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type SplitTreeNode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vertical *bool                          `protobuf:"varint,1,opt,name=vertical" json:"vertical,omitempty"` // Direction of split pane divider
	Links    []*SplitTreeNode_SplitTreeLink `protobuf:"bytes,2,rep,name=links" json:"links,omitempty"`        // Links to children
}

func (x *SplitTreeNode) Reset() {
	*x = SplitTreeNode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[105]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitTreeNode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitTreeNode) ProtoMessage() {}

func (x *SplitTreeNode) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[105]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitTreeNode.ProtoReflect.Descriptor instead.
func (*SplitTreeNode) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{105}
}

func (x *SplitTreeNode) GetVertical() bool {
	if x != nil && x.Vertical != nil {
		return *x.Vertical
	}
	return false
}

func (x *SplitTreeNode) GetLinks() []*SplitTreeNode_SplitTreeLink {
	if x != nil {
		return x.Links
	}
	return nil
}

type ListSessionsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Windows        []*ListSessionsResponse_Window `protobuf:"bytes,1,rep,name=windows" json:"windows,omitempty"`
	BuriedSessions []*SessionSummary              `protobuf:"bytes,2,rep,name=buried_sessions,json=buriedSessions" json:"buried_sessions,omitempty"`
}

func (x *ListSessionsResponse) Reset() {
	*x = ListSessionsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[106]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse) ProtoMessage() {}

func (x *ListSessionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[106]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{106}
}

func (x *ListSessionsResponse) GetWindows() []*ListSessionsResponse_Window {
	if x != nil {
		return x.Windows
	}
	return nil
}

func (x *ListSessionsResponse) GetBuriedSessions() []*SessionSummary {
	if x != nil {
		return x.BuriedSessions
	}
	return nil
}

type CreateTabRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Leave unset to use the default profile.
	ProfileName *string `protobuf:"bytes,1,opt,name=profile_name,json=profileName" json:"profile_name,omitempty"`
	// Leave unset to create the tab in a new window.
	WindowId *string `protobuf:"bytes,2,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
	// Valid to set only if window_id is set. Gives the desired index of the new tab.
	TabIndex *uint32 `protobuf:"varint,3,opt,name=tab_index,json=tabIndex" json:"tab_index,omitempty"`
	// If not set, the profile's command will be used. Use custom_profile_properties instead.
	//
	// Deprecated: Do not use.
	Command *string `protobuf:"bytes,4,opt,name=command" json:"command,omitempty"`
	// Modifies the profile to customize its behavior just for this session.
	CustomProfileProperties []*ProfileProperty `protobuf:"bytes,5,rep,name=custom_profile_properties,json=customProfileProperties" json:"custom_profile_properties,omitempty"`
}

func (x *CreateTabRequest) Reset() {
	*x = CreateTabRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[107]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTabRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTabRequest) ProtoMessage() {}

func (x *CreateTabRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[107]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTabRequest.ProtoReflect.Descriptor instead.
func (*CreateTabRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{107}
}

func (x *CreateTabRequest) GetProfileName() string {
	if x != nil && x.ProfileName != nil {
		return *x.ProfileName
	}
	return ""
}

func (x *CreateTabRequest) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

func (x *CreateTabRequest) GetTabIndex() uint32 {
	if x != nil && x.TabIndex != nil {
		return *x.TabIndex
	}
	return 0
}

// Deprecated: Do not use.
func (x *CreateTabRequest) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

func (x *CreateTabRequest) GetCustomProfileProperties() []*ProfileProperty {
	if x != nil {
		return x.CustomProfileProperties
	}
	return nil
}

type CreateTabResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status    *CreateTabResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.CreateTabResponse_Status" json:"status,omitempty"`
	WindowId  *string                   `protobuf:"bytes,2,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
	TabId     *int32                    `protobuf:"varint,3,opt,name=tab_id,json=tabId" json:"tab_id,omitempty"`
	SessionId *string                   `protobuf:"bytes,4,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *CreateTabResponse) Reset() {
	*x = CreateTabResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[108]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateTabResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTabResponse) ProtoMessage() {}

func (x *CreateTabResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[108]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTabResponse.ProtoReflect.Descriptor instead.
func (*CreateTabResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{108}
}

func (x *CreateTabResponse) GetStatus() CreateTabResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return CreateTabResponse_OK
}

func (x *CreateTabResponse) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

func (x *CreateTabResponse) GetTabId() int32 {
	if x != nil && x.TabId != nil {
		return *x.TabId
	}
	return 0
}

func (x *CreateTabResponse) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

type SplitPaneRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// See documentation on session IDs
	Session        *string                          `protobuf:"bytes,1,opt,name=session" json:"session,omitempty"`
	SplitDirection *SplitPaneRequest_SplitDirection `protobuf:"varint,2,opt,name=split_direction,json=splitDirection,enum=iterm2.SplitPaneRequest_SplitDirection" json:"split_direction,omitempty"`
	// If true, new session is above/left of the session being split. Otherwise, it goes below/right.
	Before *bool `protobuf:"varint,3,opt,name=before,def=0" json:"before,omitempty"`
	// Leave unset to use the default profile.
	ProfileName *string `protobuf:"bytes,4,opt,name=profile_name,json=profileName" json:"profile_name,omitempty"`
	// Modifies the profile to customize its behavior just for this session.
	CustomProfileProperties []*ProfileProperty `protobuf:"bytes,5,rep,name=custom_profile_properties,json=customProfileProperties" json:"custom_profile_properties,omitempty"`
}

// Default values for SplitPaneRequest fields.
const (
	Default_SplitPaneRequest_Before = bool(false)
)

func (x *SplitPaneRequest) Reset() {
	*x = SplitPaneRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[109]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitPaneRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitPaneRequest) ProtoMessage() {}

func (x *SplitPaneRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[109]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitPaneRequest.ProtoReflect.Descriptor instead.
func (*SplitPaneRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{109}
}

func (x *SplitPaneRequest) GetSession() string {
	if x != nil && x.Session != nil {
		return *x.Session
	}
	return ""
}

func (x *SplitPaneRequest) GetSplitDirection() SplitPaneRequest_SplitDirection {
	if x != nil && x.SplitDirection != nil {
		return *x.SplitDirection
	}
	return SplitPaneRequest_VERTICAL
}

func (x *SplitPaneRequest) GetBefore() bool {
	if x != nil && x.Before != nil {
		return *x.Before
	}
	return Default_SplitPaneRequest_Before
}

func (x *SplitPaneRequest) GetProfileName() string {
	if x != nil && x.ProfileName != nil {
		return *x.ProfileName
	}
	return ""
}

func (x *SplitPaneRequest) GetCustomProfileProperties() []*ProfileProperty {
	if x != nil {
		return x.CustomProfileProperties
	}
	return nil
}

type SplitPaneResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *SplitPaneResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.SplitPaneResponse_Status" json:"status,omitempty"`
	// TODO(gln): this will not be set for tmux integration because the split happens only if/when the
	// tmux server acts on the request.
	// See documentation on session IDs.
	// If more than one session was split, there will be multiple session_id's.
	SessionId []string `protobuf:"bytes,2,rep,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *SplitPaneResponse) Reset() {
	*x = SplitPaneResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[110]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitPaneResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitPaneResponse) ProtoMessage() {}

func (x *SplitPaneResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[110]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitPaneResponse.ProtoReflect.Descriptor instead.
func (*SplitPaneResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{110}
}

func (x *SplitPaneResponse) GetStatus() SplitPaneResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return SplitPaneResponse_OK
}

func (x *SplitPaneResponse) GetSessionId() []string {
	if x != nil {
		return x.SessionId
	}
	return nil
}

type InvokeFunctionRequest_Tab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabId *string `protobuf:"bytes,1,opt,name=tab_id,json=tabId" json:"tab_id,omitempty"`
}

func (x *InvokeFunctionRequest_Tab) Reset() {
	*x = InvokeFunctionRequest_Tab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[111]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionRequest_Tab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionRequest_Tab) ProtoMessage() {}

func (x *InvokeFunctionRequest_Tab) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[111]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionRequest_Tab.ProtoReflect.Descriptor instead.
func (*InvokeFunctionRequest_Tab) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{2, 0}
}

func (x *InvokeFunctionRequest_Tab) GetTabId() string {
	if x != nil && x.TabId != nil {
		return *x.TabId
	}
	return ""
}

type InvokeFunctionRequest_Session struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *InvokeFunctionRequest_Session) Reset() {
	*x = InvokeFunctionRequest_Session{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[112]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionRequest_Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionRequest_Session) ProtoMessage() {}

func (x *InvokeFunctionRequest_Session) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[112]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionRequest_Session.ProtoReflect.Descriptor instead.
func (*InvokeFunctionRequest_Session) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{2, 1}
}

func (x *InvokeFunctionRequest_Session) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

type InvokeFunctionRequest_Window struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId *string `protobuf:"bytes,1,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
}

func (x *InvokeFunctionRequest_Window) Reset() {
	*x = InvokeFunctionRequest_Window{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[113]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionRequest_Window) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionRequest_Window) ProtoMessage() {}

func (x *InvokeFunctionRequest_Window) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[113]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionRequest_Window.ProtoReflect.Descriptor instead.
func (*InvokeFunctionRequest_Window) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{2, 2}
}

func (x *InvokeFunctionRequest_Window) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

type InvokeFunctionRequest_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *InvokeFunctionRequest_App) Reset() {
	*x = InvokeFunctionRequest_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[114]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionRequest_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionRequest_App) ProtoMessage() {}

func (x *InvokeFunctionRequest_App) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[114]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionRequest_App.ProtoReflect.Descriptor instead.
func (*InvokeFunctionRequest_App) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{2, 3}
}

type InvokeFunctionRequest_Method struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The following methods are defined:
	// window.set_title(title: String)
	// session.set_name(name: String)
	// session.run_tmux_command(command: String) throws  // Throws an exception if this is not a tmux session
	// session.set_status_bar_component_unread_count(identifier: String, count: Int)
	// session.stop_coprocess() -> Bool  // returns whether there was a coprocess to stop
	// session.get_coprocess() -> String?  // returns the name of the command, or nil
	// session.run_coprocess(commandLine: String, mute: Bool) -> Bool  // returns whether it attempted to start the coprocess. It'll fail only if there is already a coprocess.
	// tab.set_title(title: String)
	// tab.select_pane_in_direction(direction: String) throws -> String  // direction is 'left', 'right', 'above', or 'below'. If successful, it will return the ID of the newly active session. If you can't go that way, it returns null. Throws an exception if the direction is invalid.
	Receiver *string `protobuf:"bytes,1,opt,name=receiver" json:"receiver,omitempty"`
}

func (x *InvokeFunctionRequest_Method) Reset() {
	*x = InvokeFunctionRequest_Method{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[115]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionRequest_Method) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionRequest_Method) ProtoMessage() {}

func (x *InvokeFunctionRequest_Method) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[115]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionRequest_Method.ProtoReflect.Descriptor instead.
func (*InvokeFunctionRequest_Method) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{2, 4}
}

func (x *InvokeFunctionRequest_Method) GetReceiver() string {
	if x != nil && x.Receiver != nil {
		return *x.Receiver
	}
	return ""
}

type InvokeFunctionResponse_Error struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *InvokeFunctionResponse_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.InvokeFunctionResponse_Status" json:"status,omitempty"`
	ErrorReason *string                        `protobuf:"bytes,2,opt,name=error_reason,json=errorReason" json:"error_reason,omitempty"`
}

func (x *InvokeFunctionResponse_Error) Reset() {
	*x = InvokeFunctionResponse_Error{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[116]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionResponse_Error) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionResponse_Error) ProtoMessage() {}

func (x *InvokeFunctionResponse_Error) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[116]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionResponse_Error.ProtoReflect.Descriptor instead.
func (*InvokeFunctionResponse_Error) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{3, 0}
}

func (x *InvokeFunctionResponse_Error) GetStatus() InvokeFunctionResponse_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return InvokeFunctionResponse_TIMEOUT
}

func (x *InvokeFunctionResponse_Error) GetErrorReason() string {
	if x != nil && x.ErrorReason != nil {
		return *x.ErrorReason
	}
	return ""
}

type InvokeFunctionResponse_Success struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonResult *string `protobuf:"bytes,1,opt,name=json_result,json=jsonResult" json:"json_result,omitempty"`
}

func (x *InvokeFunctionResponse_Success) Reset() {
	*x = InvokeFunctionResponse_Success{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[117]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InvokeFunctionResponse_Success) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InvokeFunctionResponse_Success) ProtoMessage() {}

func (x *InvokeFunctionResponse_Success) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[117]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InvokeFunctionResponse_Success.ProtoReflect.Descriptor instead.
func (*InvokeFunctionResponse_Success) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{3, 1}
}

func (x *InvokeFunctionResponse_Success) GetJsonResult() string {
	if x != nil && x.JsonResult != nil {
		return *x.JsonResult
	}
	return ""
}

type CloseRequest_CloseTabs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TabIds []string `protobuf:"bytes,1,rep,name=tab_ids,json=tabIds" json:"tab_ids,omitempty"`
}

func (x *CloseRequest_CloseTabs) Reset() {
	*x = CloseRequest_CloseTabs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[118]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest_CloseTabs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest_CloseTabs) ProtoMessage() {}

func (x *CloseRequest_CloseTabs) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[118]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest_CloseTabs.ProtoReflect.Descriptor instead.
func (*CloseRequest_CloseTabs) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{4, 0}
}

func (x *CloseRequest_CloseTabs) GetTabIds() []string {
	if x != nil {
		return x.TabIds
	}
	return nil
}

type CloseRequest_CloseSessions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionIds []string `protobuf:"bytes,1,rep,name=session_ids,json=sessionIds" json:"session_ids,omitempty"`
}

func (x *CloseRequest_CloseSessions) Reset() {
	*x = CloseRequest_CloseSessions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[119]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest_CloseSessions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest_CloseSessions) ProtoMessage() {}

func (x *CloseRequest_CloseSessions) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[119]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest_CloseSessions.ProtoReflect.Descriptor instead.
func (*CloseRequest_CloseSessions) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{4, 1}
}

func (x *CloseRequest_CloseSessions) GetSessionIds() []string {
	if x != nil {
		return x.SessionIds
	}
	return nil
}

type CloseRequest_CloseWindows struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowIds []string `protobuf:"bytes,1,rep,name=window_ids,json=windowIds" json:"window_ids,omitempty"`
}

func (x *CloseRequest_CloseWindows) Reset() {
	*x = CloseRequest_CloseWindows{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[120]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloseRequest_CloseWindows) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloseRequest_CloseWindows) ProtoMessage() {}

func (x *CloseRequest_CloseWindows) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[120]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloseRequest_CloseWindows.ProtoReflect.Descriptor instead.
func (*CloseRequest_CloseWindows) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{4, 2}
}

func (x *CloseRequest_CloseWindows) GetWindowIds() []string {
	if x != nil {
		return x.WindowIds
	}
	return nil
}

type StatusBarComponentRequest_OpenPopover struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Html      *string `protobuf:"bytes,2,opt,name=html" json:"html,omitempty"` // HTML to show in a popover that opens from the component.
	Size      *Size   `protobuf:"bytes,3,opt,name=size" json:"size,omitempty"` // Size in points of the content area of the popover.
}

func (x *StatusBarComponentRequest_OpenPopover) Reset() {
	*x = StatusBarComponentRequest_OpenPopover{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[121]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StatusBarComponentRequest_OpenPopover) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusBarComponentRequest_OpenPopover) ProtoMessage() {}

func (x *StatusBarComponentRequest_OpenPopover) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[121]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusBarComponentRequest_OpenPopover.ProtoReflect.Descriptor instead.
func (*StatusBarComponentRequest_OpenPopover) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{8, 0}
}

func (x *StatusBarComponentRequest_OpenPopover) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *StatusBarComponentRequest_OpenPopover) GetHtml() string {
	if x != nil && x.Html != nil {
		return *x.Html
	}
	return ""
}

func (x *StatusBarComponentRequest_OpenPopover) GetSize() *Size {
	if x != nil {
		return x.Size
	}
	return nil
}

type SelectionRequest_GetSelectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
}

func (x *SelectionRequest_GetSelectionRequest) Reset() {
	*x = SelectionRequest_GetSelectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[122]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectionRequest_GetSelectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionRequest_GetSelectionRequest) ProtoMessage() {}

func (x *SelectionRequest_GetSelectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[122]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionRequest_GetSelectionRequest.ProtoReflect.Descriptor instead.
func (*SelectionRequest_GetSelectionRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{13, 0}
}

func (x *SelectionRequest_GetSelectionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

type SelectionRequest_SetSelectionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId *string    `protobuf:"bytes,1,opt,name=session_id,json=sessionId" json:"session_id,omitempty"`
	Selection *Selection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
}

func (x *SelectionRequest_SetSelectionRequest) Reset() {
	*x = SelectionRequest_SetSelectionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[123]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectionRequest_SetSelectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionRequest_SetSelectionRequest) ProtoMessage() {}

func (x *SelectionRequest_SetSelectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[123]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionRequest_SetSelectionRequest.ProtoReflect.Descriptor instead.
func (*SelectionRequest_SetSelectionRequest) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{13, 1}
}

func (x *SelectionRequest_SetSelectionRequest) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *SelectionRequest_SetSelectionRequest) GetSelection() *Selection {
	if x != nil {
		return x.Selection
	}
	return nil
}

type SelectionResponse_GetSelectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selection *Selection `protobuf:"bytes,2,opt,name=selection" json:"selection,omitempty"`
}

func (x *SelectionResponse_GetSelectionResponse) Reset() {
	*x = SelectionResponse_GetSelectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[124]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectionResponse_GetSelectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionResponse_GetSelectionResponse) ProtoMessage() {}

func (x *SelectionResponse_GetSelectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[124]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionResponse_GetSelectionResponse.ProtoReflect.Descriptor instead.
func (*SelectionResponse_GetSelectionResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{14, 0}
}

func (x *SelectionResponse_GetSelectionResponse) GetSelection() *Selection {
	if x != nil {
		return x.Selection
	}
	return nil
}

type SelectionResponse_SetSelectionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SelectionResponse_SetSelectionResponse) Reset() {
	*x = SelectionResponse_SetSelectionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[125]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SelectionResponse_SetSelectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectionResponse_SetSelectionResponse) ProtoMessage() {}

func (x *SelectionResponse_SetSelectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[125]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectionResponse_SetSelectionResponse.ProtoReflect.Descriptor instead.
func (*SelectionResponse_SetSelectionResponse) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{14, 1}
}

type ColorPresetRequest_ListPresets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ColorPresetRequest_ListPresets) Reset() {
	*x = ColorPresetRequest_ListPresets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[126]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorPresetRequest_ListPresets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorPresetRequest_ListPresets) ProtoMessage() {}

func (x *ColorPresetRequest_ListPresets) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[126]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorPresetRequest_ListPresets.ProtoReflect.Descriptor instead.
func (*ColorPresetRequest_ListPresets) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{15, 0}
}

type ColorPresetRequest_GetPreset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *ColorPresetRequest_GetPreset) Reset() {
	*x = ColorPresetRequest_GetPreset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[127]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorPresetRequest_GetPreset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorPresetRequest_GetPreset) ProtoMessage() {}

func (x *ColorPresetRequest_GetPreset) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[127]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorPresetRequest_GetPreset.ProtoReflect.Descriptor instead.
func (*ColorPresetRequest_GetPreset) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{15, 1}
}

func (x *ColorPresetRequest_GetPreset) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type ColorPresetResponse_ListPresets struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name []string `protobuf:"bytes,1,rep,name=name" json:"name,omitempty"`
}

func (x *ColorPresetResponse_ListPresets) Reset() {
	*x = ColorPresetResponse_ListPresets{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[128]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorPresetResponse_ListPresets) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorPresetResponse_ListPresets) ProtoMessage() {}

func (x *ColorPresetResponse_ListPresets) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[128]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorPresetResponse_ListPresets.ProtoReflect.Descriptor instead.
func (*ColorPresetResponse_ListPresets) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{16, 0}
}

func (x *ColorPresetResponse_ListPresets) GetName() []string {
	if x != nil {
		return x.Name
	}
	return nil
}

type ColorPresetResponse_GetPreset struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ColorSettings []*ColorPresetResponse_GetPreset_ColorSetting `protobuf:"bytes,1,rep,name=color_settings,json=colorSettings" json:"color_settings,omitempty"`
}

func (x *ColorPresetResponse_GetPreset) Reset() {
	*x = ColorPresetResponse_GetPreset{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[129]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorPresetResponse_GetPreset) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorPresetResponse_GetPreset) ProtoMessage() {}

func (x *ColorPresetResponse_GetPreset) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[129]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorPresetResponse_GetPreset.ProtoReflect.Descriptor instead.
func (*ColorPresetResponse_GetPreset) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{16, 1}
}

func (x *ColorPresetResponse_GetPreset) GetColorSettings() []*ColorPresetResponse_GetPreset_ColorSetting {
	if x != nil {
		return x.ColorSettings
	}
	return nil
}

type ColorPresetResponse_GetPreset_ColorSetting struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Red        *float32 `protobuf:"fixed32,1,opt,name=red" json:"red,omitempty"`
	Green      *float32 `protobuf:"fixed32,2,opt,name=green" json:"green,omitempty"`
	Blue       *float32 `protobuf:"fixed32,3,opt,name=blue" json:"blue,omitempty"`
	Alpha      *float32 `protobuf:"fixed32,4,opt,name=alpha" json:"alpha,omitempty"`
	ColorSpace *string  `protobuf:"bytes,5,opt,name=color_space,json=colorSpace" json:"color_space,omitempty"`
	Key        *string  `protobuf:"bytes,6,opt,name=key" json:"key,omitempty"`
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) Reset() {
	*x = ColorPresetResponse_GetPreset_ColorSetting{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[130]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ColorPresetResponse_GetPreset_ColorSetting) ProtoMessage() {}

func (x *ColorPresetResponse_GetPreset_ColorSetting) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[130]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ColorPresetResponse_GetPreset_ColorSetting.ProtoReflect.Descriptor instead.
func (*ColorPresetResponse_GetPreset_ColorSetting) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{16, 1, 0}
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) GetRed() float32 {
	if x != nil && x.Red != nil {
		return *x.Red
	}
	return 0
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) GetGreen() float32 {
	if x != nil && x.Green != nil {
		return *x.Green
	}
	return 0
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) GetBlue() float32 {
	if x != nil && x.Blue != nil {
		return *x.Blue
	}
	return 0
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) GetAlpha() float32 {
	if x != nil && x.Alpha != nil {
		return *x.Alpha
	}
	return 0
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) GetColorSpace() string {
	if x != nil && x.ColorSpace != nil {
		return *x.ColorSpace
	}
	return ""
}

func (x *ColorPresetResponse_GetPreset_ColorSetting) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

type PreferencesRequest_Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Request:
	//	*PreferencesRequest_Request_SetPreferenceRequest
	//	*PreferencesRequest_Request_GetPreferenceRequest
	//	*PreferencesRequest_Request_SetDefaultProfileRequest
	//	*PreferencesRequest_Request_GetDefaultProfileRequest
	Request isPreferencesRequest_Request_Request `protobuf_oneof:"request"`
}

func (x *PreferencesRequest_Request) Reset() {
	*x = PreferencesRequest_Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[131]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesRequest_Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesRequest_Request) ProtoMessage() {}

func (x *PreferencesRequest_Request) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[131]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesRequest_Request.ProtoReflect.Descriptor instead.
func (*PreferencesRequest_Request) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{17, 0}
}

func (m *PreferencesRequest_Request) GetRequest() isPreferencesRequest_Request_Request {
	if m != nil {
		return m.Request
	}
	return nil
}

func (x *PreferencesRequest_Request) GetSetPreferenceRequest() *PreferencesRequest_Request_SetPreference {
	if x, ok := x.GetRequest().(*PreferencesRequest_Request_SetPreferenceRequest); ok {
		return x.SetPreferenceRequest
	}
	return nil
}

func (x *PreferencesRequest_Request) GetGetPreferenceRequest() *PreferencesRequest_Request_GetPreference {
	if x, ok := x.GetRequest().(*PreferencesRequest_Request_GetPreferenceRequest); ok {
		return x.GetPreferenceRequest
	}
	return nil
}

func (x *PreferencesRequest_Request) GetSetDefaultProfileRequest() *PreferencesRequest_Request_SetDefaultProfile {
	if x, ok := x.GetRequest().(*PreferencesRequest_Request_SetDefaultProfileRequest); ok {
		return x.SetDefaultProfileRequest
	}
	return nil
}

func (x *PreferencesRequest_Request) GetGetDefaultProfileRequest() *PreferencesRequest_Request_GetDefaultProfile {
	if x, ok := x.GetRequest().(*PreferencesRequest_Request_GetDefaultProfileRequest); ok {
		return x.GetDefaultProfileRequest
	}
	return nil
}

type isPreferencesRequest_Request_Request interface {
	isPreferencesRequest_Request_Request()
}

type PreferencesRequest_Request_SetPreferenceRequest struct {
	SetPreferenceRequest *PreferencesRequest_Request_SetPreference `protobuf:"bytes,1,opt,name=set_preference_request,json=setPreferenceRequest,oneof"`
}

type PreferencesRequest_Request_GetPreferenceRequest struct {
	GetPreferenceRequest *PreferencesRequest_Request_GetPreference `protobuf:"bytes,2,opt,name=get_preference_request,json=getPreferenceRequest,oneof"`
}

type PreferencesRequest_Request_SetDefaultProfileRequest struct {
	SetDefaultProfileRequest *PreferencesRequest_Request_SetDefaultProfile `protobuf:"bytes,3,opt,name=set_default_profile_request,json=setDefaultProfileRequest,oneof"`
}

type PreferencesRequest_Request_GetDefaultProfileRequest struct {
	GetDefaultProfileRequest *PreferencesRequest_Request_GetDefaultProfile `protobuf:"bytes,4,opt,name=get_default_profile_request,json=getDefaultProfileRequest,oneof"`
}

func (*PreferencesRequest_Request_SetPreferenceRequest) isPreferencesRequest_Request_Request() {}

func (*PreferencesRequest_Request_GetPreferenceRequest) isPreferencesRequest_Request_Request() {}

func (*PreferencesRequest_Request_SetDefaultProfileRequest) isPreferencesRequest_Request_Request() {}

func (*PreferencesRequest_Request_GetDefaultProfileRequest) isPreferencesRequest_Request_Request() {}

type PreferencesRequest_Request_SetPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	JsonValue *string `protobuf:"bytes,2,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"`
}

func (x *PreferencesRequest_Request_SetPreference) Reset() {
	*x = PreferencesRequest_Request_SetPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[132]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesRequest_Request_SetPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesRequest_Request_SetPreference) ProtoMessage() {}

func (x *PreferencesRequest_Request_SetPreference) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[132]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesRequest_Request_SetPreference.ProtoReflect.Descriptor instead.
func (*PreferencesRequest_Request_SetPreference) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{17, 0, 0}
}

func (x *PreferencesRequest_Request_SetPreference) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *PreferencesRequest_Request_SetPreference) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

type PreferencesRequest_Request_GetPreference struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
}

func (x *PreferencesRequest_Request_GetPreference) Reset() {
	*x = PreferencesRequest_Request_GetPreference{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[133]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesRequest_Request_GetPreference) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesRequest_Request_GetPreference) ProtoMessage() {}

func (x *PreferencesRequest_Request_GetPreference) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[133]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesRequest_Request_GetPreference.ProtoReflect.Descriptor instead.
func (*PreferencesRequest_Request_GetPreference) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{17, 0, 1}
}

func (x *PreferencesRequest_Request_GetPreference) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

type PreferencesRequest_Request_SetDefaultProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid *string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
}

func (x *PreferencesRequest_Request_SetDefaultProfile) Reset() {
	*x = PreferencesRequest_Request_SetDefaultProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[134]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesRequest_Request_SetDefaultProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesRequest_Request_SetDefaultProfile) ProtoMessage() {}

func (x *PreferencesRequest_Request_SetDefaultProfile) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[134]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesRequest_Request_SetDefaultProfile.ProtoReflect.Descriptor instead.
func (*PreferencesRequest_Request_SetDefaultProfile) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{17, 0, 2}
}

func (x *PreferencesRequest_Request_SetDefaultProfile) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

type PreferencesRequest_Request_GetDefaultProfile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PreferencesRequest_Request_GetDefaultProfile) Reset() {
	*x = PreferencesRequest_Request_GetDefaultProfile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[135]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesRequest_Request_GetDefaultProfile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesRequest_Request_GetDefaultProfile) ProtoMessage() {}

func (x *PreferencesRequest_Request_GetDefaultProfile) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[135]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesRequest_Request_GetDefaultProfile.ProtoReflect.Descriptor instead.
func (*PreferencesRequest_Request_GetDefaultProfile) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{17, 0, 3}
}

type PreferencesResponse_Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Result:
	//	*PreferencesResponse_Result_UnrecognizedRequest
	//	*PreferencesResponse_Result_SetPreferenceResult_
	//	*PreferencesResponse_Result_GetPreferenceResult_
	//	*PreferencesResponse_Result_SetDefaultProfileResult_
	//	*PreferencesResponse_Result_GetDefaultProfileResult_
	Result isPreferencesResponse_Result_Result `protobuf_oneof:"result"`
}

func (x *PreferencesResponse_Result) Reset() {
	*x = PreferencesResponse_Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[136]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesResponse_Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesResponse_Result) ProtoMessage() {}

func (x *PreferencesResponse_Result) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[136]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesResponse_Result.ProtoReflect.Descriptor instead.
func (*PreferencesResponse_Result) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0}
}

func (m *PreferencesResponse_Result) GetResult() isPreferencesResponse_Result_Result {
	if m != nil {
		return m.Result
	}
	return nil
}

func (x *PreferencesResponse_Result) GetUnrecognizedRequest() *PreferencesResponse_Result_UnrecognizedResult {
	if x, ok := x.GetResult().(*PreferencesResponse_Result_UnrecognizedRequest); ok {
		return x.UnrecognizedRequest
	}
	return nil
}

func (x *PreferencesResponse_Result) GetSetPreferenceResult() *PreferencesResponse_Result_SetPreferenceResult {
	if x, ok := x.GetResult().(*PreferencesResponse_Result_SetPreferenceResult_); ok {
		return x.SetPreferenceResult
	}
	return nil
}

func (x *PreferencesResponse_Result) GetGetPreferenceResult() *PreferencesResponse_Result_GetPreferenceResult {
	if x, ok := x.GetResult().(*PreferencesResponse_Result_GetPreferenceResult_); ok {
		return x.GetPreferenceResult
	}
	return nil
}

func (x *PreferencesResponse_Result) GetSetDefaultProfileResult() *PreferencesResponse_Result_SetDefaultProfileResult {
	if x, ok := x.GetResult().(*PreferencesResponse_Result_SetDefaultProfileResult_); ok {
		return x.SetDefaultProfileResult
	}
	return nil
}

func (x *PreferencesResponse_Result) GetGetDefaultProfileResult() *PreferencesResponse_Result_GetDefaultProfileResult {
	if x, ok := x.GetResult().(*PreferencesResponse_Result_GetDefaultProfileResult_); ok {
		return x.GetDefaultProfileResult
	}
	return nil
}

type isPreferencesResponse_Result_Result interface {
	isPreferencesResponse_Result_Result()
}

type PreferencesResponse_Result_UnrecognizedRequest struct {
	UnrecognizedRequest *PreferencesResponse_Result_UnrecognizedResult `protobuf:"bytes,1,opt,name=unrecognized_request,json=unrecognizedRequest,oneof"`
}

type PreferencesResponse_Result_SetPreferenceResult_ struct {
	SetPreferenceResult *PreferencesResponse_Result_SetPreferenceResult `protobuf:"bytes,2,opt,name=set_preference_result,json=setPreferenceResult,oneof"`
}

type PreferencesResponse_Result_GetPreferenceResult_ struct {
	GetPreferenceResult *PreferencesResponse_Result_GetPreferenceResult `protobuf:"bytes,3,opt,name=get_preference_result,json=getPreferenceResult,oneof"`
}

type PreferencesResponse_Result_SetDefaultProfileResult_ struct {
	SetDefaultProfileResult *PreferencesResponse_Result_SetDefaultProfileResult `protobuf:"bytes,4,opt,name=set_default_profile_result,json=setDefaultProfileResult,oneof"`
}

type PreferencesResponse_Result_GetDefaultProfileResult_ struct {
	GetDefaultProfileResult *PreferencesResponse_Result_GetDefaultProfileResult `protobuf:"bytes,5,opt,name=get_default_profile_result,json=getDefaultProfileResult,oneof"`
}

func (*PreferencesResponse_Result_UnrecognizedRequest) isPreferencesResponse_Result_Result() {}

func (*PreferencesResponse_Result_SetPreferenceResult_) isPreferencesResponse_Result_Result() {}

func (*PreferencesResponse_Result_GetPreferenceResult_) isPreferencesResponse_Result_Result() {}

func (*PreferencesResponse_Result_SetDefaultProfileResult_) isPreferencesResponse_Result_Result() {}

func (*PreferencesResponse_Result_GetDefaultProfileResult_) isPreferencesResponse_Result_Result() {}

type PreferencesResponse_Result_SetPreferenceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *PreferencesResponse_Result_SetPreferenceResult_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.PreferencesResponse_Result_SetPreferenceResult_Status" json:"status,omitempty"`
}

func (x *PreferencesResponse_Result_SetPreferenceResult) Reset() {
	*x = PreferencesResponse_Result_SetPreferenceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[137]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesResponse_Result_SetPreferenceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesResponse_Result_SetPreferenceResult) ProtoMessage() {}

func (x *PreferencesResponse_Result_SetPreferenceResult) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[137]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesResponse_Result_SetPreferenceResult.ProtoReflect.Descriptor instead.
func (*PreferencesResponse_Result_SetPreferenceResult) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0, 0}
}

func (x *PreferencesResponse_Result_SetPreferenceResult) GetStatus() PreferencesResponse_Result_SetPreferenceResult_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return PreferencesResponse_Result_SetPreferenceResult_OK
}

type PreferencesResponse_Result_GetPreferenceResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	JsonValue *string `protobuf:"bytes,1,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"` // Will be unset if no value assigned. Will always be set if there is a default value.
}

func (x *PreferencesResponse_Result_GetPreferenceResult) Reset() {
	*x = PreferencesResponse_Result_GetPreferenceResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[138]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesResponse_Result_GetPreferenceResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesResponse_Result_GetPreferenceResult) ProtoMessage() {}

func (x *PreferencesResponse_Result_GetPreferenceResult) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[138]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesResponse_Result_GetPreferenceResult.ProtoReflect.Descriptor instead.
func (*PreferencesResponse_Result_GetPreferenceResult) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0, 1}
}

func (x *PreferencesResponse_Result_GetPreferenceResult) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

type PreferencesResponse_Result_SetDefaultProfileResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status *PreferencesResponse_Result_SetDefaultProfileResult_Status `protobuf:"varint,1,opt,name=status,enum=iterm2.PreferencesResponse_Result_SetDefaultProfileResult_Status" json:"status,omitempty"`
}

func (x *PreferencesResponse_Result_SetDefaultProfileResult) Reset() {
	*x = PreferencesResponse_Result_SetDefaultProfileResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[139]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesResponse_Result_SetDefaultProfileResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesResponse_Result_SetDefaultProfileResult) ProtoMessage() {}

func (x *PreferencesResponse_Result_SetDefaultProfileResult) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[139]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesResponse_Result_SetDefaultProfileResult.ProtoReflect.Descriptor instead.
func (*PreferencesResponse_Result_SetDefaultProfileResult) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0, 2}
}

func (x *PreferencesResponse_Result_SetDefaultProfileResult) GetStatus() PreferencesResponse_Result_SetDefaultProfileResult_Status {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return PreferencesResponse_Result_SetDefaultProfileResult_OK
}

type PreferencesResponse_Result_UnrecognizedResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PreferencesResponse_Result_UnrecognizedResult) Reset() {
	*x = PreferencesResponse_Result_UnrecognizedResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[140]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesResponse_Result_UnrecognizedResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesResponse_Result_UnrecognizedResult) ProtoMessage() {}

func (x *PreferencesResponse_Result_UnrecognizedResult) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[140]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesResponse_Result_UnrecognizedResult.ProtoReflect.Descriptor instead.
func (*PreferencesResponse_Result_UnrecognizedResult) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0, 3}
}

type PreferencesResponse_Result_GetDefaultProfileResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guid *string `protobuf:"bytes,1,opt,name=guid" json:"guid,omitempty"`
}

func (x *PreferencesResponse_Result_GetDefaultProfileResult) Reset() {
	*x = PreferencesResponse_Result_GetDefaultProfileResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[141]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PreferencesResponse_Result_GetDefaultProfileResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PreferencesResponse_Result_GetDefaultProfileResult) ProtoMessage() {}

func (x *PreferencesResponse_Result_GetDefaultProfileResult) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[141]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PreferencesResponse_Result_GetDefaultProfileResult.ProtoReflect.Descriptor instead.
func (*PreferencesResponse_Result_GetDefaultProfileResult) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{18, 0, 4}
}

func (x *PreferencesResponse_Result_GetDefaultProfileResult) GetGuid() string {
	if x != nil && x.Guid != nil {
		return *x.Guid
	}
	return ""
}

type ReorderTabsRequest_Assignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WindowId *string  `protobuf:"bytes,1,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
	TabIds   []string `protobuf:"bytes,2,rep,name=tab_ids,json=tabIds" json:"tab_ids,omitempty"`
}

func (x *ReorderTabsRequest_Assignment) Reset() {
	*x = ReorderTabsRequest_Assignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[142]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReorderTabsRequest_Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReorderTabsRequest_Assignment) ProtoMessage() {}

func (x *ReorderTabsRequest_Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[142]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReorderTabsRequest_Assignment.ProtoReflect.Descriptor instead.
func (*ReorderTabsRequest_Assignment) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{19, 0}
}

func (x *ReorderTabsRequest_Assignment) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

func (x *ReorderTabsRequest_Assignment) GetTabIds() []string {
	if x != nil {
		return x.TabIds
	}
	return nil
}

type TmuxRequest_ListConnections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TmuxRequest_ListConnections) Reset() {
	*x = TmuxRequest_ListConnections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[143]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxRequest_ListConnections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxRequest_ListConnections) ProtoMessage() {}

func (x *TmuxRequest_ListConnections) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[143]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxRequest_ListConnections.ProtoReflect.Descriptor instead.
func (*TmuxRequest_ListConnections) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{21, 0}
}

type TmuxRequest_SendCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId *string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Command      *string `protobuf:"bytes,2,opt,name=command" json:"command,omitempty"`
}

func (x *TmuxRequest_SendCommand) Reset() {
	*x = TmuxRequest_SendCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[144]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxRequest_SendCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxRequest_SendCommand) ProtoMessage() {}

func (x *TmuxRequest_SendCommand) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[144]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxRequest_SendCommand.ProtoReflect.Descriptor instead.
func (*TmuxRequest_SendCommand) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{21, 1}
}

func (x *TmuxRequest_SendCommand) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *TmuxRequest_SendCommand) GetCommand() string {
	if x != nil && x.Command != nil {
		return *x.Command
	}
	return ""
}

type TmuxRequest_SetWindowVisible struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId *string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	WindowId     *string `protobuf:"bytes,2,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
	Visible      *bool   `protobuf:"varint,3,opt,name=visible" json:"visible,omitempty"`
}

func (x *TmuxRequest_SetWindowVisible) Reset() {
	*x = TmuxRequest_SetWindowVisible{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[145]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxRequest_SetWindowVisible) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxRequest_SetWindowVisible) ProtoMessage() {}

func (x *TmuxRequest_SetWindowVisible) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[145]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxRequest_SetWindowVisible.ProtoReflect.Descriptor instead.
func (*TmuxRequest_SetWindowVisible) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{21, 2}
}

func (x *TmuxRequest_SetWindowVisible) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *TmuxRequest_SetWindowVisible) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

func (x *TmuxRequest_SetWindowVisible) GetVisible() bool {
	if x != nil && x.Visible != nil {
		return *x.Visible
	}
	return false
}

type TmuxRequest_CreateWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId *string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	Affinity     *string `protobuf:"bytes,2,opt,name=affinity" json:"affinity,omitempty"`
}

func (x *TmuxRequest_CreateWindow) Reset() {
	*x = TmuxRequest_CreateWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[146]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxRequest_CreateWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxRequest_CreateWindow) ProtoMessage() {}

func (x *TmuxRequest_CreateWindow) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[146]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxRequest_CreateWindow.ProtoReflect.Descriptor instead.
func (*TmuxRequest_CreateWindow) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{21, 3}
}

func (x *TmuxRequest_CreateWindow) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *TmuxRequest_CreateWindow) GetAffinity() string {
	if x != nil && x.Affinity != nil {
		return *x.Affinity
	}
	return ""
}

type TmuxResponse_ListConnections struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Connections []*TmuxResponse_ListConnections_Connection `protobuf:"bytes,1,rep,name=connections" json:"connections,omitempty"`
}

func (x *TmuxResponse_ListConnections) Reset() {
	*x = TmuxResponse_ListConnections{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[147]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxResponse_ListConnections) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxResponse_ListConnections) ProtoMessage() {}

func (x *TmuxResponse_ListConnections) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[147]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxResponse_ListConnections.ProtoReflect.Descriptor instead.
func (*TmuxResponse_ListConnections) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{22, 0}
}

func (x *TmuxResponse_ListConnections) GetConnections() []*TmuxResponse_ListConnections_Connection {
	if x != nil {
		return x.Connections
	}
	return nil
}

type TmuxResponse_SendCommand struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// If not set, an error occurred.
	Output *string `protobuf:"bytes,1,opt,name=output" json:"output,omitempty"`
}

func (x *TmuxResponse_SendCommand) Reset() {
	*x = TmuxResponse_SendCommand{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[148]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxResponse_SendCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxResponse_SendCommand) ProtoMessage() {}

func (x *TmuxResponse_SendCommand) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[148]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxResponse_SendCommand.ProtoReflect.Descriptor instead.
func (*TmuxResponse_SendCommand) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{22, 1}
}

func (x *TmuxResponse_SendCommand) GetOutput() string {
	if x != nil && x.Output != nil {
		return *x.Output
	}
	return ""
}

type TmuxResponse_SetWindowVisible struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TmuxResponse_SetWindowVisible) Reset() {
	*x = TmuxResponse_SetWindowVisible{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[149]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxResponse_SetWindowVisible) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxResponse_SetWindowVisible) ProtoMessage() {}

func (x *TmuxResponse_SetWindowVisible) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[149]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxResponse_SetWindowVisible.ProtoReflect.Descriptor instead.
func (*TmuxResponse_SetWindowVisible) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{22, 2}
}

type TmuxResponse_CreateWindow struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// This is an iTerm2 tab ID.
	TabId *string `protobuf:"bytes,1,opt,name=tab_id,json=tabId" json:"tab_id,omitempty"`
}

func (x *TmuxResponse_CreateWindow) Reset() {
	*x = TmuxResponse_CreateWindow{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[150]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxResponse_CreateWindow) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxResponse_CreateWindow) ProtoMessage() {}

func (x *TmuxResponse_CreateWindow) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[150]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxResponse_CreateWindow.ProtoReflect.Descriptor instead.
func (*TmuxResponse_CreateWindow) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{22, 3}
}

func (x *TmuxResponse_CreateWindow) GetTabId() string {
	if x != nil && x.TabId != nil {
		return *x.TabId
	}
	return ""
}

type TmuxResponse_ListConnections_Connection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnectionId    *string `protobuf:"bytes,1,opt,name=connection_id,json=connectionId" json:"connection_id,omitempty"`
	OwningSessionId *string `protobuf:"bytes,2,opt,name=owning_session_id,json=owningSessionId" json:"owning_session_id,omitempty"`
}

func (x *TmuxResponse_ListConnections_Connection) Reset() {
	*x = TmuxResponse_ListConnections_Connection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[151]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TmuxResponse_ListConnections_Connection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TmuxResponse_ListConnections_Connection) ProtoMessage() {}

func (x *TmuxResponse_ListConnections_Connection) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[151]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TmuxResponse_ListConnections_Connection.ProtoReflect.Descriptor instead.
func (*TmuxResponse_ListConnections_Connection) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{22, 0, 0}
}

func (x *TmuxResponse_ListConnections_Connection) GetConnectionId() string {
	if x != nil && x.ConnectionId != nil {
		return *x.ConnectionId
	}
	return ""
}

func (x *TmuxResponse_ListConnections_Connection) GetOwningSessionId() string {
	if x != nil && x.OwningSessionId != nil {
		return *x.OwningSessionId
	}
	return ""
}

type ListProfilesResponse_Profile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Properties []*ProfileProperty `protobuf:"bytes,1,rep,name=properties" json:"properties,omitempty"`
}

func (x *ListProfilesResponse_Profile) Reset() {
	*x = ListProfilesResponse_Profile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[152]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListProfilesResponse_Profile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProfilesResponse_Profile) ProtoMessage() {}

func (x *ListProfilesResponse_Profile) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[152]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProfilesResponse_Profile.ProtoReflect.Descriptor instead.
func (*ListProfilesResponse_Profile) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{35, 0}
}

func (x *ListProfilesResponse_Profile) GetProperties() []*ProfileProperty {
	if x != nil {
		return x.Properties
	}
	return nil
}

type VariableRequest_Set struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"` // JSON encoded
}

func (x *VariableRequest_Set) Reset() {
	*x = VariableRequest_Set{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[153]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VariableRequest_Set) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VariableRequest_Set) ProtoMessage() {}

func (x *VariableRequest_Set) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[153]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VariableRequest_Set.ProtoReflect.Descriptor instead.
func (*VariableRequest_Set) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{40, 0}
}

func (x *VariableRequest_Set) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *VariableRequest_Set) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// Activate the app?
type ActivateRequest_App struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RaiseAllWindows   *bool `protobuf:"varint,1,opt,name=raise_all_windows,json=raiseAllWindows" json:"raise_all_windows,omitempty"`
	IgnoringOtherApps *bool `protobuf:"varint,2,opt,name=ignoring_other_apps,json=ignoringOtherApps" json:"ignoring_other_apps,omitempty"`
}

func (x *ActivateRequest_App) Reset() {
	*x = ActivateRequest_App{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[154]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateRequest_App) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateRequest_App) ProtoMessage() {}

func (x *ActivateRequest_App) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[154]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateRequest_App.ProtoReflect.Descriptor instead.
func (*ActivateRequest_App) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{42, 0}
}

func (x *ActivateRequest_App) GetRaiseAllWindows() bool {
	if x != nil && x.RaiseAllWindows != nil {
		return *x.RaiseAllWindows
	}
	return false
}

func (x *ActivateRequest_App) GetIgnoringOtherApps() bool {
	if x != nil && x.IgnoringOtherApps != nil {
		return *x.IgnoringOtherApps
	}
	return false
}

type RPCRegistrationRequest_RPCArgumentSignature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (x *RPCRegistrationRequest_RPCArgumentSignature) Reset() {
	*x = RPCRegistrationRequest_RPCArgumentSignature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[155]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest_RPCArgumentSignature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest_RPCArgumentSignature) ProtoMessage() {}

func (x *RPCRegistrationRequest_RPCArgumentSignature) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[155]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest_RPCArgumentSignature.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest_RPCArgumentSignature) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 0}
}

func (x *RPCRegistrationRequest_RPCArgumentSignature) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

type RPCRegistrationRequest_RPCArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Path *string `protobuf:"bytes,2,opt,name=path" json:"path,omitempty"`
}

func (x *RPCRegistrationRequest_RPCArgument) Reset() {
	*x = RPCRegistrationRequest_RPCArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[156]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest_RPCArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest_RPCArgument) ProtoMessage() {}

func (x *RPCRegistrationRequest_RPCArgument) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[156]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest_RPCArgument.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest_RPCArgument) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 1}
}

func (x *RPCRegistrationRequest_RPCArgument) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RPCRegistrationRequest_RPCArgument) GetPath() string {
	if x != nil && x.Path != nil {
		return *x.Path
	}
	return ""
}

type RPCRegistrationRequest_SessionTitleAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used by SESSION_TITLE to control name in Preferences menu
	DisplayName *string `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	// Identifies this title provider uniquely. Must not conflict with other title providers.
	// Use a backwards domain name identifying yourself and the feature, like "com.example.featurename"
	UniqueIdentifier *string `protobuf:"bytes,6,opt,name=unique_identifier,json=uniqueIdentifier" json:"unique_identifier,omitempty"`
}

func (x *RPCRegistrationRequest_SessionTitleAttributes) Reset() {
	*x = RPCRegistrationRequest_SessionTitleAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[157]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest_SessionTitleAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest_SessionTitleAttributes) ProtoMessage() {}

func (x *RPCRegistrationRequest_SessionTitleAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[157]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest_SessionTitleAttributes.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest_SessionTitleAttributes) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 2}
}

func (x *RPCRegistrationRequest_SessionTitleAttributes) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *RPCRegistrationRequest_SessionTitleAttributes) GetUniqueIdentifier() string {
	if x != nil && x.UniqueIdentifier != nil {
		return *x.UniqueIdentifier
	}
	return ""
}

type RPCRegistrationRequest_StatusBarComponentAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Used by STATUS_BAR_COMPONENT
	ShortDescription    *string                                                     `protobuf:"bytes,1,opt,name=short_description,json=shortDescription" json:"short_description,omitempty"`
	DetailedDescription *string                                                     `protobuf:"bytes,2,opt,name=detailed_description,json=detailedDescription" json:"detailed_description,omitempty"`
	Knobs               []*RPCRegistrationRequest_StatusBarComponentAttributes_Knob `protobuf:"bytes,3,rep,name=knobs" json:"knobs,omitempty"`
	Exemplar            *string                                                     `protobuf:"bytes,4,opt,name=exemplar" json:"exemplar,omitempty"`
	UpdateCadence       *float32                                                    `protobuf:"fixed32,5,opt,name=update_cadence,json=updateCadence" json:"update_cadence,omitempty"`
	// Identifies this component uniquely. Must not conflict with other components.
	// Use a backwards domain name identifying yourself and the feature, like "com.example.featurename"
	UniqueIdentifier *string                                                     `protobuf:"bytes,6,opt,name=unique_identifier,json=uniqueIdentifier" json:"unique_identifier,omitempty"`
	Icons            []*RPCRegistrationRequest_StatusBarComponentAttributes_Icon `protobuf:"bytes,7,rep,name=icons" json:"icons,omitempty"`
	Format           *RPCRegistrationRequest_StatusBarComponentAttributes_Format `protobuf:"varint,8,opt,name=format,enum=iterm2.RPCRegistrationRequest_StatusBarComponentAttributes_Format,def=0" json:"format,omitempty"`
}

// Default values for RPCRegistrationRequest_StatusBarComponentAttributes fields.
const (
	Default_RPCRegistrationRequest_StatusBarComponentAttributes_Format = RPCRegistrationRequest_StatusBarComponentAttributes_PLAIN_TEXT
)

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) Reset() {
	*x = RPCRegistrationRequest_StatusBarComponentAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[158]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest_StatusBarComponentAttributes) ProtoMessage() {}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[158]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest_StatusBarComponentAttributes.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest_StatusBarComponentAttributes) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 3}
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetShortDescription() string {
	if x != nil && x.ShortDescription != nil {
		return *x.ShortDescription
	}
	return ""
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetDetailedDescription() string {
	if x != nil && x.DetailedDescription != nil {
		return *x.DetailedDescription
	}
	return ""
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetKnobs() []*RPCRegistrationRequest_StatusBarComponentAttributes_Knob {
	if x != nil {
		return x.Knobs
	}
	return nil
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetExemplar() string {
	if x != nil && x.Exemplar != nil {
		return *x.Exemplar
	}
	return ""
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetUpdateCadence() float32 {
	if x != nil && x.UpdateCadence != nil {
		return *x.UpdateCadence
	}
	return 0
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetUniqueIdentifier() string {
	if x != nil && x.UniqueIdentifier != nil {
		return *x.UniqueIdentifier
	}
	return ""
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetIcons() []*RPCRegistrationRequest_StatusBarComponentAttributes_Icon {
	if x != nil {
		return x.Icons
	}
	return nil
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes) GetFormat() RPCRegistrationRequest_StatusBarComponentAttributes_Format {
	if x != nil && x.Format != nil {
		return *x.Format
	}
	return Default_RPCRegistrationRequest_StatusBarComponentAttributes_Format
}

type RPCRegistrationRequest_ContextMenuAttributes struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DisplayName      *string `protobuf:"bytes,1,opt,name=display_name,json=displayName" json:"display_name,omitempty"`
	UniqueIdentifier *string `protobuf:"bytes,2,opt,name=unique_identifier,json=uniqueIdentifier" json:"unique_identifier,omitempty"`
}

func (x *RPCRegistrationRequest_ContextMenuAttributes) Reset() {
	*x = RPCRegistrationRequest_ContextMenuAttributes{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[159]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest_ContextMenuAttributes) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest_ContextMenuAttributes) ProtoMessage() {}

func (x *RPCRegistrationRequest_ContextMenuAttributes) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[159]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest_ContextMenuAttributes.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest_ContextMenuAttributes) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 4}
}

func (x *RPCRegistrationRequest_ContextMenuAttributes) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *RPCRegistrationRequest_ContextMenuAttributes) GetUniqueIdentifier() string {
	if x != nil && x.UniqueIdentifier != nil {
		return *x.UniqueIdentifier
	}
	return ""
}

type RPCRegistrationRequest_StatusBarComponentAttributes_Knob struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string                                                        `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Type             *RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type `protobuf:"varint,2,opt,name=type,enum=iterm2.RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type" json:"type,omitempty"`
	Placeholder      *string                                                        `protobuf:"bytes,3,opt,name=placeholder" json:"placeholder,omitempty"`
	JsonDefaultValue *string                                                        `protobuf:"bytes,4,opt,name=json_default_value,json=jsonDefaultValue" json:"json_default_value,omitempty"`
	Key              *string                                                        `protobuf:"bytes,5,opt,name=key" json:"key,omitempty"`
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) Reset() {
	*x = RPCRegistrationRequest_StatusBarComponentAttributes_Knob{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[160]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest_StatusBarComponentAttributes_Knob) ProtoMessage() {}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[160]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest_StatusBarComponentAttributes_Knob.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest_StatusBarComponentAttributes_Knob) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 3, 0}
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) GetType() RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Checkbox
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) GetPlaceholder() string {
	if x != nil && x.Placeholder != nil {
		return *x.Placeholder
	}
	return ""
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) GetJsonDefaultValue() string {
	if x != nil && x.JsonDefaultValue != nil {
		return *x.JsonDefaultValue
	}
	return ""
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Knob) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

type RPCRegistrationRequest_StatusBarComponentAttributes_Icon struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data  []byte   `protobuf:"bytes,1,opt,name=data" json:"data,omitempty"`
	Scale *float32 `protobuf:"fixed32,2,opt,name=scale" json:"scale,omitempty"`
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Icon) Reset() {
	*x = RPCRegistrationRequest_StatusBarComponentAttributes_Icon{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[161]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Icon) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RPCRegistrationRequest_StatusBarComponentAttributes_Icon) ProtoMessage() {}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Icon) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[161]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RPCRegistrationRequest_StatusBarComponentAttributes_Icon.ProtoReflect.Descriptor instead.
func (*RPCRegistrationRequest_StatusBarComponentAttributes_Icon) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{51, 3, 1}
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Icon) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RPCRegistrationRequest_StatusBarComponentAttributes_Icon) GetScale() float32 {
	if x != nil && x.Scale != nil {
		return *x.Scale
	}
	return 0
}

type ServerOriginatedRPC_RPCArgument struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	JsonValue *string `protobuf:"bytes,2,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"`
}

func (x *ServerOriginatedRPC_RPCArgument) Reset() {
	*x = ServerOriginatedRPC_RPCArgument{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[162]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServerOriginatedRPC_RPCArgument) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServerOriginatedRPC_RPCArgument) ProtoMessage() {}

func (x *ServerOriginatedRPC_RPCArgument) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[162]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServerOriginatedRPC_RPCArgument.ProtoReflect.Descriptor instead.
func (*ServerOriginatedRPC_RPCArgument) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{65, 0}
}

func (x *ServerOriginatedRPC_RPCArgument) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *ServerOriginatedRPC_RPCArgument) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

type FocusChangedNotification_Window struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Describes how to interpret window_id.
	WindowStatus *FocusChangedNotification_Window_WindowStatus `protobuf:"varint,1,opt,name=window_status,json=windowStatus,enum=iterm2.FocusChangedNotification_Window_WindowStatus" json:"window_status,omitempty"`
	// The affected window_id
	WindowId *string `protobuf:"bytes,2,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
}

func (x *FocusChangedNotification_Window) Reset() {
	*x = FocusChangedNotification_Window{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[163]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FocusChangedNotification_Window) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FocusChangedNotification_Window) ProtoMessage() {}

func (x *FocusChangedNotification_Window) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[163]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FocusChangedNotification_Window.ProtoReflect.Descriptor instead.
func (*FocusChangedNotification_Window) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{76, 0}
}

func (x *FocusChangedNotification_Window) GetWindowStatus() FocusChangedNotification_Window_WindowStatus {
	if x != nil && x.WindowStatus != nil {
		return *x.WindowStatus
	}
	return FocusChangedNotification_Window_TERMINAL_WINDOW_BECAME_KEY
}

func (x *FocusChangedNotification_Window) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

type SetProfilePropertyRequest_GuidList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Guids []string `protobuf:"bytes,1,rep,name=guids" json:"guids,omitempty"`
}

func (x *SetProfilePropertyRequest_GuidList) Reset() {
	*x = SetProfilePropertyRequest_GuidList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[164]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProfilePropertyRequest_GuidList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProfilePropertyRequest_GuidList) ProtoMessage() {}

func (x *SetProfilePropertyRequest_GuidList) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[164]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProfilePropertyRequest_GuidList.ProtoReflect.Descriptor instead.
func (*SetProfilePropertyRequest_GuidList) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{88, 0}
}

func (x *SetProfilePropertyRequest_GuidList) GetGuids() []string {
	if x != nil {
		return x.Guids
	}
	return nil
}

type SetProfilePropertyRequest_Assignment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key       *string `protobuf:"bytes,1,opt,name=key" json:"key,omitempty"`
	JsonValue *string `protobuf:"bytes,2,opt,name=json_value,json=jsonValue" json:"json_value,omitempty"`
}

func (x *SetProfilePropertyRequest_Assignment) Reset() {
	*x = SetProfilePropertyRequest_Assignment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[165]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProfilePropertyRequest_Assignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProfilePropertyRequest_Assignment) ProtoMessage() {}

func (x *SetProfilePropertyRequest_Assignment) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[165]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProfilePropertyRequest_Assignment.ProtoReflect.Descriptor instead.
func (*SetProfilePropertyRequest_Assignment) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{88, 1}
}

func (x *SetProfilePropertyRequest_Assignment) GetKey() string {
	if x != nil && x.Key != nil {
		return *x.Key
	}
	return ""
}

func (x *SetProfilePropertyRequest_Assignment) GetJsonValue() string {
	if x != nil && x.JsonValue != nil {
		return *x.JsonValue
	}
	return ""
}

type SplitTreeNode_SplitTreeLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Child:
	//	*SplitTreeNode_SplitTreeLink_Session
	//	*SplitTreeNode_SplitTreeLink_Node
	Child isSplitTreeNode_SplitTreeLink_Child `protobuf_oneof:"child"`
}

func (x *SplitTreeNode_SplitTreeLink) Reset() {
	*x = SplitTreeNode_SplitTreeLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[166]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitTreeNode_SplitTreeLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitTreeNode_SplitTreeLink) ProtoMessage() {}

func (x *SplitTreeNode_SplitTreeLink) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[166]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitTreeNode_SplitTreeLink.ProtoReflect.Descriptor instead.
func (*SplitTreeNode_SplitTreeLink) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{105, 0}
}

func (m *SplitTreeNode_SplitTreeLink) GetChild() isSplitTreeNode_SplitTreeLink_Child {
	if m != nil {
		return m.Child
	}
	return nil
}

func (x *SplitTreeNode_SplitTreeLink) GetSession() *SessionSummary {
	if x, ok := x.GetChild().(*SplitTreeNode_SplitTreeLink_Session); ok {
		return x.Session
	}
	return nil
}

func (x *SplitTreeNode_SplitTreeLink) GetNode() *SplitTreeNode {
	if x, ok := x.GetChild().(*SplitTreeNode_SplitTreeLink_Node); ok {
		return x.Node
	}
	return nil
}

type isSplitTreeNode_SplitTreeLink_Child interface {
	isSplitTreeNode_SplitTreeLink_Child()
}

type SplitTreeNode_SplitTreeLink_Session struct {
	Session *SessionSummary `protobuf:"bytes,1,opt,name=session,oneof"`
}

type SplitTreeNode_SplitTreeLink_Node struct {
	Node *SplitTreeNode `protobuf:"bytes,2,opt,name=node,oneof"`
}

func (*SplitTreeNode_SplitTreeLink_Session) isSplitTreeNode_SplitTreeLink_Child() {}

func (*SplitTreeNode_SplitTreeLink_Node) isSplitTreeNode_SplitTreeLink_Child() {}

type ListSessionsResponse_Window struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tabs     []*ListSessionsResponse_Tab `protobuf:"bytes,1,rep,name=tabs" json:"tabs,omitempty"`
	WindowId *string                     `protobuf:"bytes,2,opt,name=window_id,json=windowId" json:"window_id,omitempty"`
	Frame    *Frame                      `protobuf:"bytes,3,opt,name=frame" json:"frame,omitempty"`
	Number   *int32                      `protobuf:"varint,4,opt,name=number" json:"number,omitempty"`
}

func (x *ListSessionsResponse_Window) Reset() {
	*x = ListSessionsResponse_Window{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[167]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionsResponse_Window) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse_Window) ProtoMessage() {}

func (x *ListSessionsResponse_Window) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[167]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse_Window.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse_Window) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{106, 0}
}

func (x *ListSessionsResponse_Window) GetTabs() []*ListSessionsResponse_Tab {
	if x != nil {
		return x.Tabs
	}
	return nil
}

func (x *ListSessionsResponse_Window) GetWindowId() string {
	if x != nil && x.WindowId != nil {
		return *x.WindowId
	}
	return ""
}

func (x *ListSessionsResponse_Window) GetFrame() *Frame {
	if x != nil {
		return x.Frame
	}
	return nil
}

func (x *ListSessionsResponse_Window) GetNumber() int32 {
	if x != nil && x.Number != nil {
		return *x.Number
	}
	return 0
}

type ListSessionsResponse_Tab struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Root              *SplitTreeNode    `protobuf:"bytes,3,opt,name=root" json:"root,omitempty"`
	TabId             *string           `protobuf:"bytes,2,opt,name=tab_id,json=tabId" json:"tab_id,omitempty"`
	TmuxWindowId      *string           `protobuf:"bytes,4,opt,name=tmux_window_id,json=tmuxWindowId" json:"tmux_window_id,omitempty"`
	TmuxConnectionId  *string           `protobuf:"bytes,5,opt,name=tmux_connection_id,json=tmuxConnectionId" json:"tmux_connection_id,omitempty"`
	MinimizedSessions []*SessionSummary `protobuf:"bytes,6,rep,name=minimized_sessions,json=minimizedSessions" json:"minimized_sessions,omitempty"`
}

func (x *ListSessionsResponse_Tab) Reset() {
	*x = ListSessionsResponse_Tab{}
	if protoimpl.UnsafeEnabled {
		mi := &file_iterm2_proto_msgTypes[168]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListSessionsResponse_Tab) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListSessionsResponse_Tab) ProtoMessage() {}

func (x *ListSessionsResponse_Tab) ProtoReflect() protoreflect.Message {
	mi := &file_iterm2_proto_msgTypes[168]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListSessionsResponse_Tab.ProtoReflect.Descriptor instead.
func (*ListSessionsResponse_Tab) Descriptor() ([]byte, []int) {
	return file_iterm2_proto_rawDescGZIP(), []int{106, 1}
}

func (x *ListSessionsResponse_Tab) GetRoot() *SplitTreeNode {
	if x != nil {
		return x.Root
	}
	return nil
}

func (x *ListSessionsResponse_Tab) GetTabId() string {
	if x != nil && x.TabId != nil {
		return *x.TabId
	}
	return ""
}

func (x *ListSessionsResponse_Tab) GetTmuxWindowId() string {
	if x != nil && x.TmuxWindowId != nil {
		return *x.TmuxWindowId
	}
	return ""
}

func (x *ListSessionsResponse_Tab) GetTmuxConnectionId() string {
	if x != nil && x.TmuxConnectionId != nil {
		return *x.TmuxConnectionId
	}
	return ""
}

func (x *ListSessionsResponse_Tab) GetMinimizedSessions() []*SessionSummary {
	if x != nil {
		return x.MinimizedSessions
	}
	return nil
}

var File_iterm2_proto protoreflect.FileDescriptor

var file_iterm2_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x22, 0x9a, 0x16, 0x0a, 0x17, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x48, 0x0a, 0x12, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x42,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x12,
	0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x65, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x66, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x12, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x67, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x13, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x15, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54,
	0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64, 0x0a, 0x1c, 0x73, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x69, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x51, 0x0a, 0x15, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13,
	0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x54,
	0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x12, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x6c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x10, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x48, 0x0a, 0x12, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x50,
	0x61, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x70,
	0x6c, 0x69, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x64,
	0x0a, 0x1c, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x67, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x6f, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x70, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x12, 0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x0e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0d, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x61, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x10, 0x76, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x73,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x0f, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x5d, 0x0a, 0x19, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x61, 0x72, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x74, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x73, 0x61, 0x76, 0x65, 0x64, 0x41, 0x72, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x3b, 0x0a, 0x0d, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x46, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c,
	0x66, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x51, 0x0a, 0x15,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x7a, 0x0a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x20, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x57, 0x0a, 0x17, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x72,
	0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x45, 0x0a, 0x11, 0x6d, 0x65, 0x6e, 0x75, 0x5f, 0x69, 0x74, 0x65,
	0x6d, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x79, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0f, 0x6d, 0x65, 0x6e, 0x75,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x16, 0x73,
	0x65, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x7a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x62, 0x4c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x54,
	0x61, 0x62, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x67, 0x0a, 0x1d, 0x67, 0x65, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x7b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61,
	0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x1a, 0x67, 0x65,
	0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x38, 0x0a, 0x0c, 0x74, 0x6d, 0x75, 0x78,
	0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0b, 0x74, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4e, 0x0a, 0x14, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x62, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x7d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x61, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12,
	0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x61, 0x62, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x4d, 0x0a, 0x13, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x7e, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x70,
	0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x4e, 0x0a, 0x14, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x12, 0x63,
	0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x48, 0x0a, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x65, 0x0a, 0x1c, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x81, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x19, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x68, 0x0a, 0x1d, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x1a, 0x73, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a, 0x0d,
	0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x83, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x17, 0x69, 0x6e,
	0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x84, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x15, 0x69,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x4f, 0x0a, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x85, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48,
	0x00, 0x52, 0x12, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0c, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x22, 0xd5, 0x17, 0x0a, 0x17, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72,
	0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4b, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x62,
	0x75, 0x66, 0x66, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65,
	0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x67, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x50, 0x0a, 0x14, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x66, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x53, 0x0a, 0x15, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x67, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x14, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x68, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x67,
	0x0a, 0x1d, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x70, 0x72,
	0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x69, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x73, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x6a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a,
	0x12, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x6b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x6c,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x11, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x13, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x5f, 0x70, 0x61,
	0x6e, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x6d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74,
	0x50, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x11,
	0x73, 0x70, 0x6c, 0x69, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x67, 0x0a, 0x1d, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x6e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a,
	0x67, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x15, 0x73, 0x65,
	0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x6f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a,
	0x15, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x70, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x41, 0x0a, 0x0f, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x71, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x0e, 0x69, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11, 0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x72, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x10, 0x61, 0x63, 0x74, 0x69,
	0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x47, 0x0a, 0x11,
	0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x73, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x10, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x60, 0x0a, 0x1a, 0x73, 0x61, 0x76, 0x65, 0x64, 0x5f, 0x61,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x74, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x18, 0x73,
	0x61, 0x76, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x0e, 0x66, 0x6f, 0x63, 0x75, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x75, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x18, 0x76, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x7d, 0x0a,
	0x25, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x77, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67,
	0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x21, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x70, 0x63, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5a, 0x0a, 0x18,
	0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x78, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x16, 0x72, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x48, 0x0a, 0x12, 0x6d, 0x65, 0x6e, 0x75,
	0x5f, 0x69, 0x74, 0x65, 0x6d, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x79,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x10, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x55, 0x0a, 0x17, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x61, 0x62, 0x5f, 0x6c, 0x61,
	0x79, 0x6f, 0x75, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x7a, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74,
	0x54, 0x61, 0x62, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x54, 0x61, 0x62, 0x4c, 0x61, 0x79, 0x6f, 0x75,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x6a, 0x0a, 0x1e, 0x67, 0x65, 0x74,
	0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x7b, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x72,
	0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1b, 0x67, 0x65, 0x74, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x0d, 0x74, 0x6d, 0x75, 0x78, 0x5f, 0x72, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x7c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x74, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x15, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x5f, 0x74, 0x61,
	0x62, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x7d, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64,
	0x65, 0x72, 0x54, 0x61, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x13, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x61, 0x62, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x14, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x7e, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x48, 0x00, 0x52, 0x13, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x7f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73,
	0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x80, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x11, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x68, 0x0a, 0x1d, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x5f,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x81, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x1a, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72,
	0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x6b, 0x0a, 0x1e, 0x73, 0x65, 0x74, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x82, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48,
	0x00, 0x52, 0x1b, 0x73, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44,
	0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f,
	0x0a, 0x0e, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x83, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00,
	0x52, 0x0d, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x5b, 0x0a, 0x18, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x5f, 0x66, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x84, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x48, 0x00, 0x52, 0x16, 0x69, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x15,
	0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x85, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x13, 0x6c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3b, 0x0a, 0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0xe8, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52,
	0x0c, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x0c, 0x0a,
	0x0a, 0x73, 0x75, 0x62, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0xad, 0x04, 0x0a, 0x15,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x35, 0x0a, 0x03, 0x74, 0x61, 0x62, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x6f,
	0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x54, 0x61, 0x62, 0x48, 0x00, 0x52, 0x03, 0x74, 0x61, 0x62, 0x12, 0x41, 0x0a, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x3e, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46,
	0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12,
	0x35, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x48,
	0x00, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x3e, 0x0a, 0x06, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x48, 0x00, 0x52, 0x06,
	0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x01, 0x3a, 0x02, 0x2d, 0x31, 0x52, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x1a, 0x1c, 0x0a, 0x03, 0x54, 0x61, 0x62, 0x12, 0x15, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62,
	0x49, 0x64, 0x1a, 0x28, 0x0a, 0x07, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x25, 0x0a, 0x06,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x49, 0x64, 0x1a, 0x05, 0x0a, 0x03, 0x41, 0x70, 0x70, 0x1a, 0x24, 0x0a, 0x06, 0x4d, 0x65,
	0x74, 0x68, 0x6f, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72,
	0x42, 0x09, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x22, 0x8a, 0x03, 0x0a, 0x16,
	0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x12, 0x42, 0x0a, 0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49,
	0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x48, 0x00, 0x52,
	0x07, 0x73, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x1a, 0x69, 0x0a, 0x05, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x25, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x76, 0x6f, 0x6b,
	0x65, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x21, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x65, 0x61,
	0x73, 0x6f, 0x6e, 0x1a, 0x2a, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12, 0x1f,
	0x0a, 0x0b, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22,
	0x48, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x54, 0x49, 0x4d,
	0x45, 0x4f, 0x55, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x46, 0x41, 0x49, 0x4c, 0x45, 0x44,
	0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41,
	0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x03, 0x12, 0x0e, 0x0a, 0x0a, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x44, 0x10, 0x04, 0x42, 0x0d, 0x0a, 0x0b, 0x64, 0x69, 0x73,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xec, 0x02, 0x0a, 0x0c, 0x43, 0x6c, 0x6f,
	0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x62,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6c,
	0x6f, 0x73, 0x65, 0x54, 0x61, 0x62, 0x73, 0x48, 0x00, 0x52, 0x04, 0x74, 0x61, 0x62, 0x73, 0x12,
	0x40, 0x0a, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x08, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x3d, 0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x73,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x73, 0x48, 0x00, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73,
	0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x05, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x1a, 0x24, 0x0a, 0x09, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x54,
	0x61, 0x62, 0x73, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61, 0x62, 0x49, 0x64, 0x73, 0x1a, 0x30, 0x0a, 0x0d,
	0x43, 0x6c, 0x6f, 0x73, 0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x1a, 0x2d,
	0x0a, 0x0c, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x73, 0x42, 0x08, 0x0a,
	0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0x7d, 0x0a, 0x0d, 0x43, 0x6c, 0x6f, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6c, 0x6f, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x08, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x65, 0x73, 0x22, 0x32, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02,
	0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x55, 0x53, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x43, 0x4c,
	0x49, 0x4e, 0x45, 0x44, 0x10, 0x02, 0x22, 0x62, 0x0a, 0x1a, 0x53, 0x65, 0x74, 0x42, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x44, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63,
	0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xcf, 0x01, 0x0a, 0x1b, 0x53,
	0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69,
	0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x42, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x6c,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f,
	0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x22, 0x0a, 0x1e, 0x42, 0x52, 0x4f, 0x41, 0x44,
	0x43, 0x41, 0x53, 0x54, 0x5f, 0x44, 0x4f, 0x4d, 0x41, 0x49, 0x4e, 0x53, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x44, 0x49, 0x53, 0x4a, 0x4f, 0x49, 0x4e, 0x54, 0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x53,
	0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x53, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x53,
	0x41, 0x4d, 0x45, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x03, 0x22, 0xfe, 0x01, 0x0a,
	0x19, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x52, 0x0a, 0x0c, 0x6f, 0x70,
	0x65, 0x6e, 0x5f, 0x70, 0x6f, 0x70, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x2d, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x70, 0x6f, 0x76, 0x65, 0x72, 0x48,
	0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x70, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1e,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x1a, 0x62,
	0x0a, 0x0b, 0x4f, 0x70, 0x65, 0x6e, 0x50, 0x6f, 0x70, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x68, 0x74, 0x6d, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x74, 0x6d, 0x6c,
	0x12, 0x20, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xb7, 0x01,
	0x0a, 0x1a, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x41, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x56, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10,
	0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55,
	0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12,
	0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x46, 0x49, 0x45, 0x52, 0x10, 0x03, 0x22, 0x72, 0x0a, 0x12, 0x57, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x33, 0x0a,
	0x0b, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0a, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x12, 0x27, 0x0a, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x61, 0x6e,
	0x67, 0x65, 0x52, 0x07, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x73, 0x22, 0xb8, 0x01, 0x0a, 0x0c,
	0x53, 0x75, 0x62, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4c, 0x0a, 0x14,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x12, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x65, 0x64,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x3c, 0x0a, 0x0e, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x15, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x65, 0x64, 0x22, 0x48, 0x0a, 0x09, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x0e, 0x73, 0x75, 0x62, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x75, 0x62, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x73, 0x75, 0x62, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0x82, 0x03, 0x0a, 0x10, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x62, 0x0a, 0x15, 0x73, 0x65, 0x74,
	0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x53, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x34, 0x0a,
	0x13, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x1a, 0x65, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x09, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xdb, 0x03, 0x0a, 0x11, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x66, 0x0a, 0x16, 0x67, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x6c,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53,
	0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x67, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x66, 0x0a,
	0x16, 0x73, 0x65, 0x74, 0x5f, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x14, 0x73, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x1a, 0x47, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2f, 0x0a,
	0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x11, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0x16,
	0x0a, 0x14, 0x53, 0x65, 0x74, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4f, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x11, 0x0a,
	0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x02,
	0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x46,
	0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x03, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0xe3, 0x01, 0x0a, 0x12, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x0c, 0x6c, 0x69,
	0x73, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x26, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x70,
	0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x48, 0x00, 0x52, 0x09, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x1a, 0x0d,
	0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x1a, 0x1f, 0x0a,
	0x09, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x42, 0x09,
	0x0a, 0x07, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd4, 0x04, 0x0a, 0x13, 0x43, 0x6f,
	0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4c, 0x0a, 0x0c, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73,
	0x48, 0x00, 0x52, 0x0b, 0x6c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x73, 0x12,
	0x46, 0x0a, 0x0a, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x48, 0x00, 0x52, 0x09, 0x67, 0x65,
	0x74, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x1a, 0x21, 0x0a, 0x0b, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x1a, 0xfc, 0x01, 0x0a, 0x09, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x73, 0x65, 0x74, 0x12, 0x59, 0x0a, 0x0e, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x65,
	0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x32, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x73, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65,
	0x73, 0x65, 0x74, 0x2e, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x52, 0x0d, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73, 0x1a,
	0x93, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x03, 0x72,
	0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x05, 0x67, 0x72, 0x65, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x62, 0x6c, 0x75, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x04, 0x62, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x61, 0x6c, 0x70, 0x68, 0x61, 0x18, 0x04, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x61, 0x6c, 0x70,
	0x68, 0x61, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x5f, 0x73, 0x70, 0x61, 0x63,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x53, 0x70,
	0x61, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x3d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x52, 0x45, 0x53, 0x45,
	0x54, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a,
	0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d,
	0x45, 0x44, 0x10, 0x02, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xd0, 0x05, 0x0a, 0x12, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x52, 0x08, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x73, 0x1a, 0xf9, 0x04, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x68, 0x0a, 0x16, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x48, 0x00, 0x52, 0x14, 0x73, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x68, 0x0a,
	0x16, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x5f,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x30, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x48,
	0x00, 0x52, 0x14, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x75, 0x0a, 0x1b, 0x73, 0x65, 0x74, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x48, 0x00, 0x52, 0x18, 0x73, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74,
	0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x75,
	0x0a, 0x1b, 0x67, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65,
	0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75,
	0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x18, 0x67, 0x65, 0x74,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x40, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e,
	0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73,
	0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x21, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x1a, 0x27, 0x0a, 0x11, 0x53, 0x65,
	0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x67,
	0x75, 0x69, 0x64, 0x1a, 0x13, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x42, 0x09, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0xda, 0x08, 0x0a, 0x13, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x07, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x52, 0x07, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x1a, 0x84, 0x08, 0x0a, 0x06, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x12, 0x6a, 0x0a, 0x14, 0x75, 0x6e, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x55, 0x6e, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69,
	0x7a, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x75, 0x6e, 0x72,
	0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x6c, 0x0a, 0x15, 0x73, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x36, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65,
	0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x73, 0x65, 0x74, 0x50, 0x72,
	0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6c,
	0x0a, 0x15, 0x67, 0x65, 0x74, 0x5f, 0x70, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65,
	0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x36, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63,
	0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c,
	0x74, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x13, 0x67, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66,
	0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x79, 0x0a, 0x1a,
	0x73, 0x65, 0x74, 0x5f, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x3a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50,
	0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17,
	0x73, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x79, 0x0a, 0x1a, 0x67, 0x65, 0x74, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72,
	0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x3a, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x48, 0x00, 0x52, 0x17, 0x67, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x1a, 0x9f, 0x01, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x55, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3d, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x31, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x44, 0x5f, 0x4a, 0x53, 0x4f, 0x4e, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x56, 0x41, 0x4c,
	0x55, 0x45, 0x10, 0x02, 0x1a, 0x34, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x65, 0x66, 0x65,
	0x72, 0x65, 0x6e, 0x63, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x1a, 0x94, 0x01, 0x0a, 0x17, 0x53,
	0x65, 0x74, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x59, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x41, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x50, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e, 0x63, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x1e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x44, 0x5f, 0x47, 0x55, 0x49, 0x44, 0x10,
	0x01, 0x1a, 0x14, 0x0a, 0x12, 0x55, 0x6e, 0x72, 0x65, 0x63, 0x6f, 0x67, 0x6e, 0x69, 0x7a, 0x65,
	0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x1a, 0x2d, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x66, 0x61, 0x75, 0x6c, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x42, 0x08, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0xa1, 0x01, 0x0a, 0x12, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x61, 0x62, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x47, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x61, 0x62,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x1a, 0x42, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x74,
	0x61, 0x62, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x74, 0x61,
	0x62, 0x49, 0x64, 0x73, 0x22, 0xa6, 0x01, 0x0a, 0x13, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x54, 0x61, 0x62, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x61, 0x62,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x53, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x41, 0x53, 0x53, 0x49, 0x47, 0x4e, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x57, 0x49,
	0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x49, 0x44, 0x10, 0x03, 0x22, 0xf1, 0x04,
	0x0a, 0x0b, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x50, 0x0a,
	0x10, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x48, 0x00, 0x52, 0x0f,
	0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x44, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54,
	0x6d, 0x75, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x54, 0x0a, 0x12, 0x73, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x47, 0x0a, 0x0d, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x1a, 0x11, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e,
	0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x4c, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x1a, 0x6e, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1b,
	0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x76, 0x69,
	0x73, 0x69, 0x62, 0x6c, 0x65, 0x1a, 0x4f, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x66,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x66,
	0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61,
	0x64, 0x22, 0x8a, 0x06, 0x0a, 0x0c, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x51, 0x0a, 0x10, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x48, 0x00, 0x52, 0x0f, 0x6c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x45, 0x0a, 0x0c, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x63, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x48, 0x00, 0x52,
	0x0b, 0x73, 0x65, 0x6e, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x55, 0x0a, 0x12,
	0x73, 0x65, 0x74, 0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x76, 0x69, 0x73, 0x69, 0x62,
	0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53,
	0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x73, 0x69, 0x62, 0x6c, 0x65, 0x48,
	0x00, 0x52, 0x10, 0x73, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x12, 0x48, 0x0a, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x48, 0x00, 0x52,
	0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x33, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x1a, 0xc3, 0x01, 0x0a, 0x0f, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x51, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x6d, 0x75, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x63, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x5d, 0x0a, 0x0a, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x11,
	0x6f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x77, 0x6e, 0x69, 0x6e, 0x67, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x1a, 0x25, 0x0a, 0x0b, 0x53, 0x65, 0x6e, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x1a,
	0x12, 0x0a, 0x10, 0x53, 0x65, 0x74, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x56, 0x69, 0x73, 0x69,
	0x62, 0x6c, 0x65, 0x1a, 0x25, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x22, 0x57, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x10,
	0x01, 0x12, 0x19, 0x0a, 0x15, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x43, 0x4f, 0x4e,
	0x4e, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11,
	0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x49,
	0x44, 0x10, 0x03, 0x42, 0x09, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x1c,
	0x0a, 0x1a, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x32, 0x0a, 0x0f,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73,
	0x22, 0x63, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x44, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d,
	0x61, 0x69, 0x6e, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f,
	0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0x57, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x54, 0x61, 0x62, 0x4c,
	0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x29, 0x0a, 0x04,
	0x72, 0x6f, 0x6f, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x22, 0x97,
	0x01, 0x0a, 0x14, 0x53, 0x65, 0x74, 0x54, 0x61, 0x62, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x53, 0x65, 0x74, 0x54, 0x61, 0x62, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x22, 0x42, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06,
	0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x42, 0x41, 0x44, 0x5f, 0x54, 0x41,
	0x42, 0x5f, 0x49, 0x44, 0x10, 0x01, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x52, 0x4f, 0x4e, 0x47, 0x5f,
	0x54, 0x52, 0x45, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49,
	0x44, 0x5f, 0x53, 0x49, 0x5a, 0x45, 0x10, 0x03, 0x22, 0x50, 0x0a, 0x0f, 0x4d, 0x65, 0x6e, 0x75,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x69,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x71, 0x75, 0x65, 0x72, 0x79, 0x4f, 0x6e, 0x6c, 0x79, 0x22, 0xb3, 0x01, 0x0a, 0x10, 0x4d,
	0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1f, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x32, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12,
	0x0a, 0x0e, 0x42, 0x41, 0x44, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52,
	0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x49, 0x53, 0x41, 0x42, 0x4c, 0x45, 0x44, 0x10, 0x02,
	0x22, 0x5c, 0x0a, 0x15, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6f, 0x6e, 0x6c, 0x79,
	0x5f, 0x69, 0x66, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0c, 0x6f, 0x6e, 0x6c, 0x79, 0x49, 0x66, 0x45, 0x78, 0x69, 0x74, 0x65, 0x64, 0x22, 0x9d,
	0x01, 0x0a, 0x16, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x25, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x52, 0x65, 0x73, 0x74, 0x61, 0x72, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x44, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45,
	0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10,
	0x01, 0x12, 0x1b, 0x0a, 0x17, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54,
	0x5f, 0x52, 0x45, 0x53, 0x54, 0x41, 0x52, 0x54, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x02, 0x22, 0x95,
	0x01, 0x0a, 0x20, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61,
	0x74, 0x65, 0x64, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x27, 0x0a, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x65, 0x78, 0x63, 0x65, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0d, 0x6a, 0x73,
	0x6f, 0x6e, 0x45, 0x78, 0x63, 0x65, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0a, 0x6a,
	0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48,
	0x00, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x08, 0x0a, 0x06,
	0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x22, 0x23, 0x0a, 0x21, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x50, 0x43, 0x52, 0x65, 0x73,
	0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x13, 0x4c,
	0x69, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x67, 0x75, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x67, 0x75, 0x69, 0x64, 0x73, 0x22, 0x9c, 0x01, 0x0a, 0x14, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x40, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x1a, 0x42, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x37,
	0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66,
	0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x22, 0x0e, 0x0a, 0x0c, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x57, 0x0a, 0x0d, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x0d, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x0d, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x22, 0xb5, 0x01, 0x0a, 0x17, 0x53, 0x61, 0x76, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x26, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x61, 0x76, 0x65, 0x64, 0x41,
	0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x29, 0x0a,
	0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0b, 0x0a, 0x07, 0x52, 0x45, 0x53, 0x54, 0x4f,
	0x52, 0x45, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x53, 0x41, 0x56, 0x45, 0x10, 0x01, 0x12, 0x08,
	0x0a, 0x04, 0x4c, 0x49, 0x53, 0x54, 0x10, 0x02, 0x22, 0xcb, 0x01, 0x0a, 0x18, 0x53, 0x61, 0x76,
	0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3f, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53,
	0x61, 0x76, 0x65, 0x64, 0x41, 0x72, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x58, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x19,
	0x0a, 0x15, 0x41, 0x52, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x49, 0x4e,
	0x44, 0x4f, 0x57, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x02, 0x12,
	0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x46, 0x4f,
	0x52, 0x4d, 0x45, 0x44, 0x10, 0x03, 0x22, 0xf9, 0x01, 0x0a, 0x0f, 0x56, 0x61, 0x72, 0x69, 0x61,
	0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x06, 0x74,
	0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x03, 0x61, 0x70, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x48, 0x00, 0x52, 0x03, 0x61, 0x70, 0x70, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x2d, 0x0a, 0x03, 0x73, 0x65, 0x74, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65,
	0x74, 0x52, 0x03, 0x73, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x67, 0x65, 0x74, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x03, 0x67, 0x65, 0x74, 0x1a, 0x2f, 0x0a, 0x03, 0x53, 0x65, 0x74, 0x12,
	0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x07, 0x0a, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x22, 0xf5, 0x01, 0x0a, 0x10, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x8f, 0x01, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53,
	0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44,
	0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x02, 0x12, 0x11, 0x0a, 0x0d, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f,
	0x53, 0x43, 0x4f, 0x50, 0x45, 0x10, 0x03, 0x12, 0x11, 0x0a, 0x0d, 0x54, 0x41, 0x42, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x4d, 0x55,
	0x4c, 0x54, 0x49, 0x5f, 0x47, 0x45, 0x54, 0x5f, 0x44, 0x49, 0x53, 0x41, 0x4c, 0x4c, 0x4f, 0x57,
	0x45, 0x44, 0x10, 0x05, 0x12, 0x14, 0x0a, 0x10, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x06, 0x22, 0x8f, 0x03, 0x0a, 0x0f, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x48, 0x00, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52,
	0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x5f, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x66, 0x72, 0x6f, 0x6e, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x10, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x46, 0x72, 0x6f, 0x6e, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f,
	0x74, 0x61, 0x62, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x54, 0x61, 0x62, 0x12, 0x25, 0x0a, 0x0e, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x5f, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x3e, 0x0a, 0x0c, 0x61,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x5f, 0x61, 0x70, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x70, 0x70, 0x52, 0x0b,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x41, 0x70, 0x70, 0x1a, 0x61, 0x0a, 0x03, 0x41,
	0x70, 0x70, 0x12, 0x2a, 0x0a, 0x11, 0x72, 0x61, 0x69, 0x73, 0x65, 0x5f, 0x61, 0x6c, 0x6c, 0x5f,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x72,
	0x61, 0x69, 0x73, 0x65, 0x41, 0x6c, 0x6c, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x2e,
	0x0a, 0x13, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f, 0x6f, 0x74, 0x68, 0x65, 0x72,
	0x5f, 0x61, 0x70, 0x70, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x69, 0x67, 0x6e,
	0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4f, 0x74, 0x68, 0x65, 0x72, 0x41, 0x70, 0x70, 0x73, 0x42, 0x0c,
	0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x85, 0x01, 0x0a,
	0x10, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x37, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x1f, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x61, 0x74, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x38, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e,
	0x42, 0x41, 0x44, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x45, 0x52, 0x10, 0x01,
	0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4f, 0x50, 0x54, 0x49,
	0x4f, 0x4e, 0x10, 0x02, 0x22, 0x42, 0x0a, 0x0d, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x70, 0x0a, 0x0e, 0x49, 0x6e, 0x6a, 0x65,
	0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x49, 0x6e, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x27, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x76, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1d, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12,
	0x1f, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x42, 0x0c, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x22, 0xad, 0x01, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e,
	0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3b, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x52, 0x45, 0x43,
	0x4f, 0x47, 0x4e, 0x49, 0x5a, 0x45, 0x44, 0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x12,
	0x0a, 0x0e, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54,
	0x10, 0x02, 0x22, 0x95, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72,
	0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x09, 0x77, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x08,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x09,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a,
	0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x42, 0x0c, 0x0a, 0x0a,
	0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0xcb, 0x01, 0x0a, 0x13, 0x53,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x3a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x78,
	0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00,
	0x12, 0x15, 0x0a, 0x11, 0x55, 0x4e, 0x52, 0x45, 0x43, 0x4f, 0x47, 0x4e, 0x49, 0x5a, 0x45, 0x44,
	0x5f, 0x4e, 0x41, 0x4d, 0x45, 0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x49, 0x4e, 0x56, 0x41, 0x4c,
	0x49, 0x44, 0x5f, 0x56, 0x41, 0x4c, 0x55, 0x45, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x52, 0x47, 0x45, 0x54, 0x10, 0x03, 0x12, 0x0c,
	0x0a, 0x08, 0x44, 0x45, 0x46, 0x45, 0x52, 0x52, 0x45, 0x44, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a,
	0x49, 0x4d, 0x50, 0x4f, 0x53, 0x53, 0x49, 0x42, 0x4c, 0x45, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06,
	0x46, 0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0x06, 0x22, 0x94, 0x02, 0x0a, 0x13, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x12, 0x46, 0x0a, 0x1c, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x5f, 0x69,
	0x66, 0x5f, 0x61, 0x6c, 0x72, 0x65, 0x61, 0x64, 0x79, 0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c, 0x73,
	0x65, 0x52, 0x19, 0x72, 0x65, 0x76, 0x65, 0x61, 0x6c, 0x49, 0x66, 0x41, 0x6c, 0x72, 0x65, 0x61,
	0x64, 0x79, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x65, 0x64, 0x12, 0x50, 0x0a, 0x09,
	0x74, 0x6f, 0x6f, 0x6c, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65,
	0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x54, 0x6f, 0x6f,
	0x6c, 0x54, 0x79, 0x70, 0x65, 0x3a, 0x0d, 0x57, 0x45, 0x42, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f,
	0x54, 0x4f, 0x4f, 0x4c, 0x52, 0x08, 0x74, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10,
	0x0a, 0x03, 0x55, 0x52, 0x4c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c,
	0x22, 0x1d, 0x0a, 0x08, 0x54, 0x6f, 0x6f, 0x6c, 0x54, 0x79, 0x70, 0x65, 0x12, 0x11, 0x0a, 0x0d,
	0x57, 0x45, 0x42, 0x5f, 0x56, 0x49, 0x45, 0x57, 0x5f, 0x54, 0x4f, 0x4f, 0x4c, 0x10, 0x01, 0x22,
	0xd9, 0x0f, 0x0a, 0x16, 0x52, 0x50, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x51,
	0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x33, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x50, 0x43, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x12, 0x46, 0x0a, 0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x52, 0x50, 0x43, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x08, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x69, 0x6d,
	0x65, 0x6f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x12, 0x40, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x2e, 0x52, 0x6f, 0x6c, 0x65, 0x3a, 0x07, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49, 0x43, 0x52,
	0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x71, 0x0a, 0x18, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x5f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x74, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00,
	0x52, 0x16, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x84, 0x01, 0x0a, 0x1f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x5f, 0x62, 0x61, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x5f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x3b, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48,
	0x00, 0x52, 0x1c, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x6e, 0x0a, 0x17, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x5f,
	0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x34, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x67,
	0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x74, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x48, 0x00, 0x52, 0x15, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78,
	0x74, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12,
	0x25, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x1a, 0x2a, 0x0a, 0x14, 0x52, 0x50, 0x43, 0x41, 0x72, 0x67,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x1a, 0x35, 0x0a, 0x0b, 0x52, 0x50, 0x43, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x1a, 0x68, 0x0a, 0x16, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x1a, 0xfe, 0x06, 0x0a, 0x1c, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x11, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x10, 0x73, 0x68, 0x6f, 0x72, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x31, 0x0a, 0x14, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x5f, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x56, 0x0a, 0x05, 0x6b, 0x6e, 0x6f, 0x62, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73,
	0x2e, 0x4b, 0x6e, 0x6f, 0x62, 0x52, 0x05, 0x6b, 0x6e, 0x6f, 0x62, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x65, 0x78, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x65, 0x78, 0x65, 0x6d, 0x70, 0x6c, 0x61, 0x72, 0x12, 0x25, 0x0a, 0x0e, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x5f, 0x63, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x0d, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x43, 0x61, 0x64, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x56, 0x0a, 0x05,
	0x69, 0x63, 0x6f, 0x6e, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x40, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x74,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x2e, 0x49, 0x63, 0x6f, 0x6e, 0x52, 0x05, 0x69,
	0x63, 0x6f, 0x6e, 0x73, 0x12, 0x66, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x42, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50,
	0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61, 0x72, 0x43, 0x6f,
	0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65,
	0x73, 0x2e, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x3a, 0x0a, 0x50, 0x4c, 0x41, 0x49, 0x4e, 0x5f,
	0x54, 0x45, 0x58, 0x54, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x1a, 0x9f, 0x02, 0x0a,
	0x04, 0x4b, 0x6e, 0x6f, 0x62, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x59, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x45, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x61,
	0x72, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62,
	0x75, 0x74, 0x65, 0x73, 0x2e, 0x4b, 0x6e, 0x6f, 0x62, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x12, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x64,
	0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x6a, 0x73, 0x6f, 0x6e, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x46, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0c,
	0x0a, 0x08, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x10, 0x02, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x76, 0x65, 0x46, 0x6c, 0x6f, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x10, 0x03, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x10, 0x04, 0x1a, 0x30,
	0x0a, 0x04, 0x49, 0x63, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x63,
	0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x02, 0x52, 0x05, 0x73, 0x63, 0x61, 0x6c, 0x65,
	0x22, 0x22, 0x0a, 0x06, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4c,
	0x41, 0x49, 0x4e, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x10, 0x00, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x54,
	0x4d, 0x4c, 0x10, 0x01, 0x1a, 0x67, 0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x4d,
	0x65, 0x6e, 0x75, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x12, 0x21, 0x0a,
	0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x11, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74,
	0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x6e, 0x69,
	0x71, 0x75, 0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x52, 0x0a,
	0x04, 0x52, 0x6f, 0x6c, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x47, 0x45, 0x4e, 0x45, 0x52, 0x49, 0x43,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x54, 0x49,
	0x54, 0x4c, 0x45, 0x10, 0x02, 0x12, 0x18, 0x0a, 0x14, 0x53, 0x54, 0x41, 0x54, 0x55, 0x53, 0x5f,
	0x42, 0x41, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x50, 0x4f, 0x4e, 0x45, 0x4e, 0x54, 0x10, 0x03, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x4e, 0x54, 0x45, 0x58, 0x54, 0x5f, 0x4d, 0x45, 0x4e, 0x55, 0x10,
	0x04, 0x42, 0x18, 0x0a, 0x16, 0x52, 0x6f, 0x6c, 0x65, 0x53, 0x70, 0x65, 0x63, 0x69, 0x66, 0x69,
	0x63, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x73, 0x22, 0x93, 0x01, 0x0a, 0x14,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x23, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x22, 0x3e, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d,
	0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x45,
	0x52, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x45, 0x4e, 0x49, 0x45, 0x44, 0x10,
	0x02, 0x22, 0x98, 0x02, 0x0a, 0x10, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50,
	0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x12, 0x40, 0x0a, 0x12, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72,
	0x65, 0x64, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0e, 0x32, 0x11, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x69,
	0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x11, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x62,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x5f, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x62, 0x69, 0x64,
	0x64, 0x65, 0x6e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x6b, 0x65, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x05, 0x52, 0x08,
	0x6b, 0x65, 0x79, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x68,
	0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x42, 0x0a, 0x1d, 0x63, 0x68, 0x61, 0x72,
	0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x5f,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x1b, 0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x49, 0x67, 0x6e, 0x6f, 0x72,
	0x69, 0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0x81, 0x01, 0x0a,
	0x17, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4a, 0x0a, 0x12, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65, 0x18, 0x01,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4b, 0x65,
	0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x42, 0x02,
	0x18, 0x01, 0x52, 0x10, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x54, 0x6f, 0x49, 0x67,
	0x6e, 0x6f, 0x72, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x61, 0x64, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x64,
	0x22, 0x60, 0x0a, 0x16, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x12, 0x70, 0x61,
	0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x5f, 0x74, 0x6f, 0x5f, 0x69, 0x67, 0x6e, 0x6f, 0x72, 0x65,
	0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x50, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e,
	0x52, 0x10, 0x70, 0x61, 0x74, 0x74, 0x65, 0x72, 0x6e, 0x73, 0x54, 0x6f, 0x49, 0x67, 0x6e, 0x6f,
	0x72, 0x65, 0x22, 0x79, 0x0a, 0x16, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f,
	0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x2b, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x15, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c,
	0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x22, 0x2a, 0x0a,
	0x14, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0x47, 0x0a, 0x14, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x2f, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0e,
	0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74,
	0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x05, 0x6d, 0x6f, 0x64,
	0x65, 0x73, 0x22, 0xc0, 0x05, 0x0a, 0x13, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x45, 0x0a, 0x11, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x10, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x5a, 0x0a, 0x18, 0x72, 0x70, 0x63,
	0x5f, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x52, 0x50, 0x43, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x72,
	0x70, 0x63, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5d, 0x0a, 0x19, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f,
	0x6b, 0x65, 0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x17, 0x6b, 0x65, 0x79,
	0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x18, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x6d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x54, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00,
	0x52, 0x14, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x5a, 0x0a, 0x18, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x16, 0x6b, 0x65, 0x79, 0x73,
	0x74, 0x72, 0x6f, 0x6b, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x54, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x6d, 0x6f, 0x6e,
	0x69, 0x74, 0x6f, 0x72, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x14, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x42, 0x0b, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x22, 0xfd, 0x01, 0x0a, 0x14, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3b,
	0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x23,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xa7, 0x01, 0x0a, 0x06,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15,
	0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f,
	0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54,
	0x5f, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x02, 0x12, 0x12, 0x0a, 0x0e,
	0x4e, 0x4f, 0x54, 0x5f, 0x53, 0x55, 0x42, 0x53, 0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x03,
	0x12, 0x16, 0x0a, 0x12, 0x41, 0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x53, 0x55, 0x42, 0x53,
	0x43, 0x52, 0x49, 0x42, 0x45, 0x44, 0x10, 0x04, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x55, 0x50, 0x4c,
	0x49, 0x43, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x4f, 0x52, 0x49,
	0x47, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x50, 0x43, 0x10, 0x05, 0x12, 0x16, 0x0a,
	0x12, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46,
	0x49, 0x45, 0x52, 0x10, 0x06, 0x22, 0xab, 0x0a, 0x0a, 0x0c, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x54, 0x0a, 0x16, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x15, 0x6b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x1a,
	0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x18, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4b, 0x0a, 0x13,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x68, 0x0a, 0x1c, 0x6c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x5f, 0x6e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x42, 0x02, 0x18, 0x01, 0x52, 0x1a, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x77, 0x0a, 0x23, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x65, 0x73,
	0x63, 0x61, 0x70, 0x65, 0x5f, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x5f, 0x6e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x28, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x75, 0x73, 0x74, 0x6f, 0x6d,
	0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x20, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65,
	0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x58, 0x0a, 0x18,
	0x6e, 0x65, 0x77, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4e, 0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x16,
	0x6e, 0x65, 0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x6a, 0x0a, 0x1e, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e,
	0x61, 0x74, 0x65, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x6e, 0x6f, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1c, 0x74, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x53,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x61, 0x0a, 0x1b, 0x6c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x5f, 0x63, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x19, 0x6c, 0x61, 0x79, 0x6f,
	0x75, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x5e, 0x0a, 0x1a, 0x66, 0x6f, 0x63, 0x75, 0x73, 0x5f, 0x63,
	0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x18, 0x66, 0x6f, 0x63,
	0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x74, 0x0a, 0x22, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x5f,
	0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x70, 0x63, 0x5f, 0x6e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x50, 0x43, 0x4e, 0x6f,
	0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1f, 0x73, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x70, 0x63, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x67, 0x0a, 0x19, 0x62,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2b,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e,
	0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x17, 0x62, 0x72, 0x6f,
	0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x12, 0x67, 0x0a, 0x1d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x1b, 0x76, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x64, 0x0a,
	0x1c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64,
	0x5f, 0x6e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x1a, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x30, 0x0a, 0x1a, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x68,
	0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x67, 0x75, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x67, 0x75, 0x69, 0x64, 0x22, 0xa4, 0x01, 0x0a, 0x1b, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62,
	0x6c, 0x65, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2b, 0x0a, 0x05, 0x73, 0x63, 0x6f, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x56, 0x61,
	0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x53, 0x63, 0x6f, 0x70, 0x65, 0x52, 0x05, 0x73, 0x63, 0x6f,
	0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69,
	0x65, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0e, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x6e,
	0x65, 0x77, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x6a, 0x73, 0x6f, 0x6e, 0x4e, 0x65, 0x77, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6b, 0x0a, 0x23,
	0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x44, 0x0a, 0x11, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74,
	0x5f, 0x64, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x42, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73,
	0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x52, 0x10, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61,
	0x73, 0x74, 0x44, 0x6f, 0x6d, 0x61, 0x69, 0x6e, 0x73, 0x22, 0xb2, 0x01, 0x0a, 0x13, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x50,
	0x43, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x45, 0x0a, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x27, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x50, 0x43, 0x2e, 0x52, 0x50, 0x43, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x09, 0x61, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x1a, 0x40, 0x0a, 0x0b,
	0x52, 0x50, 0x43, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x6f,
	0x0a, 0x1f, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x61, 0x74,
	0x65, 0x64, 0x52, 0x50, 0x43, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x49, 0x64,
	0x12, 0x2d, 0x0a, 0x03, 0x72, 0x70, 0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4f, 0x72, 0x69,
	0x67, 0x69, 0x6e, 0x61, 0x74, 0x65, 0x64, 0x52, 0x50, 0x43, 0x52, 0x03, 0x72, 0x70, 0x63, 0x22,
	0xd3, 0x02, 0x0a, 0x15, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x72, 0x6f, 0x6b, 0x65, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x12, 0x40, 0x0a, 0x1b, 0x63, 0x68, 0x61,
	0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x69, 0x6e, 0x67, 0x4d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b,
	0x63, 0x68, 0x61, 0x72, 0x61, 0x63, 0x74, 0x65, 0x72, 0x73, 0x49, 0x67, 0x6e, 0x6f, 0x72, 0x69,
	0x6e, 0x67, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x2f, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x11,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x73, 0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x6b, 0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6b,
	0x65, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x3c, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4b, 0x65, 0x79, 0x73, 0x74, 0x72,
	0x6f, 0x6b, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x35,
	0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x45, 0x59, 0x5f,
	0x44, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0a, 0x0a, 0x06, 0x4b, 0x45, 0x59, 0x5f, 0x55, 0x50,
	0x10, 0x01, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x4c, 0x41, 0x47, 0x53, 0x5f, 0x43, 0x48, 0x41, 0x4e,
	0x47, 0x45, 0x44, 0x10, 0x02, 0x22, 0x34, 0x0a, 0x18, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x6f, 0x0a, 0x18, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x6c, 0x61, 0x63, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c,
	0x61, 0x63, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x31, 0x0a, 0x06, 0x70, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x22, 0x3a, 0x0a, 0x1e,
	0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x22, 0x36, 0x0a, 0x1c, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x22, 0xb5, 0x02, 0x0a, 0x12, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x3a, 0x0a, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x6d, 0x70, 0x74, 0x48, 0x00, 0x52, 0x06, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x12, 0x4d, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x48, 0x00, 0x52, 0x0c,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x47, 0x0a, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x45, 0x6e, 0x64, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x45, 0x6e, 0x64, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x42,
	0x07, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x22, 0x8e, 0x01, 0x0a, 0x1a, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x6f, 0x73, 0x74, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x7f, 0x0a, 0x20, 0x43, 0x75, 0x73,
	0x74, 0x6f, 0x6d, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x6e, 0x64, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x74, 0x79,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x37, 0x0a, 0x16, 0x4e, 0x65,
	0x77, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0xcd, 0x03, 0x0a, 0x18, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x68, 0x61,
	0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x2f, 0x0a, 0x12, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x11,
	0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x63, 0x74, 0x69, 0x76,
	0x65, 0x12, 0x41, 0x0a, 0x06, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x27, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73,
	0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x48, 0x00, 0x52, 0x06, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x12, 0x23, 0x0a, 0x0c, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x5f, 0x74, 0x61, 0x62, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x73, 0x65,
	0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x54, 0x61, 0x62, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x1a, 0xf2, 0x01, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x12, 0x59, 0x0a, 0x0d, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x34, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x46, 0x6f, 0x63, 0x75, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x0c, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x45, 0x52, 0x4d,
	0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x42, 0x45, 0x43, 0x41,
	0x4d, 0x45, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x54, 0x45, 0x52, 0x4d,
	0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x49, 0x53, 0x5f, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x54, 0x10, 0x01, 0x12, 0x20, 0x0a, 0x1c, 0x54, 0x45, 0x52, 0x4d,
	0x49, 0x4e, 0x41, 0x4c, 0x5f, 0x57, 0x49, 0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x52, 0x45, 0x53, 0x49,
	0x47, 0x4e, 0x45, 0x44, 0x5f, 0x4b, 0x45, 0x59, 0x10, 0x02, 0x42, 0x07, 0x0a, 0x05, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x22, 0x3d, 0x0a, 0x1c, 0x54, 0x65, 0x72, 0x6d, 0x69, 0x6e, 0x61, 0x74, 0x65,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x22, 0x6f, 0x0a, 0x19, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x43, 0x68, 0x61, 0x6e,
	0x67, 0x65, 0x64, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x52, 0x0a, 0x16, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x14, 0x6c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x5e, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x0a, 0x0a, 0x6c, 0x69, 0x6e, 0x65, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c,
	0x69, 0x6e, 0x65, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x09, 0x6c, 0x69, 0x6e, 0x65, 0x52, 0x61,
	0x6e, 0x67, 0x65, 0x22, 0xb2, 0x03, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x02, 0x4f, 0x4b, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x27, 0x0a, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x42, 0x02, 0x18, 0x01, 0x52, 0x05, 0x72, 0x61, 0x6e, 0x67, 0x65,
	0x12, 0x30, 0x0a, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x6e, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x08, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x73, 0x12, 0x25, 0x0a, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x52, 0x06, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x12, 0x37, 0x0a, 0x16, 0x6e, 0x75, 0x6d,
	0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x5f, 0x61, 0x62, 0x6f, 0x76, 0x65, 0x5f, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x42, 0x02, 0x18, 0x01, 0x52, 0x13, 0x6e,
	0x75, 0x6d, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x41, 0x62, 0x6f, 0x76, 0x65, 0x53, 0x63, 0x72, 0x65,
	0x65, 0x6e, 0x12, 0x4c, 0x0a, 0x14, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63,
	0x6f, 0x6f, 0x72, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x12, 0x77, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65,
	0x22, 0x56, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f,
	0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x52, 0x41, 0x4e, 0x47, 0x45, 0x10,
	0x02, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c,
	0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10, 0x03, 0x22, 0x56, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x49, 0x64,
	0x22, 0xd7, 0x04, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3c, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x02, 0x4f, 0x4b, 0x52, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b,
	0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0d, 0x63,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6f, 0x72,
	0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x52,
	0x61, 0x6e, 0x67, 0x65, 0x12, 0x35, 0x0a, 0x0c, 0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x5f, 0x72,
	0x61, 0x6e, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x0b,
	0x6f, 0x75, 0x74, 0x70, 0x75, 0x74, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x2b, 0x0a, 0x11, 0x77,
	0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x77, 0x6f, 0x72, 0x6b, 0x69, 0x6e, 0x67, 0x44,
	0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x42, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x69, 0x74, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x65, 0x78, 0x69,
	0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x49,
	0x64, 0x22, 0x56, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x5f, 0x55, 0x4e, 0x41, 0x56,
	0x41, 0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x03, 0x22, 0x2f, 0x0a, 0x05, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x44, 0x49, 0x54, 0x49, 0x4e, 0x47, 0x10, 0x00, 0x12,
	0x0b, 0x0a, 0x07, 0x52, 0x55, 0x4e, 0x4e, 0x49, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x46, 0x49, 0x4e, 0x49, 0x53, 0x48, 0x45, 0x44, 0x10, 0x02, 0x22, 0x7c, 0x0a, 0x12, 0x4c, 0x69,
	0x73, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0f, 0x66, 0x69,
	0x72, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x55, 0x6e, 0x69, 0x71, 0x75, 0x65,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x49, 0x64, 0x22, 0xa8, 0x01, 0x0a, 0x13, 0x4c, 0x69, 0x73,
	0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x50, 0x72,
	0x6f, 0x6d, 0x70, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x3a, 0x02, 0x4f, 0x4b, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x28, 0x0a, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x75, 0x6e, 0x69, 0x71,
	0x75, 0x65, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x49, 0x64, 0x22, 0x27, 0x0a, 0x06, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11,
	0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e,
	0x44, 0x10, 0x01, 0x22, 0x49, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x6b, 0x65,
	0x79, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x6b, 0x65, 0x79, 0x73, 0x22, 0x42,
	0x0a, 0x0f, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0xe7, 0x01, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x45, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x29, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x02, 0x4f, 0x4b,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x37, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x0a, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65,
	0x73, 0x22, 0x49, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x45,
	0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x03, 0x22, 0xee, 0x02, 0x0a,
	0x19, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x49, 0x0a, 0x09, 0x67, 0x75, 0x69, 0x64, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f,
	0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x47, 0x75, 0x69,
	0x64, 0x4c, 0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x08, 0x67, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x4e, 0x0a, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65,
	0x72, 0x74, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x41, 0x73, 0x73, 0x69, 0x67,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0b, 0x61, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x1a, 0x20, 0x0a, 0x08, 0x47, 0x75, 0x69, 0x64, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x14,
	0x0a, 0x05, 0x67, 0x75, 0x69, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x67,
	0x75, 0x69, 0x64, 0x73, 0x1a, 0x3d, 0x0a, 0x0a, 0x41, 0x73, 0x73, 0x69, 0x67, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x1d, 0x0a, 0x0a, 0x6a, 0x73, 0x6f, 0x6e, 0x5f, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6a, 0x73, 0x6f, 0x6e, 0x56, 0x61,
	0x6c, 0x75, 0x65, 0x42, 0x08, 0x0a, 0x06, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x22, 0xb1, 0x01,
	0x0a, 0x1a, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70,
	0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x45, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x02, 0x4f, 0x4b, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0x4c, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a,
	0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x15, 0x0a, 0x11,
	0x52, 0x45, 0x51, 0x55, 0x45, 0x53, 0x54, 0x5f, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52, 0x4d, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x41, 0x44, 0x5f, 0x47, 0x55, 0x49, 0x44, 0x10,
	0x03, 0x22, 0x2a, 0x0a, 0x12, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x62, 0x65, 0x67, 0x69, 0x6e, 0x22, 0x97, 0x01,
	0x0a, 0x13, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3e, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x3a, 0x02, 0x4f, 0x4b, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x40, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x4e, 0x4f, 0x5f, 0x54, 0x52,
	0x41, 0x4e, 0x53, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x41,
	0x4c, 0x52, 0x45, 0x41, 0x44, 0x59, 0x5f, 0x49, 0x4e, 0x5f, 0x54, 0x52, 0x41, 0x4e, 0x53, 0x41,
	0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x02, 0x22, 0xb2, 0x01, 0x0a, 0x09, 0x4c, 0x69, 0x6e, 0x65,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x30, 0x0a, 0x14, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x5f,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x6f, 0x6e, 0x6c, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x4f, 0x6e, 0x6c, 0x79, 0x12, 0x25, 0x0a, 0x0e, 0x74, 0x72, 0x61, 0x69, 0x6c,
	0x69, 0x6e, 0x67, 0x5f, 0x6c, 0x69, 0x6e, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0d, 0x74, 0x72, 0x61, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x69, 0x6e, 0x65, 0x73, 0x12, 0x4c,
	0x0a, 0x14, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x6f, 0x72, 0x64,
	0x5f, 0x72, 0x61, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x65, 0x64, 0x43, 0x6f,
	0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x52, 0x12, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x65, 0x64, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x22, 0x3b, 0x0a, 0x05,
	0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x16, 0x0a, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x6c, 0x65, 0x6e, 0x67, 0x74, 0x68, 0x22, 0x52, 0x0a, 0x0a, 0x43, 0x6f, 0x6f,
	0x72, 0x64, 0x52, 0x61, 0x6e, 0x67, 0x65, 0x12, 0x23, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x1f, 0x0a, 0x03,
	0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x52, 0x03, 0x65, 0x6e, 0x64, 0x22, 0x23, 0x0a,
	0x05, 0x43, 0x6f, 0x6f, 0x72, 0x64, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x01, 0x79, 0x22, 0x92, 0x02, 0x0a, 0x0c, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x4a, 0x0a, 0x14, 0x63, 0x6f, 0x64, 0x65, 0x5f,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x65, 0x72, 0x5f, 0x63, 0x65, 0x6c, 0x6c, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x43,
	0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c,
	0x52, 0x11, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43,
	0x65, 0x6c, 0x6c, 0x12, 0x5c, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x21, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x15, 0x43, 0x4f,
	0x4e, 0x54, 0x49, 0x4e, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x48, 0x41, 0x52, 0x44, 0x5f,
	0x45, 0x4f, 0x4c, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x22, 0x44, 0x0a, 0x0c, 0x43, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x48, 0x41, 0x52, 0x44, 0x5f, 0x45, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x19, 0x0a, 0x15,
	0x43, 0x4f, 0x4e, 0x54, 0x49, 0x4e, 0x55, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x4f, 0x46,
	0x54, 0x5f, 0x45, 0x4f, 0x4c, 0x10, 0x02, 0x22, 0x58, 0x0a, 0x11, 0x43, 0x6f, 0x64, 0x65, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x73, 0x50, 0x65, 0x72, 0x43, 0x65, 0x6c, 0x6c, 0x12, 0x29, 0x0a, 0x0f,
	0x6e, 0x75, 0x6d, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0d, 0x6e, 0x75, 0x6d, 0x43, 0x6f, 0x64,
	0x65, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x72, 0x65, 0x70, 0x65, 0x61,
	0x74, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74,
	0x73, 0x22, 0x15, 0x0a, 0x13, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x6e, 0x0a, 0x0f, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x75, 0x70,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x5f, 0x62, 0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x73, 0x75, 0x70, 0x70, 0x72, 0x65, 0x73, 0x73, 0x42,
	0x72, 0x6f, 0x61, 0x64, 0x63, 0x61, 0x73, 0x74, 0x22, 0x74, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64,
	0x54, 0x65, 0x78, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x37, 0x0a, 0x06,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x27, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x22, 0x34,
	0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06,
	0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x22, 0x23, 0x0a, 0x05, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x12, 0x0c, 0x0a,
	0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x01, 0x79, 0x22, 0x50, 0x0a, 0x05, 0x46, 0x72, 0x61,
	0x6d, 0x65, 0x12, 0x25, 0x0a, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x52, 0x06, 0x6f, 0x72, 0x69, 0x67, 0x69, 0x6e, 0x12, 0x20, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x53, 0x69, 0x7a, 0x65, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xa3, 0x01, 0x0a, 0x0e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x2b,
	0x0a, 0x11, 0x75, 0x6e, 0x69, 0x71, 0x75, 0x65, 0x5f, 0x69, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66,
	0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x75, 0x6e, 0x69, 0x71, 0x75,
	0x65, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x05, 0x66,
	0x72, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74, 0x65,
	0x72, 0x6d, 0x32, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d, 0x65,
	0x12, 0x29, 0x0a, 0x09, 0x67, 0x72, 0x69, 0x64, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x69, 0x7a,
	0x65, 0x52, 0x08, 0x67, 0x72, 0x69, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0xe1, 0x01, 0x0a, 0x0d, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4e,
	0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x76, 0x65, 0x72, 0x74, 0x69, 0x63, 0x61, 0x6c, 0x12,
	0x39, 0x0a, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23,
	0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x72, 0x65,
	0x65, 0x4e, 0x6f, 0x64, 0x65, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4c,
	0x69, 0x6e, 0x6b, 0x52, 0x05, 0x6c, 0x69, 0x6e, 0x6b, 0x73, 0x1a, 0x79, 0x0a, 0x0d, 0x53, 0x70,
	0x6c, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x32, 0x0a, 0x07, 0x73,
	0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69,
	0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x48, 0x00, 0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x72, 0x65, 0x65,
	0x4e, 0x6f, 0x64, 0x65, 0x48, 0x00, 0x52, 0x04, 0x6e, 0x6f, 0x64, 0x65, 0x42, 0x07, 0x0a, 0x05,
	0x63, 0x68, 0x69, 0x6c, 0x64, 0x22, 0x96, 0x04, 0x0a, 0x14, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x23, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x57, 0x69,
	0x6e, 0x64, 0x6f, 0x77, 0x52, 0x07, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x73, 0x12, 0x3f, 0x0a,
	0x0f, 0x62, 0x75, 0x72, 0x69, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e,
	0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e,
	0x62, 0x75, 0x72, 0x69, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x1a, 0x98,
	0x01, 0x0a, 0x06, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x12, 0x34, 0x0a, 0x04, 0x74, 0x61, 0x62,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32,
	0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x54, 0x61, 0x62, 0x52, 0x04, 0x74, 0x61, 0x62, 0x73, 0x12,
	0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x05,
	0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x69, 0x74,
	0x65, 0x72, 0x6d, 0x32, 0x2e, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x52, 0x05, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x1a, 0xe2, 0x01, 0x0a, 0x03, 0x54, 0x61,
	0x62, 0x12, 0x29, 0x0a, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x54, 0x72,
	0x65, 0x65, 0x4e, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x72, 0x6f, 0x6f, 0x74, 0x12, 0x15, 0x0a, 0x06,
	0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x61,
	0x62, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0e, 0x74, 0x6d, 0x75, 0x78, 0x5f, 0x77, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x6d, 0x75,
	0x78, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x74, 0x6d, 0x75,
	0x78, 0x5f, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x74, 0x6d, 0x75, 0x78, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x45, 0x0a, 0x12, 0x6d, 0x69, 0x6e, 0x69, 0x6d,
	0x69, 0x7a, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x11, 0x6d, 0x69, 0x6e,
	0x69, 0x6d, 0x69, 0x7a, 0x65, 0x64, 0x53, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe2,
	0x01, 0x0a, 0x10, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f,
	0x77, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x74, 0x61, 0x62, 0x49, 0x6e, 0x64, 0x65, 0x78,
	0x12, 0x1c, 0x0a, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x02, 0x18, 0x01, 0x52, 0x07, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x12, 0x53,
	0x0a, 0x19, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69,
	0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x17, 0x63, 0x75, 0x73, 0x74,
	0x6f, 0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74,
	0x69, 0x65, 0x73, 0x22, 0x94, 0x02, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61,
	0x62, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72,
	0x6d, 0x32, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x61, 0x62, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x77, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x49, 0x64,
	0x12, 0x15, 0x0a, 0x06, 0x74, 0x61, 0x62, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x74, 0x61, 0x62, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x06, 0x0a, 0x02, 0x4f, 0x4b, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e, 0x56, 0x41,
	0x4c, 0x49, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x41, 0x4d, 0x45,
	0x10, 0x01, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x57, 0x49,
	0x4e, 0x44, 0x4f, 0x57, 0x5f, 0x49, 0x44, 0x10, 0x02, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x56,
	0x41, 0x4c, 0x49, 0x44, 0x5f, 0x54, 0x41, 0x42, 0x5f, 0x49, 0x4e, 0x44, 0x45, 0x58, 0x10, 0x03,
	0x12, 0x18, 0x0a, 0x14, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x53, 0x55, 0x42, 0x53,
	0x54, 0x49, 0x54, 0x55, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x04, 0x22, 0xc5, 0x02, 0x0a, 0x10, 0x53,
	0x70, 0x6c, 0x69, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x50, 0x0a, 0x0f, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x5f, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x27, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69,
	0x74, 0x50, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x53, 0x70, 0x6c,
	0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x73, 0x70, 0x6c,
	0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x06, 0x62,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x05, 0x66, 0x61, 0x6c,
	0x73, 0x65, 0x52, 0x06, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72,
	0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x53, 0x0a,
	0x19, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f, 0x70, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x70, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x17, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d, 0x32, 0x2e, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c,
	0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x79, 0x52, 0x17, 0x63, 0x75, 0x73, 0x74, 0x6f,
	0x6d, 0x50, 0x72, 0x6f, 0x66, 0x69, 0x6c, 0x65, 0x50, 0x72, 0x6f, 0x70, 0x65, 0x72, 0x74, 0x69,
	0x65, 0x73, 0x22, 0x2e, 0x0a, 0x0e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x69, 0x72, 0x65, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x56, 0x45, 0x52, 0x54, 0x49, 0x43, 0x41, 0x4c,
	0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x48, 0x4f, 0x52, 0x49, 0x5a, 0x4f, 0x4e, 0x54, 0x41, 0x4c,
	0x10, 0x01, 0x22, 0xe8, 0x01, 0x0a, 0x11, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x50, 0x61, 0x6e, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x20, 0x2e, 0x69, 0x74, 0x65, 0x72, 0x6d,
	0x32, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x50, 0x61, 0x6e, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x22, 0x7a, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x06, 0x0a, 0x02, 0x4f,
	0x4b, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x5f, 0x4e,
	0x4f, 0x54, 0x5f, 0x46, 0x4f, 0x55, 0x4e, 0x44, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x49, 0x4e,
	0x56, 0x41, 0x4c, 0x49, 0x44, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49, 0x4c, 0x45, 0x5f, 0x4e, 0x41,
	0x4d, 0x45, 0x10, 0x02, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x41, 0x4e, 0x4e, 0x4f, 0x54, 0x5f, 0x53,
	0x50, 0x4c, 0x49, 0x54, 0x10, 0x03, 0x12, 0x25, 0x0a, 0x21, 0x4d, 0x41, 0x4c, 0x46, 0x4f, 0x52,
	0x4d, 0x45, 0x44, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x49,
	0x4c, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x50, 0x45, 0x52, 0x54, 0x59, 0x10, 0x04, 0x2a, 0x56, 0x0a,
	0x0d, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x43, 0x48, 0x41, 0x52, 0x41, 0x43, 0x54, 0x45, 0x52, 0x10, 0x00, 0x12, 0x08, 0x0a,
	0x04, 0x57, 0x4f, 0x52, 0x44, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x4c, 0x49, 0x4e, 0x45, 0x10,
	0x02, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x4d, 0x41, 0x52, 0x54, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03,
	0x42, 0x4f, 0x58, 0x10, 0x04, 0x12, 0x0e, 0x0a, 0x0a, 0x57, 0x48, 0x4f, 0x4c, 0x45, 0x5f, 0x4c,
	0x49, 0x4e, 0x45, 0x10, 0x05, 0x2a, 0xb4, 0x03, 0x0a, 0x10, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x17, 0x0a, 0x13, 0x4e, 0x4f,
	0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x4b, 0x45, 0x59, 0x53, 0x54, 0x52, 0x4f, 0x4b,
	0x45, 0x10, 0x01, 0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e,
	0x5f, 0x53, 0x43, 0x52, 0x45, 0x45, 0x4e, 0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x10, 0x02,
	0x12, 0x14, 0x0a, 0x10, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x52,
	0x4f, 0x4d, 0x50, 0x54, 0x10, 0x03, 0x12, 0x21, 0x0a, 0x19, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59,
	0x5f, 0x4f, 0x4e, 0x5f, 0x4c, 0x4f, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43, 0x48, 0x41,
	0x4e, 0x47, 0x45, 0x10, 0x04, 0x1a, 0x02, 0x08, 0x01, 0x12, 0x24, 0x0a, 0x20, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x43, 0x55, 0x53, 0x54, 0x4f, 0x4d, 0x5f, 0x45, 0x53,
	0x43, 0x41, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x51, 0x55, 0x45, 0x4e, 0x43, 0x45, 0x10, 0x05, 0x12,
	0x1d, 0x0a, 0x19, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x56, 0x41, 0x52,
	0x49, 0x41, 0x42, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0c, 0x12, 0x14,
	0x0a, 0x10, 0x4b, 0x45, 0x59, 0x53, 0x54, 0x52, 0x4f, 0x4b, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x54,
	0x45, 0x52, 0x10, 0x0e, 0x12, 0x19, 0x0a, 0x15, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f,
	0x4e, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x06, 0x12,
	0x1f, 0x0a, 0x1b, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x54, 0x45, 0x52,
	0x4d, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x5f, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x10, 0x07,
	0x12, 0x1b, 0x0a, 0x17, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x4c, 0x41,
	0x59, 0x4f, 0x55, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x08, 0x12, 0x1a, 0x0a,
	0x16, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x46, 0x4f, 0x43, 0x55, 0x53,
	0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x09, 0x12, 0x23, 0x0a, 0x1f, 0x4e, 0x4f, 0x54,
	0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x5f, 0x4f, 0x52,
	0x49, 0x47, 0x49, 0x4e, 0x41, 0x54, 0x45, 0x44, 0x5f, 0x52, 0x50, 0x43, 0x10, 0x0a, 0x12, 0x1e,
	0x0a, 0x1a, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x42, 0x52, 0x4f, 0x41,
	0x44, 0x43, 0x41, 0x53, 0x54, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0b, 0x12, 0x1c,
	0x0a, 0x18, 0x4e, 0x4f, 0x54, 0x49, 0x46, 0x59, 0x5f, 0x4f, 0x4e, 0x5f, 0x50, 0x52, 0x4f, 0x46,
	0x49, 0x4c, 0x45, 0x5f, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x0d, 0x2a, 0x56, 0x0a, 0x09,
	0x4d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4e,
	0x54, 0x52, 0x4f, 0x4c, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x50, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x10, 0x03, 0x12,
	0x09, 0x0a, 0x05, 0x53, 0x48, 0x49, 0x46, 0x54, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x55,
	0x4e, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x05, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x55, 0x4d, 0x50,
	0x41, 0x44, 0x10, 0x06, 0x2a, 0x3a, 0x0a, 0x0d, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x53, 0x63, 0x6f, 0x70, 0x65, 0x12, 0x0b, 0x0a, 0x07, 0x53, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e,
	0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x41, 0x42, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x57,
	0x49, 0x4e, 0x44, 0x4f, 0x57, 0x10, 0x03, 0x12, 0x07, 0x0a, 0x03, 0x41, 0x50, 0x50, 0x10, 0x04,
	0x2a, 0x43, 0x0a, 0x11, 0x50, 0x72, 0x6f, 0x6d, 0x70, 0x74, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f,
	0x72, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x52, 0x4f, 0x4d, 0x50, 0x54, 0x10,
	0x01, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x4d, 0x4d, 0x41, 0x4e, 0x44, 0x5f,
	0x45, 0x4e, 0x44, 0x10, 0x03, 0x42, 0x06, 0xa2, 0x02, 0x03, 0x49, 0x54, 0x4d,
}

var (
	file_iterm2_proto_rawDescOnce sync.Once
	file_iterm2_proto_rawDescData = file_iterm2_proto_rawDesc
)

func file_iterm2_proto_rawDescGZIP() []byte {
	file_iterm2_proto_rawDescOnce.Do(func() {
		file_iterm2_proto_rawDescData = protoimpl.X.CompressGZIP(file_iterm2_proto_rawDescData)
	})
	return file_iterm2_proto_rawDescData
}

var file_iterm2_proto_enumTypes = make([]protoimpl.EnumInfo, 45)
var file_iterm2_proto_msgTypes = make([]protoimpl.MessageInfo, 169)
var file_iterm2_proto_goTypes = []interface{}{
	(SelectionMode)(0),                                                 // 0: iterm2.SelectionMode
	(NotificationType)(0),                                              // 1: iterm2.NotificationType
	(Modifiers)(0),                                                     // 2: iterm2.Modifiers
	(VariableScope)(0),                                                 // 3: iterm2.VariableScope
	(PromptMonitorMode)(0),                                             // 4: iterm2.PromptMonitorMode
	(InvokeFunctionResponse_Status)(0),                                 // 5: iterm2.InvokeFunctionResponse.Status
	(CloseResponse_Status)(0),                                          // 6: iterm2.CloseResponse.Status
	(SetBroadcastDomainsResponse_Status)(0),                            // 7: iterm2.SetBroadcastDomainsResponse.Status
	(StatusBarComponentResponse_Status)(0),                             // 8: iterm2.StatusBarComponentResponse.Status
	(SelectionResponse_Status)(0),                                      // 9: iterm2.SelectionResponse.Status
	(ColorPresetResponse_Status)(0),                                    // 10: iterm2.ColorPresetResponse.Status
	(PreferencesResponse_Result_SetPreferenceResult_Status)(0),         // 11: iterm2.PreferencesResponse.Result.SetPreferenceResult.Status
	(PreferencesResponse_Result_SetDefaultProfileResult_Status)(0),     // 12: iterm2.PreferencesResponse.Result.SetDefaultProfileResult.Status
	(ReorderTabsResponse_Status)(0),                                    // 13: iterm2.ReorderTabsResponse.Status
	(TmuxResponse_Status)(0),                                           // 14: iterm2.TmuxResponse.Status
	(SetTabLayoutResponse_Status)(0),                                   // 15: iterm2.SetTabLayoutResponse.Status
	(MenuItemResponse_Status)(0),                                       // 16: iterm2.MenuItemResponse.Status
	(RestartSessionResponse_Status)(0),                                 // 17: iterm2.RestartSessionResponse.Status
	(SavedArrangementRequest_Action)(0),                                // 18: iterm2.SavedArrangementRequest.Action
	(SavedArrangementResponse_Status)(0),                               // 19: iterm2.SavedArrangementResponse.Status
	(VariableResponse_Status)(0),                                       // 20: iterm2.VariableResponse.Status
	(ActivateResponse_Status)(0),                                       // 21: iterm2.ActivateResponse.Status
	(InjectResponse_Status)(0),                                         // 22: iterm2.InjectResponse.Status
	(GetPropertyResponse_Status)(0),                                    // 23: iterm2.GetPropertyResponse.Status
	(SetPropertyResponse_Status)(0),                                    // 24: iterm2.SetPropertyResponse.Status
	(RegisterToolRequest_ToolType)(0),                                  // 25: iterm2.RegisterToolRequest.ToolType
	(RPCRegistrationRequest_Role)(0),                                   // 26: iterm2.RPCRegistrationRequest.Role
	(RPCRegistrationRequest_StatusBarComponentAttributes_Format)(0),    // 27: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Format
	(RPCRegistrationRequest_StatusBarComponentAttributes_Knob_Type)(0), // 28: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Knob.Type
	(RegisterToolResponse_Status)(0),                                   // 29: iterm2.RegisterToolResponse.Status
	(NotificationResponse_Status)(0),                                   // 30: iterm2.NotificationResponse.Status
	(KeystrokeNotification_Action)(0),                                  // 31: iterm2.KeystrokeNotification.Action
	(FocusChangedNotification_Window_WindowStatus)(0),                  // 32: iterm2.FocusChangedNotification.Window.WindowStatus
	(GetBufferResponse_Status)(0),                                      // 33: iterm2.GetBufferResponse.Status
	(GetPromptResponse_Status)(0),                                      // 34: iterm2.GetPromptResponse.Status
	(GetPromptResponse_State)(0),                                       // 35: iterm2.GetPromptResponse.State
	(ListPromptsResponse_Status)(0),                                    // 36: iterm2.ListPromptsResponse.Status
	(GetProfilePropertyResponse_Status)(0),                             // 37: iterm2.GetProfilePropertyResponse.Status
	(SetProfilePropertyResponse_Status)(0),                             // 38: iterm2.SetProfilePropertyResponse.Status
	(TransactionResponse_Status)(0),                                    // 39: iterm2.TransactionResponse.Status
	(LineContents_Continuation)(0),                                     // 40: iterm2.LineContents.Continuation
	(SendTextResponse_Status)(0),                                       // 41: iterm2.SendTextResponse.Status
	(CreateTabResponse_Status)(0),                                      // 42: iterm2.CreateTabResponse.Status
	(SplitPaneRequest_SplitDirection)(0),                               // 43: iterm2.SplitPaneRequest.SplitDirection
	(SplitPaneResponse_Status)(0),                                      // 44: iterm2.SplitPaneResponse.Status
	(*ClientOriginatedMessage)(nil),                                    // 45: iterm2.ClientOriginatedMessage
	(*ServerOriginatedMessage)(nil),                                    // 46: iterm2.ServerOriginatedMessage
	(*InvokeFunctionRequest)(nil),                                      // 47: iterm2.InvokeFunctionRequest
	(*InvokeFunctionResponse)(nil),                                     // 48: iterm2.InvokeFunctionResponse
	(*CloseRequest)(nil),                                               // 49: iterm2.CloseRequest
	(*CloseResponse)(nil),                                              // 50: iterm2.CloseResponse
	(*SetBroadcastDomainsRequest)(nil),                                 // 51: iterm2.SetBroadcastDomainsRequest
	(*SetBroadcastDomainsResponse)(nil),                                // 52: iterm2.SetBroadcastDomainsResponse
	(*StatusBarComponentRequest)(nil),                                  // 53: iterm2.StatusBarComponentRequest
	(*StatusBarComponentResponse)(nil),                                 // 54: iterm2.StatusBarComponentResponse
	(*WindowedCoordRange)(nil),                                         // 55: iterm2.WindowedCoordRange
	(*SubSelection)(nil),                                               // 56: iterm2.SubSelection
	(*Selection)(nil),                                                  // 57: iterm2.Selection
	(*SelectionRequest)(nil),                                           // 58: iterm2.SelectionRequest
	(*SelectionResponse)(nil),                                          // 59: iterm2.SelectionResponse
	(*ColorPresetRequest)(nil),                                         // 60: iterm2.ColorPresetRequest
	(*ColorPresetResponse)(nil),                                        // 61: iterm2.ColorPresetResponse
	(*PreferencesRequest)(nil),                                         // 62: iterm2.PreferencesRequest
	(*PreferencesResponse)(nil),                                        // 63: iterm2.PreferencesResponse
	(*ReorderTabsRequest)(nil),                                         // 64: iterm2.ReorderTabsRequest
	(*ReorderTabsResponse)(nil),                                        // 65: iterm2.ReorderTabsResponse
	(*TmuxRequest)(nil),                                                // 66: iterm2.TmuxRequest
	(*TmuxResponse)(nil),                                               // 67: iterm2.TmuxResponse
	(*GetBroadcastDomainsRequest)(nil),                                 // 68: iterm2.GetBroadcastDomainsRequest
	(*BroadcastDomain)(nil),                                            // 69: iterm2.BroadcastDomain
	(*GetBroadcastDomainsResponse)(nil),                                // 70: iterm2.GetBroadcastDomainsResponse
	(*SetTabLayoutRequest)(nil),                                        // 71: iterm2.SetTabLayoutRequest
	(*SetTabLayoutResponse)(nil),                                       // 72: iterm2.SetTabLayoutResponse
	(*MenuItemRequest)(nil),                                            // 73: iterm2.MenuItemRequest
	(*MenuItemResponse)(nil),                                           // 74: iterm2.MenuItemResponse
	(*RestartSessionRequest)(nil),                                      // 75: iterm2.RestartSessionRequest
	(*RestartSessionResponse)(nil),                                     // 76: iterm2.RestartSessionResponse
	(*ServerOriginatedRPCResultRequest)(nil),                           // 77: iterm2.ServerOriginatedRPCResultRequest
	(*ServerOriginatedRPCResultResponse)(nil),                          // 78: iterm2.ServerOriginatedRPCResultResponse
	(*ListProfilesRequest)(nil),                                        // 79: iterm2.ListProfilesRequest
	(*ListProfilesResponse)(nil),                                       // 80: iterm2.ListProfilesResponse
	(*FocusRequest)(nil),                                               // 81: iterm2.FocusRequest
	(*FocusResponse)(nil),                                              // 82: iterm2.FocusResponse
	(*SavedArrangementRequest)(nil),                                    // 83: iterm2.SavedArrangementRequest
	(*SavedArrangementResponse)(nil),                                   // 84: iterm2.SavedArrangementResponse
	(*VariableRequest)(nil),                                            // 85: iterm2.VariableRequest
	(*VariableResponse)(nil),                                           // 86: iterm2.VariableResponse
	(*ActivateRequest)(nil),                                            // 87: iterm2.ActivateRequest
	(*ActivateResponse)(nil),                                           // 88: iterm2.ActivateResponse
	(*InjectRequest)(nil),                                              // 89: iterm2.InjectRequest
	(*InjectResponse)(nil),                                             // 90: iterm2.InjectResponse
	(*GetPropertyRequest)(nil),                                         // 91: iterm2.GetPropertyRequest
	(*GetPropertyResponse)(nil),                                        // 92: iterm2.GetPropertyResponse
	(*SetPropertyRequest)(nil),                                         // 93: iterm2.SetPropertyRequest
	(*SetPropertyResponse)(nil),                                        // 94: iterm2.SetPropertyResponse
	(*RegisterToolRequest)(nil),                                        // 95: iterm2.RegisterToolRequest
	(*RPCRegistrationRequest)(nil),                                     // 96: iterm2.RPCRegistrationRequest
	(*RegisterToolResponse)(nil),                                       // 97: iterm2.RegisterToolResponse
	(*KeystrokePattern)(nil),                                           // 98: iterm2.KeystrokePattern
	(*KeystrokeMonitorRequest)(nil),                                    // 99: iterm2.KeystrokeMonitorRequest
	(*KeystrokeFilterRequest)(nil),                                     // 100: iterm2.KeystrokeFilterRequest
	(*VariableMonitorRequest)(nil),                                     // 101: iterm2.VariableMonitorRequest
	(*ProfileChangeRequest)(nil),                                       // 102: iterm2.ProfileChangeRequest
	(*PromptMonitorRequest)(nil),                                       // 103: iterm2.PromptMonitorRequest
	(*NotificationRequest)(nil),                                        // 104: iterm2.NotificationRequest
	(*NotificationResponse)(nil),                                       // 105: iterm2.NotificationResponse
	(*Notification)(nil),                                               // 106: iterm2.Notification
	(*ProfileChangedNotification)(nil),                                 // 107: iterm2.ProfileChangedNotification
	(*VariableChangedNotification)(nil),                                // 108: iterm2.VariableChangedNotification
	(*BroadcastDomainsChangedNotification)(nil),                        // 109: iterm2.BroadcastDomainsChangedNotification
	(*ServerOriginatedRPC)(nil),                                        // 110: iterm2.ServerOriginatedRPC
	(*ServerOriginatedRPCNotification)(nil),                            // 111: iterm2.ServerOriginatedRPCNotification
	(*KeystrokeNotification)(nil),                                      // 112: iterm2.KeystrokeNotification
	(*ScreenUpdateNotification)(nil),                                   // 113: iterm2.ScreenUpdateNotification
	(*PromptNotificationPrompt)(nil),                                   // 114: iterm2.PromptNotificationPrompt
	(*PromptNotificationCommandStart)(nil),                             // 115: iterm2.PromptNotificationCommandStart
	(*PromptNotificationCommandEnd)(nil),                               // 116: iterm2.PromptNotificationCommandEnd
	(*PromptNotification)(nil),                                         // 117: iterm2.PromptNotification
	(*LocationChangeNotification)(nil),                                 // 118: iterm2.LocationChangeNotification
	(*CustomEscapeSequenceNotification)(nil),                           // 119: iterm2.CustomEscapeSequenceNotification
	(*NewSessionNotification)(nil),                                     // 120: iterm2.NewSessionNotification
	(*FocusChangedNotification)(nil),                                   // 121: iterm2.FocusChangedNotification
	(*TerminateSessionNotification)(nil),                               // 122: iterm2.TerminateSessionNotification
	(*LayoutChangedNotification)(nil),                                  // 123: iterm2.LayoutChangedNotification
	(*GetBufferRequest)(nil),                                           // 124: iterm2.GetBufferRequest
	(*GetBufferResponse)(nil),                                          // 125: iterm2.GetBufferResponse
	(*GetPromptRequest)(nil),                                           // 126: iterm2.GetPromptRequest
	(*GetPromptResponse)(nil),                                          // 127: iterm2.GetPromptResponse
	(*ListPromptsRequest)(nil),                                         // 128: iterm2.ListPromptsRequest
	(*ListPromptsResponse)(nil),                                        // 129: iterm2.ListPromptsResponse
	(*GetProfilePropertyRequest)(nil),                                  // 130: iterm2.GetProfilePropertyRequest
	(*ProfileProperty)(nil),                                            // 131: iterm2.ProfileProperty
	(*GetProfilePropertyResponse)(nil),                                 // 132: iterm2.GetProfilePropertyResponse
	(*SetProfilePropertyRequest)(nil),                                  // 133: iterm2.SetProfilePropertyRequest
	(*SetProfilePropertyResponse)(nil),                                 // 134: iterm2.SetProfilePropertyResponse
	(*TransactionRequest)(nil),                                         // 135: iterm2.TransactionRequest
	(*TransactionResponse)(nil),                                        // 136: iterm2.TransactionResponse
	(*LineRange)(nil),                                                  // 137: iterm2.LineRange
	(*Range)(nil),                                                      // 138: iterm2.Range
	(*CoordRange)(nil),                                                 // 139: iterm2.CoordRange
	(*Coord)(nil),                                                      // 140: iterm2.Coord
	(*LineContents)(nil),                                               // 141: iterm2.LineContents
	(*CodePointsPerCell)(nil),                                          // 142: iterm2.CodePointsPerCell
	(*ListSessionsRequest)(nil),                                        // 143: iterm2.ListSessionsRequest
	(*SendTextRequest)(nil),                                            // 144: iterm2.SendTextRequest
	(*SendTextResponse)(nil),                                           // 145: iterm2.SendTextResponse
	(*Size)(nil),                                                       // 146: iterm2.Size
	(*Point)(nil),                                                      // 147: iterm2.Point
	(*Frame)(nil),                                                      // 148: iterm2.Frame
	(*SessionSummary)(nil),                                             // 149: iterm2.SessionSummary
	(*SplitTreeNode)(nil),                                              // 150: iterm2.SplitTreeNode
	(*ListSessionsResponse)(nil),                                       // 151: iterm2.ListSessionsResponse
	(*CreateTabRequest)(nil),                                           // 152: iterm2.CreateTabRequest
	(*CreateTabResponse)(nil),                                          // 153: iterm2.CreateTabResponse
	(*SplitPaneRequest)(nil),                                           // 154: iterm2.SplitPaneRequest
	(*SplitPaneResponse)(nil),                                          // 155: iterm2.SplitPaneResponse
	(*InvokeFunctionRequest_Tab)(nil),                                  // 156: iterm2.InvokeFunctionRequest.Tab
	(*InvokeFunctionRequest_Session)(nil),                              // 157: iterm2.InvokeFunctionRequest.Session
	(*InvokeFunctionRequest_Window)(nil),                               // 158: iterm2.InvokeFunctionRequest.Window
	(*InvokeFunctionRequest_App)(nil),                                  // 159: iterm2.InvokeFunctionRequest.App
	(*InvokeFunctionRequest_Method)(nil),                               // 160: iterm2.InvokeFunctionRequest.Method
	(*InvokeFunctionResponse_Error)(nil),                               // 161: iterm2.InvokeFunctionResponse.Error
	(*InvokeFunctionResponse_Success)(nil),                             // 162: iterm2.InvokeFunctionResponse.Success
	(*CloseRequest_CloseTabs)(nil),                                     // 163: iterm2.CloseRequest.CloseTabs
	(*CloseRequest_CloseSessions)(nil),                                 // 164: iterm2.CloseRequest.CloseSessions
	(*CloseRequest_CloseWindows)(nil),                                  // 165: iterm2.CloseRequest.CloseWindows
	(*StatusBarComponentRequest_OpenPopover)(nil),                      // 166: iterm2.StatusBarComponentRequest.OpenPopover
	(*SelectionRequest_GetSelectionRequest)(nil),                       // 167: iterm2.SelectionRequest.GetSelectionRequest
	(*SelectionRequest_SetSelectionRequest)(nil),                       // 168: iterm2.SelectionRequest.SetSelectionRequest
	(*SelectionResponse_GetSelectionResponse)(nil),                     // 169: iterm2.SelectionResponse.GetSelectionResponse
	(*SelectionResponse_SetSelectionResponse)(nil),                     // 170: iterm2.SelectionResponse.SetSelectionResponse
	(*ColorPresetRequest_ListPresets)(nil),                             // 171: iterm2.ColorPresetRequest.ListPresets
	(*ColorPresetRequest_GetPreset)(nil),                               // 172: iterm2.ColorPresetRequest.GetPreset
	(*ColorPresetResponse_ListPresets)(nil),                            // 173: iterm2.ColorPresetResponse.ListPresets
	(*ColorPresetResponse_GetPreset)(nil),                              // 174: iterm2.ColorPresetResponse.GetPreset
	(*ColorPresetResponse_GetPreset_ColorSetting)(nil),                 // 175: iterm2.ColorPresetResponse.GetPreset.ColorSetting
	(*PreferencesRequest_Request)(nil),                                 // 176: iterm2.PreferencesRequest.Request
	(*PreferencesRequest_Request_SetPreference)(nil),                   // 177: iterm2.PreferencesRequest.Request.SetPreference
	(*PreferencesRequest_Request_GetPreference)(nil),                   // 178: iterm2.PreferencesRequest.Request.GetPreference
	(*PreferencesRequest_Request_SetDefaultProfile)(nil),               // 179: iterm2.PreferencesRequest.Request.SetDefaultProfile
	(*PreferencesRequest_Request_GetDefaultProfile)(nil),               // 180: iterm2.PreferencesRequest.Request.GetDefaultProfile
	(*PreferencesResponse_Result)(nil),                                 // 181: iterm2.PreferencesResponse.Result
	(*PreferencesResponse_Result_SetPreferenceResult)(nil),             // 182: iterm2.PreferencesResponse.Result.SetPreferenceResult
	(*PreferencesResponse_Result_GetPreferenceResult)(nil),             // 183: iterm2.PreferencesResponse.Result.GetPreferenceResult
	(*PreferencesResponse_Result_SetDefaultProfileResult)(nil),         // 184: iterm2.PreferencesResponse.Result.SetDefaultProfileResult
	(*PreferencesResponse_Result_UnrecognizedResult)(nil),              // 185: iterm2.PreferencesResponse.Result.UnrecognizedResult
	(*PreferencesResponse_Result_GetDefaultProfileResult)(nil),         // 186: iterm2.PreferencesResponse.Result.GetDefaultProfileResult
	(*ReorderTabsRequest_Assignment)(nil),                              // 187: iterm2.ReorderTabsRequest.Assignment
	(*TmuxRequest_ListConnections)(nil),                                // 188: iterm2.TmuxRequest.ListConnections
	(*TmuxRequest_SendCommand)(nil),                                    // 189: iterm2.TmuxRequest.SendCommand
	(*TmuxRequest_SetWindowVisible)(nil),                               // 190: iterm2.TmuxRequest.SetWindowVisible
	(*TmuxRequest_CreateWindow)(nil),                                   // 191: iterm2.TmuxRequest.CreateWindow
	(*TmuxResponse_ListConnections)(nil),                               // 192: iterm2.TmuxResponse.ListConnections
	(*TmuxResponse_SendCommand)(nil),                                   // 193: iterm2.TmuxResponse.SendCommand
	(*TmuxResponse_SetWindowVisible)(nil),                              // 194: iterm2.TmuxResponse.SetWindowVisible
	(*TmuxResponse_CreateWindow)(nil),                                  // 195: iterm2.TmuxResponse.CreateWindow
	(*TmuxResponse_ListConnections_Connection)(nil),                    // 196: iterm2.TmuxResponse.ListConnections.Connection
	(*ListProfilesResponse_Profile)(nil),                               // 197: iterm2.ListProfilesResponse.Profile
	(*VariableRequest_Set)(nil),                                        // 198: iterm2.VariableRequest.Set
	(*ActivateRequest_App)(nil),                                        // 199: iterm2.ActivateRequest.App
	(*RPCRegistrationRequest_RPCArgumentSignature)(nil),                // 200: iterm2.RPCRegistrationRequest.RPCArgumentSignature
	(*RPCRegistrationRequest_RPCArgument)(nil),                         // 201: iterm2.RPCRegistrationRequest.RPCArgument
	(*RPCRegistrationRequest_SessionTitleAttributes)(nil),              // 202: iterm2.RPCRegistrationRequest.SessionTitleAttributes
	(*RPCRegistrationRequest_StatusBarComponentAttributes)(nil),        // 203: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes
	(*RPCRegistrationRequest_ContextMenuAttributes)(nil),               // 204: iterm2.RPCRegistrationRequest.ContextMenuAttributes
	(*RPCRegistrationRequest_StatusBarComponentAttributes_Knob)(nil),   // 205: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Knob
	(*RPCRegistrationRequest_StatusBarComponentAttributes_Icon)(nil),   // 206: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Icon
	(*ServerOriginatedRPC_RPCArgument)(nil),                            // 207: iterm2.ServerOriginatedRPC.RPCArgument
	(*FocusChangedNotification_Window)(nil),                            // 208: iterm2.FocusChangedNotification.Window
	(*SetProfilePropertyRequest_GuidList)(nil),                         // 209: iterm2.SetProfilePropertyRequest.GuidList
	(*SetProfilePropertyRequest_Assignment)(nil),                       // 210: iterm2.SetProfilePropertyRequest.Assignment
	(*SplitTreeNode_SplitTreeLink)(nil),                                // 211: iterm2.SplitTreeNode.SplitTreeLink
	(*ListSessionsResponse_Window)(nil),                                // 212: iterm2.ListSessionsResponse.Window
	(*ListSessionsResponse_Tab)(nil),                                   // 213: iterm2.ListSessionsResponse.Tab
}
var file_iterm2_proto_depIdxs = []int32{
	124, // 0: iterm2.ClientOriginatedMessage.get_buffer_request:type_name -> iterm2.GetBufferRequest
	126, // 1: iterm2.ClientOriginatedMessage.get_prompt_request:type_name -> iterm2.GetPromptRequest
	135, // 2: iterm2.ClientOriginatedMessage.transaction_request:type_name -> iterm2.TransactionRequest
	104, // 3: iterm2.ClientOriginatedMessage.notification_request:type_name -> iterm2.NotificationRequest
	95,  // 4: iterm2.ClientOriginatedMessage.register_tool_request:type_name -> iterm2.RegisterToolRequest
	133, // 5: iterm2.ClientOriginatedMessage.set_profile_property_request:type_name -> iterm2.SetProfilePropertyRequest
	143, // 6: iterm2.ClientOriginatedMessage.list_sessions_request:type_name -> iterm2.ListSessionsRequest
	144, // 7: iterm2.ClientOriginatedMessage.send_text_request:type_name -> iterm2.SendTextRequest
	152, // 8: iterm2.ClientOriginatedMessage.create_tab_request:type_name -> iterm2.CreateTabRequest
	154, // 9: iterm2.ClientOriginatedMessage.split_pane_request:type_name -> iterm2.SplitPaneRequest
	130, // 10: iterm2.ClientOriginatedMessage.get_profile_property_request:type_name -> iterm2.GetProfilePropertyRequest
	93,  // 11: iterm2.ClientOriginatedMessage.set_property_request:type_name -> iterm2.SetPropertyRequest
	91,  // 12: iterm2.ClientOriginatedMessage.get_property_request:type_name -> iterm2.GetPropertyRequest
	89,  // 13: iterm2.ClientOriginatedMessage.inject_request:type_name -> iterm2.InjectRequest
	87,  // 14: iterm2.ClientOriginatedMessage.activate_request:type_name -> iterm2.ActivateRequest
	85,  // 15: iterm2.ClientOriginatedMessage.variable_request:type_name -> iterm2.VariableRequest
	83,  // 16: iterm2.ClientOriginatedMessage.saved_arrangement_request:type_name -> iterm2.SavedArrangementRequest
	81,  // 17: iterm2.ClientOriginatedMessage.focus_request:type_name -> iterm2.FocusRequest
	79,  // 18: iterm2.ClientOriginatedMessage.list_profiles_request:type_name -> iterm2.ListProfilesRequest
	77,  // 19: iterm2.ClientOriginatedMessage.server_originated_rpc_result_request:type_name -> iterm2.ServerOriginatedRPCResultRequest
	75,  // 20: iterm2.ClientOriginatedMessage.restart_session_request:type_name -> iterm2.RestartSessionRequest
	73,  // 21: iterm2.ClientOriginatedMessage.menu_item_request:type_name -> iterm2.MenuItemRequest
	71,  // 22: iterm2.ClientOriginatedMessage.set_tab_layout_request:type_name -> iterm2.SetTabLayoutRequest
	68,  // 23: iterm2.ClientOriginatedMessage.get_broadcast_domains_request:type_name -> iterm2.GetBroadcastDomainsRequest
	66,  // 24: iterm2.ClientOriginatedMessage.tmux_request:type_name -> iterm2.TmuxRequest
	64,  // 25: iterm2.ClientOriginatedMessage.reorder_tabs_request:type_name -> iterm2.ReorderTabsRequest
	62,  // 26: iterm2.ClientOriginatedMessage.preferences_request:type_name -> iterm2.PreferencesRequest
	60,  // 27: iterm2.ClientOriginatedMessage.color_preset_request:type_name -> iterm2.ColorPresetRequest
	58,  // 28: iterm2.ClientOriginatedMessage.selection_request:type_name -> iterm2.SelectionRequest
	53,  // 29: iterm2.ClientOriginatedMessage.status_bar_component_request:type_name -> iterm2.StatusBarComponentRequest
	51,  // 30: iterm2.ClientOriginatedMessage.set_broadcast_domains_request:type_name -> iterm2.SetBroadcastDomainsRequest
	49,  // 31: iterm2.ClientOriginatedMessage.close_request:type_name -> iterm2.CloseRequest
	47,  // 32: iterm2.ClientOriginatedMessage.invoke_function_request:type_name -> iterm2.InvokeFunctionRequest
	128, // 33: iterm2.ClientOriginatedMessage.list_prompts_request:type_name -> iterm2.ListPromptsRequest
	125, // 34: iterm2.ServerOriginatedMessage.get_buffer_response:type_name -> iterm2.GetBufferResponse
	127, // 35: iterm2.ServerOriginatedMessage.get_prompt_response:type_name -> iterm2.GetPromptResponse
	136, // 36: iterm2.ServerOriginatedMessage.transaction_response:type_name -> iterm2.TransactionResponse
	105, // 37: iterm2.ServerOriginatedMessage.notification_response:type_name -> iterm2.NotificationResponse
	97,  // 38: iterm2.ServerOriginatedMessage.register_tool_response:type_name -> iterm2.RegisterToolResponse
	134, // 39: iterm2.ServerOriginatedMessage.set_profile_property_response:type_name -> iterm2.SetProfilePropertyResponse
	151, // 40: iterm2.ServerOriginatedMessage.list_sessions_response:type_name -> iterm2.ListSessionsResponse
	145, // 41: iterm2.ServerOriginatedMessage.send_text_response:type_name -> iterm2.SendTextResponse
	153, // 42: iterm2.ServerOriginatedMessage.create_tab_response:type_name -> iterm2.CreateTabResponse
	155, // 43: iterm2.ServerOriginatedMessage.split_pane_response:type_name -> iterm2.SplitPaneResponse
	132, // 44: iterm2.ServerOriginatedMessage.get_profile_property_response:type_name -> iterm2.GetProfilePropertyResponse
	94,  // 45: iterm2.ServerOriginatedMessage.set_property_response:type_name -> iterm2.SetPropertyResponse
	92,  // 46: iterm2.ServerOriginatedMessage.get_property_response:type_name -> iterm2.GetPropertyResponse
	90,  // 47: iterm2.ServerOriginatedMessage.inject_response:type_name -> iterm2.InjectResponse
	88,  // 48: iterm2.ServerOriginatedMessage.activate_response:type_name -> iterm2.ActivateResponse
	86,  // 49: iterm2.ServerOriginatedMessage.variable_response:type_name -> iterm2.VariableResponse
	84,  // 50: iterm2.ServerOriginatedMessage.saved_arrangement_response:type_name -> iterm2.SavedArrangementResponse
	82,  // 51: iterm2.ServerOriginatedMessage.focus_response:type_name -> iterm2.FocusResponse
	80,  // 52: iterm2.ServerOriginatedMessage.list_profiles_response:type_name -> iterm2.ListProfilesResponse
	78,  // 53: iterm2.ServerOriginatedMessage.server_originated_rpc_result_response:type_name -> iterm2.ServerOriginatedRPCResultResponse
	76,  // 54: iterm2.ServerOriginatedMessage.restart_session_response:type_name -> iterm2.RestartSessionResponse
	74,  // 55: iterm2.ServerOriginatedMessage.menu_item_response:type_name -> iterm2.MenuItemResponse
	72,  // 56: iterm2.ServerOriginatedMessage.set_tab_layout_response:type_name -> iterm2.SetTabLayoutResponse
	70,  // 57: iterm2.ServerOriginatedMessage.get_broadcast_domains_response:type_name -> iterm2.GetBroadcastDomainsResponse
	67,  // 58: iterm2.ServerOriginatedMessage.tmux_response:type_name -> iterm2.TmuxResponse
	65,  // 59: iterm2.ServerOriginatedMessage.reorder_tabs_response:type_name -> iterm2.ReorderTabsResponse
	63,  // 60: iterm2.ServerOriginatedMessage.preferences_response:type_name -> iterm2.PreferencesResponse
	61,  // 61: iterm2.ServerOriginatedMessage.color_preset_response:type_name -> iterm2.ColorPresetResponse
	59,  // 62: iterm2.ServerOriginatedMessage.selection_response:type_name -> iterm2.SelectionResponse
	54,  // 63: iterm2.ServerOriginatedMessage.status_bar_component_response:type_name -> iterm2.StatusBarComponentResponse
	52,  // 64: iterm2.ServerOriginatedMessage.set_broadcast_domains_response:type_name -> iterm2.SetBroadcastDomainsResponse
	50,  // 65: iterm2.ServerOriginatedMessage.close_response:type_name -> iterm2.CloseResponse
	48,  // 66: iterm2.ServerOriginatedMessage.invoke_function_response:type_name -> iterm2.InvokeFunctionResponse
	129, // 67: iterm2.ServerOriginatedMessage.list_prompts_response:type_name -> iterm2.ListPromptsResponse
	106, // 68: iterm2.ServerOriginatedMessage.notification:type_name -> iterm2.Notification
	156, // 69: iterm2.InvokeFunctionRequest.tab:type_name -> iterm2.InvokeFunctionRequest.Tab
	157, // 70: iterm2.InvokeFunctionRequest.session:type_name -> iterm2.InvokeFunctionRequest.Session
	158, // 71: iterm2.InvokeFunctionRequest.window:type_name -> iterm2.InvokeFunctionRequest.Window
	159, // 72: iterm2.InvokeFunctionRequest.app:type_name -> iterm2.InvokeFunctionRequest.App
	160, // 73: iterm2.InvokeFunctionRequest.method:type_name -> iterm2.InvokeFunctionRequest.Method
	161, // 74: iterm2.InvokeFunctionResponse.error:type_name -> iterm2.InvokeFunctionResponse.Error
	162, // 75: iterm2.InvokeFunctionResponse.success:type_name -> iterm2.InvokeFunctionResponse.Success
	163, // 76: iterm2.CloseRequest.tabs:type_name -> iterm2.CloseRequest.CloseTabs
	164, // 77: iterm2.CloseRequest.sessions:type_name -> iterm2.CloseRequest.CloseSessions
	165, // 78: iterm2.CloseRequest.windows:type_name -> iterm2.CloseRequest.CloseWindows
	6,   // 79: iterm2.CloseResponse.statuses:type_name -> iterm2.CloseResponse.Status
	69,  // 80: iterm2.SetBroadcastDomainsRequest.broadcast_domains:type_name -> iterm2.BroadcastDomain
	7,   // 81: iterm2.SetBroadcastDomainsResponse.status:type_name -> iterm2.SetBroadcastDomainsResponse.Status
	166, // 82: iterm2.StatusBarComponentRequest.open_popover:type_name -> iterm2.StatusBarComponentRequest.OpenPopover
	8,   // 83: iterm2.StatusBarComponentResponse.status:type_name -> iterm2.StatusBarComponentResponse.Status
	139, // 84: iterm2.WindowedCoordRange.coord_range:type_name -> iterm2.CoordRange
	138, // 85: iterm2.WindowedCoordRange.columns:type_name -> iterm2.Range
	55,  // 86: iterm2.SubSelection.windowed_coord_range:type_name -> iterm2.WindowedCoordRange
	0,   // 87: iterm2.SubSelection.selection_mode:type_name -> iterm2.SelectionMode
	56,  // 88: iterm2.Selection.sub_selections:type_name -> iterm2.SubSelection
	167, // 89: iterm2.SelectionRequest.get_selection_request:type_name -> iterm2.SelectionRequest.GetSelectionRequest
	168, // 90: iterm2.SelectionRequest.set_selection_request:type_name -> iterm2.SelectionRequest.SetSelectionRequest
	9,   // 91: iterm2.SelectionResponse.status:type_name -> iterm2.SelectionResponse.Status
	169, // 92: iterm2.SelectionResponse.get_selection_response:type_name -> iterm2.SelectionResponse.GetSelectionResponse
	170, // 93: iterm2.SelectionResponse.set_selection_response:type_name -> iterm2.SelectionResponse.SetSelectionResponse
	171, // 94: iterm2.ColorPresetRequest.list_presets:type_name -> iterm2.ColorPresetRequest.ListPresets
	172, // 95: iterm2.ColorPresetRequest.get_preset:type_name -> iterm2.ColorPresetRequest.GetPreset
	173, // 96: iterm2.ColorPresetResponse.list_presets:type_name -> iterm2.ColorPresetResponse.ListPresets
	174, // 97: iterm2.ColorPresetResponse.get_preset:type_name -> iterm2.ColorPresetResponse.GetPreset
	10,  // 98: iterm2.ColorPresetResponse.status:type_name -> iterm2.ColorPresetResponse.Status
	176, // 99: iterm2.PreferencesRequest.requests:type_name -> iterm2.PreferencesRequest.Request
	181, // 100: iterm2.PreferencesResponse.results:type_name -> iterm2.PreferencesResponse.Result
	187, // 101: iterm2.ReorderTabsRequest.assignments:type_name -> iterm2.ReorderTabsRequest.Assignment
	13,  // 102: iterm2.ReorderTabsResponse.status:type_name -> iterm2.ReorderTabsResponse.Status
	188, // 103: iterm2.TmuxRequest.list_connections:type_name -> iterm2.TmuxRequest.ListConnections
	189, // 104: iterm2.TmuxRequest.send_command:type_name -> iterm2.TmuxRequest.SendCommand
	190, // 105: iterm2.TmuxRequest.set_window_visible:type_name -> iterm2.TmuxRequest.SetWindowVisible
	191, // 106: iterm2.TmuxRequest.create_window:type_name -> iterm2.TmuxRequest.CreateWindow
	192, // 107: iterm2.TmuxResponse.list_connections:type_name -> iterm2.TmuxResponse.ListConnections
	193, // 108: iterm2.TmuxResponse.send_command:type_name -> iterm2.TmuxResponse.SendCommand
	194, // 109: iterm2.TmuxResponse.set_window_visible:type_name -> iterm2.TmuxResponse.SetWindowVisible
	195, // 110: iterm2.TmuxResponse.create_window:type_name -> iterm2.TmuxResponse.CreateWindow
	14,  // 111: iterm2.TmuxResponse.status:type_name -> iterm2.TmuxResponse.Status
	69,  // 112: iterm2.GetBroadcastDomainsResponse.broadcast_domains:type_name -> iterm2.BroadcastDomain
	150, // 113: iterm2.SetTabLayoutRequest.root:type_name -> iterm2.SplitTreeNode
	15,  // 114: iterm2.SetTabLayoutResponse.status:type_name -> iterm2.SetTabLayoutResponse.Status
	16,  // 115: iterm2.MenuItemResponse.status:type_name -> iterm2.MenuItemResponse.Status
	17,  // 116: iterm2.RestartSessionResponse.status:type_name -> iterm2.RestartSessionResponse.Status
	197, // 117: iterm2.ListProfilesResponse.profiles:type_name -> iterm2.ListProfilesResponse.Profile
	121, // 118: iterm2.FocusResponse.notifications:type_name -> iterm2.FocusChangedNotification
	18,  // 119: iterm2.SavedArrangementRequest.action:type_name -> iterm2.SavedArrangementRequest.Action
	19,  // 120: iterm2.SavedArrangementResponse.status:type_name -> iterm2.SavedArrangementResponse.Status
	198, // 121: iterm2.VariableRequest.set:type_name -> iterm2.VariableRequest.Set
	20,  // 122: iterm2.VariableResponse.status:type_name -> iterm2.VariableResponse.Status
	199, // 123: iterm2.ActivateRequest.activate_app:type_name -> iterm2.ActivateRequest.App
	21,  // 124: iterm2.ActivateResponse.status:type_name -> iterm2.ActivateResponse.Status
	22,  // 125: iterm2.InjectResponse.status:type_name -> iterm2.InjectResponse.Status
	23,  // 126: iterm2.GetPropertyResponse.status:type_name -> iterm2.GetPropertyResponse.Status
	24,  // 127: iterm2.SetPropertyResponse.status:type_name -> iterm2.SetPropertyResponse.Status
	25,  // 128: iterm2.RegisterToolRequest.tool_type:type_name -> iterm2.RegisterToolRequest.ToolType
	200, // 129: iterm2.RPCRegistrationRequest.arguments:type_name -> iterm2.RPCRegistrationRequest.RPCArgumentSignature
	201, // 130: iterm2.RPCRegistrationRequest.defaults:type_name -> iterm2.RPCRegistrationRequest.RPCArgument
	26,  // 131: iterm2.RPCRegistrationRequest.role:type_name -> iterm2.RPCRegistrationRequest.Role
	202, // 132: iterm2.RPCRegistrationRequest.session_title_attributes:type_name -> iterm2.RPCRegistrationRequest.SessionTitleAttributes
	203, // 133: iterm2.RPCRegistrationRequest.status_bar_component_attributes:type_name -> iterm2.RPCRegistrationRequest.StatusBarComponentAttributes
	204, // 134: iterm2.RPCRegistrationRequest.context_menu_attributes:type_name -> iterm2.RPCRegistrationRequest.ContextMenuAttributes
	29,  // 135: iterm2.RegisterToolResponse.status:type_name -> iterm2.RegisterToolResponse.Status
	2,   // 136: iterm2.KeystrokePattern.required_modifiers:type_name -> iterm2.Modifiers
	2,   // 137: iterm2.KeystrokePattern.forbidden_modifiers:type_name -> iterm2.Modifiers
	98,  // 138: iterm2.KeystrokeMonitorRequest.patterns_to_ignore:type_name -> iterm2.KeystrokePattern
	98,  // 139: iterm2.KeystrokeFilterRequest.patterns_to_ignore:type_name -> iterm2.KeystrokePattern
	3,   // 140: iterm2.VariableMonitorRequest.scope:type_name -> iterm2.VariableScope
	4,   // 141: iterm2.PromptMonitorRequest.modes:type_name -> iterm2.PromptMonitorMode
	1,   // 142: iterm2.NotificationRequest.notification_type:type_name -> iterm2.NotificationType
	96,  // 143: iterm2.NotificationRequest.rpc_registration_request:type_name -> iterm2.RPCRegistrationRequest
	99,  // 144: iterm2.NotificationRequest.keystroke_monitor_request:type_name -> iterm2.KeystrokeMonitorRequest
	101, // 145: iterm2.NotificationRequest.variable_monitor_request:type_name -> iterm2.VariableMonitorRequest
	102, // 146: iterm2.NotificationRequest.profile_change_request:type_name -> iterm2.ProfileChangeRequest
	100, // 147: iterm2.NotificationRequest.keystroke_filter_request:type_name -> iterm2.KeystrokeFilterRequest
	103, // 148: iterm2.NotificationRequest.prompt_monitor_request:type_name -> iterm2.PromptMonitorRequest
	30,  // 149: iterm2.NotificationResponse.status:type_name -> iterm2.NotificationResponse.Status
	112, // 150: iterm2.Notification.keystroke_notification:type_name -> iterm2.KeystrokeNotification
	113, // 151: iterm2.Notification.screen_update_notification:type_name -> iterm2.ScreenUpdateNotification
	117, // 152: iterm2.Notification.prompt_notification:type_name -> iterm2.PromptNotification
	118, // 153: iterm2.Notification.location_change_notification:type_name -> iterm2.LocationChangeNotification
	119, // 154: iterm2.Notification.custom_escape_sequence_notification:type_name -> iterm2.CustomEscapeSequenceNotification
	120, // 155: iterm2.Notification.new_session_notification:type_name -> iterm2.NewSessionNotification
	122, // 156: iterm2.Notification.terminate_session_notification:type_name -> iterm2.TerminateSessionNotification
	123, // 157: iterm2.Notification.layout_changed_notification:type_name -> iterm2.LayoutChangedNotification
	121, // 158: iterm2.Notification.focus_changed_notification:type_name -> iterm2.FocusChangedNotification
	111, // 159: iterm2.Notification.server_originated_rpc_notification:type_name -> iterm2.ServerOriginatedRPCNotification
	109, // 160: iterm2.Notification.broadcast_domains_changed:type_name -> iterm2.BroadcastDomainsChangedNotification
	108, // 161: iterm2.Notification.variable_changed_notification:type_name -> iterm2.VariableChangedNotification
	107, // 162: iterm2.Notification.profile_changed_notification:type_name -> iterm2.ProfileChangedNotification
	3,   // 163: iterm2.VariableChangedNotification.scope:type_name -> iterm2.VariableScope
	69,  // 164: iterm2.BroadcastDomainsChangedNotification.broadcast_domains:type_name -> iterm2.BroadcastDomain
	207, // 165: iterm2.ServerOriginatedRPC.arguments:type_name -> iterm2.ServerOriginatedRPC.RPCArgument
	110, // 166: iterm2.ServerOriginatedRPCNotification.rpc:type_name -> iterm2.ServerOriginatedRPC
	2,   // 167: iterm2.KeystrokeNotification.modifiers:type_name -> iterm2.Modifiers
	31,  // 168: iterm2.KeystrokeNotification.action:type_name -> iterm2.KeystrokeNotification.Action
	127, // 169: iterm2.PromptNotificationPrompt.prompt:type_name -> iterm2.GetPromptResponse
	114, // 170: iterm2.PromptNotification.prompt:type_name -> iterm2.PromptNotificationPrompt
	115, // 171: iterm2.PromptNotification.command_start:type_name -> iterm2.PromptNotificationCommandStart
	116, // 172: iterm2.PromptNotification.command_end:type_name -> iterm2.PromptNotificationCommandEnd
	208, // 173: iterm2.FocusChangedNotification.window:type_name -> iterm2.FocusChangedNotification.Window
	151, // 174: iterm2.LayoutChangedNotification.list_sessions_response:type_name -> iterm2.ListSessionsResponse
	137, // 175: iterm2.GetBufferRequest.line_range:type_name -> iterm2.LineRange
	33,  // 176: iterm2.GetBufferResponse.status:type_name -> iterm2.GetBufferResponse.Status
	138, // 177: iterm2.GetBufferResponse.range:type_name -> iterm2.Range
	141, // 178: iterm2.GetBufferResponse.contents:type_name -> iterm2.LineContents
	140, // 179: iterm2.GetBufferResponse.cursor:type_name -> iterm2.Coord
	55,  // 180: iterm2.GetBufferResponse.windowed_coord_range:type_name -> iterm2.WindowedCoordRange
	34,  // 181: iterm2.GetPromptResponse.status:type_name -> iterm2.GetPromptResponse.Status
	139, // 182: iterm2.GetPromptResponse.prompt_range:type_name -> iterm2.CoordRange
	139, // 183: iterm2.GetPromptResponse.command_range:type_name -> iterm2.CoordRange
	139, // 184: iterm2.GetPromptResponse.output_range:type_name -> iterm2.CoordRange
	35,  // 185: iterm2.GetPromptResponse.prompt_state:type_name -> iterm2.GetPromptResponse.State
	36,  // 186: iterm2.ListPromptsResponse.status:type_name -> iterm2.ListPromptsResponse.Status
	37,  // 187: iterm2.GetProfilePropertyResponse.status:type_name -> iterm2.GetProfilePropertyResponse.Status
	131, // 188: iterm2.GetProfilePropertyResponse.properties:type_name -> iterm2.ProfileProperty
	209, // 189: iterm2.SetProfilePropertyRequest.guid_list:type_name -> iterm2.SetProfilePropertyRequest.GuidList
	210, // 190: iterm2.SetProfilePropertyRequest.assignments:type_name -> iterm2.SetProfilePropertyRequest.Assignment
	38,  // 191: iterm2.SetProfilePropertyResponse.status:type_name -> iterm2.SetProfilePropertyResponse.Status
	39,  // 192: iterm2.TransactionResponse.status:type_name -> iterm2.TransactionResponse.Status
	55,  // 193: iterm2.LineRange.windowed_coord_range:type_name -> iterm2.WindowedCoordRange
	140, // 194: iterm2.CoordRange.start:type_name -> iterm2.Coord
	140, // 195: iterm2.CoordRange.end:type_name -> iterm2.Coord
	142, // 196: iterm2.LineContents.code_points_per_cell:type_name -> iterm2.CodePointsPerCell
	40,  // 197: iterm2.LineContents.continuation:type_name -> iterm2.LineContents.Continuation
	41,  // 198: iterm2.SendTextResponse.status:type_name -> iterm2.SendTextResponse.Status
	147, // 199: iterm2.Frame.origin:type_name -> iterm2.Point
	146, // 200: iterm2.Frame.size:type_name -> iterm2.Size
	148, // 201: iterm2.SessionSummary.frame:type_name -> iterm2.Frame
	146, // 202: iterm2.SessionSummary.grid_size:type_name -> iterm2.Size
	211, // 203: iterm2.SplitTreeNode.links:type_name -> iterm2.SplitTreeNode.SplitTreeLink
	212, // 204: iterm2.ListSessionsResponse.windows:type_name -> iterm2.ListSessionsResponse.Window
	149, // 205: iterm2.ListSessionsResponse.buried_sessions:type_name -> iterm2.SessionSummary
	131, // 206: iterm2.CreateTabRequest.custom_profile_properties:type_name -> iterm2.ProfileProperty
	42,  // 207: iterm2.CreateTabResponse.status:type_name -> iterm2.CreateTabResponse.Status
	43,  // 208: iterm2.SplitPaneRequest.split_direction:type_name -> iterm2.SplitPaneRequest.SplitDirection
	131, // 209: iterm2.SplitPaneRequest.custom_profile_properties:type_name -> iterm2.ProfileProperty
	44,  // 210: iterm2.SplitPaneResponse.status:type_name -> iterm2.SplitPaneResponse.Status
	5,   // 211: iterm2.InvokeFunctionResponse.Error.status:type_name -> iterm2.InvokeFunctionResponse.Status
	146, // 212: iterm2.StatusBarComponentRequest.OpenPopover.size:type_name -> iterm2.Size
	57,  // 213: iterm2.SelectionRequest.SetSelectionRequest.selection:type_name -> iterm2.Selection
	57,  // 214: iterm2.SelectionResponse.GetSelectionResponse.selection:type_name -> iterm2.Selection
	175, // 215: iterm2.ColorPresetResponse.GetPreset.color_settings:type_name -> iterm2.ColorPresetResponse.GetPreset.ColorSetting
	177, // 216: iterm2.PreferencesRequest.Request.set_preference_request:type_name -> iterm2.PreferencesRequest.Request.SetPreference
	178, // 217: iterm2.PreferencesRequest.Request.get_preference_request:type_name -> iterm2.PreferencesRequest.Request.GetPreference
	179, // 218: iterm2.PreferencesRequest.Request.set_default_profile_request:type_name -> iterm2.PreferencesRequest.Request.SetDefaultProfile
	180, // 219: iterm2.PreferencesRequest.Request.get_default_profile_request:type_name -> iterm2.PreferencesRequest.Request.GetDefaultProfile
	185, // 220: iterm2.PreferencesResponse.Result.unrecognized_request:type_name -> iterm2.PreferencesResponse.Result.UnrecognizedResult
	182, // 221: iterm2.PreferencesResponse.Result.set_preference_result:type_name -> iterm2.PreferencesResponse.Result.SetPreferenceResult
	183, // 222: iterm2.PreferencesResponse.Result.get_preference_result:type_name -> iterm2.PreferencesResponse.Result.GetPreferenceResult
	184, // 223: iterm2.PreferencesResponse.Result.set_default_profile_result:type_name -> iterm2.PreferencesResponse.Result.SetDefaultProfileResult
	186, // 224: iterm2.PreferencesResponse.Result.get_default_profile_result:type_name -> iterm2.PreferencesResponse.Result.GetDefaultProfileResult
	11,  // 225: iterm2.PreferencesResponse.Result.SetPreferenceResult.status:type_name -> iterm2.PreferencesResponse.Result.SetPreferenceResult.Status
	12,  // 226: iterm2.PreferencesResponse.Result.SetDefaultProfileResult.status:type_name -> iterm2.PreferencesResponse.Result.SetDefaultProfileResult.Status
	196, // 227: iterm2.TmuxResponse.ListConnections.connections:type_name -> iterm2.TmuxResponse.ListConnections.Connection
	131, // 228: iterm2.ListProfilesResponse.Profile.properties:type_name -> iterm2.ProfileProperty
	205, // 229: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.knobs:type_name -> iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Knob
	206, // 230: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.icons:type_name -> iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Icon
	27,  // 231: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.format:type_name -> iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Format
	28,  // 232: iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Knob.type:type_name -> iterm2.RPCRegistrationRequest.StatusBarComponentAttributes.Knob.Type
	32,  // 233: iterm2.FocusChangedNotification.Window.window_status:type_name -> iterm2.FocusChangedNotification.Window.WindowStatus
	149, // 234: iterm2.SplitTreeNode.SplitTreeLink.session:type_name -> iterm2.SessionSummary
	150, // 235: iterm2.SplitTreeNode.SplitTreeLink.node:type_name -> iterm2.SplitTreeNode
	213, // 236: iterm2.ListSessionsResponse.Window.tabs:type_name -> iterm2.ListSessionsResponse.Tab
	148, // 237: iterm2.ListSessionsResponse.Window.frame:type_name -> iterm2.Frame
	150, // 238: iterm2.ListSessionsResponse.Tab.root:type_name -> iterm2.SplitTreeNode
	149, // 239: iterm2.ListSessionsResponse.Tab.minimized_sessions:type_name -> iterm2.SessionSummary
	240, // [240:240] is the sub-list for method output_type
	240, // [240:240] is the sub-list for method input_type
	240, // [240:240] is the sub-list for extension type_name
	240, // [240:240] is the sub-list for extension extendee
	0,   // [0:240] is the sub-list for field type_name
}

func init() { file_iterm2_proto_init() }
func file_iterm2_proto_init() {
	if File_iterm2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_iterm2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientOriginatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOriginatedMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBroadcastDomainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetBroadcastDomainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusBarComponentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusBarComponentResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WindowedCoordRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubSelection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Selection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorPresetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorPresetResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReorderTabsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReorderTabsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBroadcastDomainsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastDomain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBroadcastDomainsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTabLayoutRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetTabLayoutResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuItemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MenuItemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartSessionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RestartSessionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOriginatedRPCResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOriginatedRPCResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilesResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedArrangementRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SavedArrangementResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetPropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterToolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RegisterToolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeystrokePattern); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeystrokeMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeystrokeFilterRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileChangeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromptMonitorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Notification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BroadcastDomainsChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOriginatedRPC); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOriginatedRPCNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeystrokeNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ScreenUpdateNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromptNotificationPrompt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromptNotificationCommandStart); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromptNotificationCommandEnd); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PromptNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LocationChangeNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CustomEscapeSequenceNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewSessionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerminateSessionNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LayoutChangedNotification); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBufferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBufferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromptRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetPromptResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPromptsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListPromptsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProfileProperty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProfilePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProfilePropertyRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProfilePropertyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransactionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Range); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CoordRange); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Coord); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineContents); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CodePointsPerCell); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSessionsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTextRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTextResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Size); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Point); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Frame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SessionSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[105].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitTreeNode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[106].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSessionsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[107].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTabRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[108].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateTabResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[109].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitPaneRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[110].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitPaneResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[111].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionRequest_Tab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[112].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionRequest_Session); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[113].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionRequest_Window); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[114].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionRequest_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[115].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionRequest_Method); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[116].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionResponse_Error); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[117].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InvokeFunctionResponse_Success); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[118].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest_CloseTabs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[119].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest_CloseSessions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[120].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloseRequest_CloseWindows); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[121].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StatusBarComponentRequest_OpenPopover); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[122].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectionRequest_GetSelectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[123].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectionRequest_SetSelectionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[124].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectionResponse_GetSelectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[125].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SelectionResponse_SetSelectionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[126].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorPresetRequest_ListPresets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[127].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorPresetRequest_GetPreset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[128].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorPresetResponse_ListPresets); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[129].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorPresetResponse_GetPreset); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[130].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ColorPresetResponse_GetPreset_ColorSetting); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[131].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesRequest_Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[132].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesRequest_Request_SetPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[133].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesRequest_Request_GetPreference); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[134].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesRequest_Request_SetDefaultProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[135].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesRequest_Request_GetDefaultProfile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[136].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesResponse_Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[137].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesResponse_Result_SetPreferenceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[138].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesResponse_Result_GetPreferenceResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[139].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesResponse_Result_SetDefaultProfileResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[140].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesResponse_Result_UnrecognizedResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[141].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PreferencesResponse_Result_GetDefaultProfileResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[142].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReorderTabsRequest_Assignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[143].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxRequest_ListConnections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[144].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxRequest_SendCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[145].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxRequest_SetWindowVisible); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[146].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxRequest_CreateWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[147].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxResponse_ListConnections); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[148].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxResponse_SendCommand); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[149].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxResponse_SetWindowVisible); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[150].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxResponse_CreateWindow); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[151].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TmuxResponse_ListConnections_Connection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[152].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListProfilesResponse_Profile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[153].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VariableRequest_Set); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[154].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateRequest_App); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[155].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest_RPCArgumentSignature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[156].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest_RPCArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[157].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest_SessionTitleAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[158].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest_StatusBarComponentAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[159].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest_ContextMenuAttributes); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[160].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest_StatusBarComponentAttributes_Knob); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[161].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RPCRegistrationRequest_StatusBarComponentAttributes_Icon); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[162].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServerOriginatedRPC_RPCArgument); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[163].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FocusChangedNotification_Window); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[164].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProfilePropertyRequest_GuidList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[165].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProfilePropertyRequest_Assignment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[166].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitTreeNode_SplitTreeLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[167].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSessionsResponse_Window); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_iterm2_proto_msgTypes[168].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListSessionsResponse_Tab); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_iterm2_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*ClientOriginatedMessage_GetBufferRequest)(nil),
		(*ClientOriginatedMessage_GetPromptRequest)(nil),
		(*ClientOriginatedMessage_TransactionRequest)(nil),
		(*ClientOriginatedMessage_NotificationRequest)(nil),
		(*ClientOriginatedMessage_RegisterToolRequest)(nil),
		(*ClientOriginatedMessage_SetProfilePropertyRequest)(nil),
		(*ClientOriginatedMessage_ListSessionsRequest)(nil),
		(*ClientOriginatedMessage_SendTextRequest)(nil),
		(*ClientOriginatedMessage_CreateTabRequest)(nil),
		(*ClientOriginatedMessage_SplitPaneRequest)(nil),
		(*ClientOriginatedMessage_GetProfilePropertyRequest)(nil),
		(*ClientOriginatedMessage_SetPropertyRequest)(nil),
		(*ClientOriginatedMessage_GetPropertyRequest)(nil),
		(*ClientOriginatedMessage_InjectRequest)(nil),
		(*ClientOriginatedMessage_ActivateRequest)(nil),
		(*ClientOriginatedMessage_VariableRequest)(nil),
		(*ClientOriginatedMessage_SavedArrangementRequest)(nil),
		(*ClientOriginatedMessage_FocusRequest)(nil),
		(*ClientOriginatedMessage_ListProfilesRequest)(nil),
		(*ClientOriginatedMessage_ServerOriginatedRpcResultRequest)(nil),
		(*ClientOriginatedMessage_RestartSessionRequest)(nil),
		(*ClientOriginatedMessage_MenuItemRequest)(nil),
		(*ClientOriginatedMessage_SetTabLayoutRequest)(nil),
		(*ClientOriginatedMessage_GetBroadcastDomainsRequest)(nil),
		(*ClientOriginatedMessage_TmuxRequest)(nil),
		(*ClientOriginatedMessage_ReorderTabsRequest)(nil),
		(*ClientOriginatedMessage_PreferencesRequest)(nil),
		(*ClientOriginatedMessage_ColorPresetRequest)(nil),
		(*ClientOriginatedMessage_SelectionRequest)(nil),
		(*ClientOriginatedMessage_StatusBarComponentRequest)(nil),
		(*ClientOriginatedMessage_SetBroadcastDomainsRequest)(nil),
		(*ClientOriginatedMessage_CloseRequest)(nil),
		(*ClientOriginatedMessage_InvokeFunctionRequest)(nil),
		(*ClientOriginatedMessage_ListPromptsRequest)(nil),
	}
	file_iterm2_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*ServerOriginatedMessage_Error)(nil),
		(*ServerOriginatedMessage_GetBufferResponse)(nil),
		(*ServerOriginatedMessage_GetPromptResponse)(nil),
		(*ServerOriginatedMessage_TransactionResponse)(nil),
		(*ServerOriginatedMessage_NotificationResponse)(nil),
		(*ServerOriginatedMessage_RegisterToolResponse)(nil),
		(*ServerOriginatedMessage_SetProfilePropertyResponse)(nil),
		(*ServerOriginatedMessage_ListSessionsResponse)(nil),
		(*ServerOriginatedMessage_SendTextResponse)(nil),
		(*ServerOriginatedMessage_CreateTabResponse)(nil),
		(*ServerOriginatedMessage_SplitPaneResponse)(nil),
		(*ServerOriginatedMessage_GetProfilePropertyResponse)(nil),
		(*ServerOriginatedMessage_SetPropertyResponse)(nil),
		(*ServerOriginatedMessage_GetPropertyResponse)(nil),
		(*ServerOriginatedMessage_InjectResponse)(nil),
		(*ServerOriginatedMessage_ActivateResponse)(nil),
		(*ServerOriginatedMessage_VariableResponse)(nil),
		(*ServerOriginatedMessage_SavedArrangementResponse)(nil),
		(*ServerOriginatedMessage_FocusResponse)(nil),
		(*ServerOriginatedMessage_ListProfilesResponse)(nil),
		(*ServerOriginatedMessage_ServerOriginatedRpcResultResponse)(nil),
		(*ServerOriginatedMessage_RestartSessionResponse)(nil),
		(*ServerOriginatedMessage_MenuItemResponse)(nil),
		(*ServerOriginatedMessage_SetTabLayoutResponse)(nil),
		(*ServerOriginatedMessage_GetBroadcastDomainsResponse)(nil),
		(*ServerOriginatedMessage_TmuxResponse)(nil),
		(*ServerOriginatedMessage_ReorderTabsResponse)(nil),
		(*ServerOriginatedMessage_PreferencesResponse)(nil),
		(*ServerOriginatedMessage_ColorPresetResponse)(nil),
		(*ServerOriginatedMessage_SelectionResponse)(nil),
		(*ServerOriginatedMessage_StatusBarComponentResponse)(nil),
		(*ServerOriginatedMessage_SetBroadcastDomainsResponse)(nil),
		(*ServerOriginatedMessage_CloseResponse)(nil),
		(*ServerOriginatedMessage_InvokeFunctionResponse)(nil),
		(*ServerOriginatedMessage_ListPromptsResponse)(nil),
		(*ServerOriginatedMessage_Notification)(nil),
	}
	file_iterm2_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*InvokeFunctionRequest_Tab_)(nil),
		(*InvokeFunctionRequest_Session_)(nil),
		(*InvokeFunctionRequest_Window_)(nil),
		(*InvokeFunctionRequest_App_)(nil),
		(*InvokeFunctionRequest_Method_)(nil),
	}
	file_iterm2_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*InvokeFunctionResponse_Error_)(nil),
		(*InvokeFunctionResponse_Success_)(nil),
	}
	file_iterm2_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*CloseRequest_Tabs)(nil),
		(*CloseRequest_Sessions)(nil),
		(*CloseRequest_Windows)(nil),
	}
	file_iterm2_proto_msgTypes[8].OneofWrappers = []interface{}{
		(*StatusBarComponentRequest_OpenPopover_)(nil),
	}
	file_iterm2_proto_msgTypes[13].OneofWrappers = []interface{}{
		(*SelectionRequest_GetSelectionRequest_)(nil),
		(*SelectionRequest_SetSelectionRequest_)(nil),
	}
	file_iterm2_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*SelectionResponse_GetSelectionResponse_)(nil),
		(*SelectionResponse_SetSelectionResponse_)(nil),
	}
	file_iterm2_proto_msgTypes[15].OneofWrappers = []interface{}{
		(*ColorPresetRequest_ListPresets_)(nil),
		(*ColorPresetRequest_GetPreset_)(nil),
	}
	file_iterm2_proto_msgTypes[16].OneofWrappers = []interface{}{
		(*ColorPresetResponse_ListPresets_)(nil),
		(*ColorPresetResponse_GetPreset_)(nil),
	}
	file_iterm2_proto_msgTypes[21].OneofWrappers = []interface{}{
		(*TmuxRequest_ListConnections_)(nil),
		(*TmuxRequest_SendCommand_)(nil),
		(*TmuxRequest_SetWindowVisible_)(nil),
		(*TmuxRequest_CreateWindow_)(nil),
	}
	file_iterm2_proto_msgTypes[22].OneofWrappers = []interface{}{
		(*TmuxResponse_ListConnections_)(nil),
		(*TmuxResponse_SendCommand_)(nil),
		(*TmuxResponse_SetWindowVisible_)(nil),
		(*TmuxResponse_CreateWindow_)(nil),
	}
	file_iterm2_proto_msgTypes[32].OneofWrappers = []interface{}{
		(*ServerOriginatedRPCResultRequest_JsonException)(nil),
		(*ServerOriginatedRPCResultRequest_JsonValue)(nil),
	}
	file_iterm2_proto_msgTypes[40].OneofWrappers = []interface{}{
		(*VariableRequest_SessionId)(nil),
		(*VariableRequest_TabId)(nil),
		(*VariableRequest_App)(nil),
		(*VariableRequest_WindowId)(nil),
	}
	file_iterm2_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*ActivateRequest_WindowId)(nil),
		(*ActivateRequest_TabId)(nil),
		(*ActivateRequest_SessionId)(nil),
	}
	file_iterm2_proto_msgTypes[46].OneofWrappers = []interface{}{
		(*GetPropertyRequest_WindowId)(nil),
		(*GetPropertyRequest_SessionId)(nil),
	}
	file_iterm2_proto_msgTypes[48].OneofWrappers = []interface{}{
		(*SetPropertyRequest_WindowId)(nil),
		(*SetPropertyRequest_SessionId)(nil),
	}
	file_iterm2_proto_msgTypes[51].OneofWrappers = []interface{}{
		(*RPCRegistrationRequest_SessionTitleAttributes_)(nil),
		(*RPCRegistrationRequest_StatusBarComponentAttributes_)(nil),
		(*RPCRegistrationRequest_ContextMenuAttributes_)(nil),
	}
	file_iterm2_proto_msgTypes[59].OneofWrappers = []interface{}{
		(*NotificationRequest_RpcRegistrationRequest)(nil),
		(*NotificationRequest_KeystrokeMonitorRequest)(nil),
		(*NotificationRequest_VariableMonitorRequest)(nil),
		(*NotificationRequest_ProfileChangeRequest)(nil),
		(*NotificationRequest_KeystrokeFilterRequest)(nil),
		(*NotificationRequest_PromptMonitorRequest)(nil),
	}
	file_iterm2_proto_msgTypes[72].OneofWrappers = []interface{}{
		(*PromptNotification_Prompt)(nil),
		(*PromptNotification_CommandStart)(nil),
		(*PromptNotification_CommandEnd)(nil),
	}
	file_iterm2_proto_msgTypes[76].OneofWrappers = []interface{}{
		(*FocusChangedNotification_ApplicationActive)(nil),
		(*FocusChangedNotification_Window_)(nil),
		(*FocusChangedNotification_SelectedTab)(nil),
		(*FocusChangedNotification_Session)(nil),
	}
	file_iterm2_proto_msgTypes[88].OneofWrappers = []interface{}{
		(*SetProfilePropertyRequest_Session)(nil),
		(*SetProfilePropertyRequest_GuidList_)(nil),
	}
	file_iterm2_proto_msgTypes[131].OneofWrappers = []interface{}{
		(*PreferencesRequest_Request_SetPreferenceRequest)(nil),
		(*PreferencesRequest_Request_GetPreferenceRequest)(nil),
		(*PreferencesRequest_Request_SetDefaultProfileRequest)(nil),
		(*PreferencesRequest_Request_GetDefaultProfileRequest)(nil),
	}
	file_iterm2_proto_msgTypes[136].OneofWrappers = []interface{}{
		(*PreferencesResponse_Result_UnrecognizedRequest)(nil),
		(*PreferencesResponse_Result_SetPreferenceResult_)(nil),
		(*PreferencesResponse_Result_GetPreferenceResult_)(nil),
		(*PreferencesResponse_Result_SetDefaultProfileResult_)(nil),
		(*PreferencesResponse_Result_GetDefaultProfileResult_)(nil),
	}
	file_iterm2_proto_msgTypes[166].OneofWrappers = []interface{}{
		(*SplitTreeNode_SplitTreeLink_Session)(nil),
		(*SplitTreeNode_SplitTreeLink_Node)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_iterm2_proto_rawDesc,
			NumEnums:      45,
			NumMessages:   169,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_iterm2_proto_goTypes,
		DependencyIndexes: file_iterm2_proto_depIdxs,
		EnumInfos:         file_iterm2_proto_enumTypes,
		MessageInfos:      file_iterm2_proto_msgTypes,
	}.Build()
	File_iterm2_proto = out.File
	file_iterm2_proto_rawDesc = nil
	file_iterm2_proto_goTypes = nil
	file_iterm2_proto_depIdxs = nil
}
